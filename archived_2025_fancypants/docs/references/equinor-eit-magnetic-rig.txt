Directory structure:
└── equinor-eit-magnetic-rig/
    ├── README.md
    ├── flow.json
    ├── flow_cred.json
    ├── flows.json
    ├── flows_cred.json
    ├── LICENSE
    ├── package.json
    ├── homing/
    │   ├── README.md
    │   ├── Cargo.toml
    │   ├── LICENSE_APACHE
    │   ├── LICENSE_MIT
    │   ├── .appveyor.yml
    │   ├── .cargo-ok
    │   ├── .gitignore
    │   ├── .travis.yml
    │   ├── src/
    │   │   ├── lib.rs
    │   │   └── utils.rs
    │   └── tests/
    │       └── web.rs
    └── nodes/
        ├── cli.js
        ├── homing.js
        ├── lower-case.html
        ├── lower-case.js
        ├── magnetic-sensors.html
        ├── magnetic-sensors.js
        ├── package-lock.json
        ├── package.json
        ├── parse-status.html
        ├── parse-status.js
        ├── Test data.txt
        ├── test-pri.js
        ├── .gitignore
        └── homing/
            ├── README.md
            ├── homing.d.ts
            ├── homing.js
            ├── homing_bg.js
            ├── homing_bg.wasm
            ├── homing_bg.wasm.d.ts
            └── package.json

================================================
FILE: README.md
================================================
Magnetic_mapping_test
=====================

### About

This is your project's README.md file. It helps users understand what your
project does, how to use it and anything else they may need to know.


================================================
FILE: flow.json
================================================
[
    {
        "id": "7f063300.e79e2c",
        "type": "tab",
        "label": "Main",
        "disabled": false,
        "info": ""
    },
    {
        "id": "2e60473f.e3bb9",
        "type": "tab",
        "label": "Homing",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8a5ecff9.35f98",
        "type": "tab",
        "label": "Manual homing",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3ac44c2f.c95524",
        "type": "tab",
        "label": "Mapping config",
        "disabled": false,
        "info": ""
    },
    {
        "id": "6108fa1d.d7726c",
        "type": "tab",
        "label": "Mapping",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d900094f.ace7f8",
        "type": "tab",
        "label": "Custom Node Tester",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ac33877c.a8fa08",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "ec2c78e7.48ac68",
        "type": "ui_tab",
        "name": "Magnetic homing",
        "icon": "wifi_tethering",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "dc63712a.a007d",
        "type": "ui_tab",
        "name": "Manual homing",
        "icon": "flight_land",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "428976bf.20c0c",
        "type": "ui_group",
        "name": "Homing & control",
        "tab": "ec2c78e7.48ac68",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "591df4c.3244c0c",
        "type": "ui_group",
        "name": "Control",
        "tab": "dc63712a.a007d",
        "order": 1,
        "disp": true,
        "width": "3",
        "collapse": false
    },
    {
        "id": "19dc6535.e7fc1b",
        "type": "ui_group",
        "name": "Mapping",
        "tab": "ec2c78e7.48ac68",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "f9aacf92.64234",
        "type": "ui_group",
        "name": "Z sensor",
        "tab": "dc63712a.a007d",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "b6c12137.ce6d28",
        "type": "ui_group",
        "name": "Status",
        "tab": "ec2c78e7.48ac68",
        "order": 3,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "d534b0ff.92c37",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "428976bf.20c0c",
        "order": 15,
        "width": "6",
        "height": 1
    },
    {
        "id": "d12f49f7.adc66",
        "type": "serial-port",
        "serialport": "/dev/tty.usbserial-AR0JZC14",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "b6f29518.234608",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "19dc6535.e7fc1b",
        "order": 12,
        "width": "6",
        "height": 1
    },
    {
        "id": "7d7753a1.b4c074",
        "type": "ui_group",
        "name": "ABC",
        "tab": "dc63712a.a007d",
        "order": 3,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "23d9e16c.3ccade",
        "type": "serial-port",
        "serialport": "COM15",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "7c347d5.1a5be84",
        "type": "inject",
        "z": "d900094f.ace7f8",
        "name": "UPPER CASE",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "TEST ME",
        "payloadType": "str",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "9790f8a0.fcf458"
            ]
        ]
    },
    {
        "id": "28e8fb72.4d2f14",
        "type": "debug",
        "z": "d900094f.ace7f8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 100,
        "wires": []
    },
    {
        "id": "d79d9389.4237e",
        "type": "debug",
        "z": "7f063300.e79e2c",
        "name": "Serial_out",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 340,
        "wires": []
    },
    {
        "id": "b3bc9b36.b26108",
        "type": "debug",
        "z": "7f063300.e79e2c",
        "name": "Serial_in",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 240,
        "y": 180,
        "wires": []
    },
    {
        "id": "5f9ef5f2.41238c",
        "type": "inject",
        "z": "7f063300.e79e2c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "?",
        "payloadType": "str",
        "x": 90,
        "y": 140,
        "wires": [
            [
                "b3bc9b36.b26108",
                "ca791134.731c7"
            ]
        ]
    },
    {
        "id": "ca791134.731c7",
        "type": "function",
        "z": "7f063300.e79e2c",
        "name": "Add \\r",
        "func": "msg.payload = Buffer.from(msg.payload + \"\\r\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 230,
        "y": 140,
        "wires": [
            [
                "1ad27c4c.a6e794"
            ]
        ]
    },
    {
        "id": "38d25aa3.d6580e",
        "type": "link in",
        "z": "7f063300.e79e2c",
        "name": "Serial_input",
        "links": [
            "49289952.0e04a",
            "4a5b167.45f1568",
            "4ed60fca.8ac768",
            "8b2f7664.264fd",
            "9d4166eb.d05a78",
            "b01522cc.745b1",
            "b9ac647d.0cc668",
            "baa522d2.b10c9",
            "f42cbe78.6f032",
            "6314f116.228558",
            "f0c2bad9.054be",
            "89cb8674.5b0c78",
            "d96f529d.e8e51",
            "285d3699.852f5a",
            "1ba1fb7f.ce4f35",
            "74cd4172.86bae",
            "3817afc6.347c78",
            "733a76f9.28d46",
            "ecead1b3.5847d",
            "5e835f2b.88e8c",
            "2acd7e92.f0bd6a",
            "62af7a45.26d0a4",
            "4c14f6c.eb00988",
            "32bbac3b.395f5c",
            "51a206cb.6ed478",
            "2e8d1595.1019ba",
            "778940af.bb2a78",
            "ea4be306.52a4",
            "f3721906.7a4c7",
            "7a3f7c66.89a504",
            "7cdf5cdb.7cb48c",
            "3cfdba29.01e876",
            "d188d5e0.6dc478",
            "671d5129.c184e",
            "d852b2ea.2060f",
            "457efe09.79c0d8",
            "a5dd9dfa.937f08",
            "370024e7.4f9cbc",
            "59bedb08.68c064",
            "12926956.a9e237",
            "aec888aa.3cf53"
        ],
        "x": 115,
        "y": 180,
        "wires": [
            [
                "b3bc9b36.b26108",
                "ca791134.731c7",
                "e8eed4dd.986b5"
            ]
        ]
    },
    {
        "id": "2e81c7b7.2e83f8",
        "type": "comment",
        "z": "7f063300.e79e2c",
        "name": "Serial output logic",
        "info": "",
        "x": 130,
        "y": 100,
        "wires": []
    },
    {
        "id": "953ac585.e6b0d",
        "type": "comment",
        "z": "7f063300.e79e2c",
        "name": "Serial input logic",
        "info": "",
        "x": 120,
        "y": 300,
        "wires": []
    },
    {
        "id": "50fb7f6.ce6138",
        "type": "debug",
        "z": "d900094f.ace7f8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 240,
        "wires": []
    },
    {
        "id": "aac88861.e8dbf8",
        "type": "debug",
        "z": "d900094f.ace7f8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 180,
        "wires": []
    },
    {
        "id": "fe371197.e4108",
        "type": "inject",
        "z": "d900094f.ace7f8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "ok",
        "payloadType": "str",
        "x": 130,
        "y": 180,
        "wires": [
            [
                "1e63a250.aa89ce"
            ]
        ]
    },
    {
        "id": "8f560944.167318",
        "type": "inject",
        "z": "d900094f.ace7f8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "<Idle|MPos:0.000,-10.000,5.000|WCO:0.000,1.551,5.664|Bf:15,128>",
        "payloadType": "str",
        "x": 130,
        "y": 240,
        "wires": [
            [
                "1e63a250.aa89ce"
            ]
        ]
    },
    {
        "id": "1e74c5b9.cf98a2",
        "type": "function",
        "z": "3ac44c2f.c95524",
        "name": "Set mapping variables",
        "func": "var x=global.get('width') || 0;\nvar y=global.get('depth') || 0;\nvar z=global.get('height') || 0;\nvar yResolution=global.get('yResolution') || 0;\nvar zResolution=global.get('zResolution') || 0;\nvar feed = global.get('feed');\n\nvar sampleRate = 5;\nvar seconds = (x*60)/(feed/10);\n\nvar xSamples = seconds * sampleRate;\nvar rows = 1 + y/yResolution;\nvar columns = 1 + z/zResolution;\nif(y==1){rows = 1}\nif(z==1){columns = 1}\n\nvar noOfSamples = Math.round(xSamples*rows*columns);\n\nglobal.set('rows', rows);\nglobal.set('columns', columns);\nglobal.set('noOfSamples', noOfSamples);\nglobal.set('scanLength', (x*rows*columns));\n\nvar msg1 = { payload:x + \"x\" + y + \"x\" + z };\nvar msg2 = { payload:x + \" (cm)x\" + rows + \"x\" + columns };\nvar msg3 = { payload:noOfSamples };\nreturn [msg1, msg2, msg3];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 820,
        "y": 240,
        "wires": [
            [
                "2c257bfc.b3892c"
            ],
            [
                "e10053f0.f7db2"
            ],
            [
                "16d8fca0.ca9cd3",
                "46cfb820.6425a"
            ]
        ]
    },
    {
        "id": "46cfb820.6425a",
        "type": "function",
        "z": "3ac44c2f.c95524",
        "name": "Set duration",
        "func": "var scanLength = global.get('scanLength');\nvar feed = global.get('feed') || 0;\nvar duration = (scanLength/(feed/10))/60;\nmsg.payload = Math.round(duration);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 790,
        "y": 360,
        "wires": [
            [
                "844f603d.839028"
            ]
        ]
    },
    {
        "id": "434a0259.082f6c",
        "type": "inject",
        "z": "3ac44c2f.c95524",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "40",
        "payloadType": "num",
        "x": 90,
        "y": 320,
        "wires": [
            [
                "20295fc.637fd2"
            ]
        ]
    },
    {
        "id": "ca8662d6.81d6e8",
        "type": "function",
        "z": "3ac44c2f.c95524",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('width', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 260,
        "wires": [
            [
                "1e74c5b9.cf98a2"
            ]
        ]
    },
    {
        "id": "3963988d.8866d",
        "type": "function",
        "z": "3ac44c2f.c95524",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('depth', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 320,
        "wires": [
            [
                "1e74c5b9.cf98a2"
            ]
        ]
    },
    {
        "id": "9aa4fe40.8c5be8",
        "type": "function",
        "z": "3ac44c2f.c95524",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('height', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 380,
        "wires": [
            [
                "1e74c5b9.cf98a2"
            ]
        ]
    },
    {
        "id": "f12d9a91.89638",
        "type": "function",
        "z": "3ac44c2f.c95524",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('mappingMode', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "7a2a01af.443a8",
        "type": "inject",
        "z": "3ac44c2f.c95524",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "23",
        "payloadType": "num",
        "x": 90,
        "y": 380,
        "wires": [
            [
                "5a419d7c.d81d8c"
            ]
        ]
    },
    {
        "id": "86f34a0d.2f4ce",
        "type": "inject",
        "z": "3ac44c2f.c95524",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "60",
        "payloadType": "num",
        "x": 90,
        "y": 260,
        "wires": [
            [
                "319af572.52139a"
            ]
        ]
    },
    {
        "id": "b906f47d.43c948",
        "type": "comment",
        "z": "3ac44c2f.c95524",
        "name": "Mapping config",
        "info": "",
        "x": 120,
        "y": 40,
        "wires": []
    },
    {
        "id": "36d7594f.16f9be",
        "type": "inject",
        "z": "3ac44c2f.c95524",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 90,
        "y": 80,
        "wires": [
            [
                "769b7dc8.8871ec"
            ]
        ]
    },
    {
        "id": "a808b362.6aa43",
        "type": "csv",
        "z": "6108fa1d.d7726c",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "once",
        "multi": "one",
        "ret": "\\n",
        "temp": "sample_a,sample_b,sample_c,sample_z,tss",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 530,
        "y": 740,
        "wires": [
            [
                "26388fdf.d47078"
            ]
        ]
    },
    {
        "id": "ba658e1b.1b204",
        "type": "debug",
        "z": "6108fa1d.d7726c",
        "name": "Values CSV",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 740,
        "wires": []
    },
    {
        "id": "d28e8ad4.4282f",
        "type": "function",
        "z": "6108fa1d.d7726c",
        "name": "Prep vals",
        "func": "var sample_a = msg.payload.a;\nvar sample_b = msg.payload.b;\nvar sample_c = msg.payload.c;\nvar sample_z = msg.payload.z;\nvar tss = msg.payload.timestamp;\nmsg.payload = {sample_a, sample_b, sample_c, sample_z, tss};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 740,
        "wires": [
            [
                "a808b362.6aa43"
            ]
        ]
    },
    {
        "id": "af3be035.37dec",
        "type": "file",
        "z": "6108fa1d.d7726c",
        "name": "Values file",
        "filename": "",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 840,
        "y": 740,
        "wires": [
            [
                "ba658e1b.1b204"
            ]
        ]
    },
    {
        "id": "3a0715a6.cd3b7a",
        "type": "function",
        "z": "6108fa1d.d7726c",
        "name": "Generate gcode",
        "func": "global.set('MappingActive', msg.payload);\nglobal.set('sampleNumber', 0);\n\nvar mappingMode=global.get('mappingMode') || 1;\n\nvar width=global.get('width') || 1;\nvar depth=global.get('depth') || 1;\nvar height=global.get('height') || 1;\n\nvar rows=global.get('rows') || 1;\nvar columns=global.get('columns') || 1;\n\nvar feed=global.get('feed') || 100;\nvar yResolution=global.get('yResolution') || 1;\nvar zResolution=global.get('zResolution') || 1;\n\nvar origoX=global.get('origoX') || 535;\nvar origoY=global.get('origoY') || 315;\nvar origoZ=global.get('origoZ') || 230;\n\nvar xStartPos=origoX - (width*10)/2;\nvar yStartPos=origoY - (depth*10)/2;\n\nif(width == 1){xStartPos = origoX}\nif(depth == 1){yStartPos = origoY}\n\nvar xEndPos = xStartPos + width*10;\nvar yEndPos = yStartPos + Math.round(10*rows*yResolution);\n\nvar zStartPos=-origoZ;\n\nvar xPos=xStartPos;\nvar xPos2=xEndPos;\nvar yPos=yStartPos;\nvar yPosOld;\nvar zPos=zStartPos;\n//global.set('temp', \"depth: \" + depth + \" origoY: \" + origoY + \" yStartPos:\" + yStartPos + \" (depth*10)/2: \" + ((depth*10)/2)+ \" yPos: \" + yPos + \" (y*yResolution*10): \" + (y*yResolution*10));\nvar gcode=\"\";\n\nvar forwardX = true;\nvar forwardY = true;\n\nvar x=1;\nvar y=1;\nvar z=1;\n\n// Continous mode\nif(mappingMode == 1){\n    for (z=1; z<=columns; z++) {\n        for (y=1; y<=rows; y++) {\n            if(forwardX == true){\n                xPos = xStartPos;\n                xPos2 = xEndPos;\n            }\n            else{\n                xPos = xEndPos;\n                xPos2 = xStartPos;\n            }\n            gcode=\"G1 G90 G21 X\"+ xPos + \" Y\"+ yPos + \" Z\"+ zPos + \" F\"+feed;\n            msg.payload = gcode;\n            node.send(msg);\n            gcode=\"G1 G90 G21 X\"+ xPos2 + \" Y\"+ yPos + \" Z\"+ zPos + \" F\"+feed;\n            msg.payload = gcode;\n            node.send(msg);\n            forwardX = !forwardX;\n            yPosOld = yPos;\n            if(forwardY == true){\n                yPos = yStartPos + Math.round(10*y*yResolution);\n            }\n            else{\n                yPos = yEndPos - Math.round(10*y*yResolution);\n            }\n        }\n        zPos = zStartPos + Math.round(10*z*zResolution);\n        if(forwardY == true){\n            yPos = yPosOld;\n        }\n        forwardY = !forwardY;\n    }\n}\n// Grid mode\nelse if(mappingMode == 2){\n    for (z=1; z<=columns; z++) {\n        for (y=1; y<=rows; y++) {\n            for (x=0; x<=width; x++) {\n                xPos = xStartPos + Math.round(x/yResolution);\n                gcode=\"$J=G90 G21 X\"+ xPos + \" Y\"+ yPos + \" Z\"+ zPos + \" F\"+feed;\n                msg.payload = gcode;\n                node.send(msg);\n            }\n            yPos = yStartPos + Math.round(10*y*yResolution);\n        }\n        zPos = zStartPos + Math.round(10*z*zResolution);\n        yPos = yStartPos;\n    }\n}\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 280,
        "y": 160,
        "wires": [
            [
                "6a5a4551.de6ba4",
                "73974dc9.123b74",
                "e518d89c.c8f178"
            ]
        ]
    },
    {
        "id": "12137736.641b99",
        "type": "inject",
        "z": "6108fa1d.d7726c",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 180,
        "wires": [
            [
                "3a0715a6.cd3b7a"
            ]
        ]
    },
    {
        "id": "c939301c.1d0a58",
        "type": "comment",
        "z": "6108fa1d.d7726c",
        "name": "Create mapping gcode",
        "info": "",
        "x": 120,
        "y": 20,
        "wires": []
    },
    {
        "id": "b8ac687a.3f5ad",
        "type": "inject",
        "z": "7f063300.e79e2c",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"timestamp\":0,\"number\":0,\"position\":{\"x\":0,\"y\":0,\"z\":0},\"values\":{\"a\":0,\"b\":0,\"c\":0,\"z\":0}}",
        "payloadType": "json",
        "x": 90,
        "y": 840,
        "wires": [
            [
                "c5c7a2b0.e1924",
                "d93aace.e1ac3d"
            ]
        ]
    },
    {
        "id": "c5c7a2b0.e1924",
        "type": "function",
        "z": "7f063300.e79e2c",
        "name": "Set Sample",
        "func": "global.set('sample', msg.payload);\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 250,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "eb84a9c4.428dc8",
        "type": "comment",
        "z": "7f063300.e79e2c",
        "name": "Initialize global Sample array",
        "info": "",
        "x": 160,
        "y": 800,
        "wires": []
    },
    {
        "id": "8f808b80.450cb",
        "type": "file",
        "z": "6108fa1d.d7726c",
        "name": "Gcode file",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 650,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "a458eb64.8f51c",
        "type": "inject",
        "z": "6108fa1d.d7726c",
        "name": "Idle",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "<Idle|WPos:100.000,0.000,0.000|FS:0,0>",
        "payloadType": "str",
        "x": 90,
        "y": 380,
        "wires": [
            [
                "9fce6ec5.b3a0d"
            ]
        ]
    },
    {
        "id": "f3206f39.727ea8",
        "type": "inject",
        "z": "6108fa1d.d7726c",
        "name": "Jog",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "<Jog|WPos:100.000,0.000,0.000|FS:0,0>",
        "payloadType": "str",
        "x": 90,
        "y": 420,
        "wires": [
            [
                "9fce6ec5.b3a0d"
            ]
        ]
    },
    {
        "id": "1b6ca926.380dd7",
        "type": "inject",
        "z": "6108fa1d.d7726c",
        "name": "Run",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "<Run|WPos:123.000,321.000,225.000|FS:0,0>",
        "payloadType": "str",
        "x": 90,
        "y": 460,
        "wires": [
            [
                "9fce6ec5.b3a0d"
            ]
        ]
    },
    {
        "id": "f4f821ea.7015f8",
        "type": "debug",
        "z": "6108fa1d.d7726c",
        "name": "Status",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 360,
        "wires": []
    },
    {
        "id": "fcf83723.36a208",
        "type": "inject",
        "z": "6108fa1d.d7726c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Error:15",
        "payloadType": "str",
        "x": 90,
        "y": 340,
        "wires": [
            [
                "9fce6ec5.b3a0d"
            ]
        ]
    },
    {
        "id": "8589916.e6e347",
        "type": "inject",
        "z": "6108fa1d.d7726c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Ok",
        "payloadType": "str",
        "x": 90,
        "y": 300,
        "wires": [
            [
                "9fce6ec5.b3a0d"
            ]
        ]
    },
    {
        "id": "9fce6ec5.b3a0d",
        "type": "switch",
        "z": "6108fa1d.d7726c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Ok",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "Error:",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 250,
        "y": 340,
        "wires": [
            [
                "b7c442b7.9c023"
            ],
            [
                "b692dc9.672872"
            ],
            [
                "c163e9bc.6117f8"
            ]
        ]
    },
    {
        "id": "b692dc9.672872",
        "type": "change",
        "z": "6108fa1d.d7726c",
        "name": "Error code",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Error:",
                "fromt": "str",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 340,
        "wires": [
            [
                "f4f821ea.7015f8"
            ]
        ]
    },
    {
        "id": "49289952.0e04a",
        "type": "link out",
        "z": "6108fa1d.d7726c",
        "name": "Serial_in",
        "links": [
            "38d25aa3.d6580e"
        ],
        "x": 715,
        "y": 300,
        "wires": []
    },
    {
        "id": "b7c442b7.9c023",
        "type": "change",
        "z": "6108fa1d.d7726c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "control",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "trigger",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 300,
        "wires": [
            [
                "6a5a4551.de6ba4"
            ]
        ]
    },
    {
        "id": "a6cc3eb3.69cf18",
        "type": "link out",
        "z": "7f063300.e79e2c",
        "name": "Serial_out",
        "links": [
            "5f1266fd.13186",
            "1506d33f.8cbb65",
            "dd1ef2cb.922ee8"
        ],
        "x": 575,
        "y": 420,
        "wires": []
    },
    {
        "id": "5f1266fd.13186",
        "type": "link in",
        "z": "6108fa1d.d7726c",
        "name": "Serial_out",
        "links": [
            "a6cc3eb3.69cf18"
        ],
        "x": 115,
        "y": 500,
        "wires": [
            [
                "9fce6ec5.b3a0d"
            ]
        ]
    },
    {
        "id": "6314f116.228558",
        "type": "link out",
        "z": "6108fa1d.d7726c",
        "name": "Serial_in",
        "links": [
            "38d25aa3.d6580e"
        ],
        "x": 995,
        "y": 260,
        "wires": []
    },
    {
        "id": "da094177.3f1e3",
        "type": "change",
        "z": "6108fa1d.d7726c",
        "name": "Request status from controller",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "?",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 260,
        "wires": [
            [
                "6314f116.228558"
            ]
        ]
    },
    {
        "id": "e8eed4dd.986b5",
        "type": "switch",
        "z": "7f063300.e79e2c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "?",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ok",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Ok",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 230,
        "y": 220,
        "wires": [
            [
                "6e672cee.8cf96c"
            ],
            [],
            []
        ]
    },
    {
        "id": "a2eeebbc.7e8e78",
        "type": "change",
        "z": "6108fa1d.d7726c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "control",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 260,
        "wires": [
            [
                "6a5a4551.de6ba4"
            ]
        ]
    },
    {
        "id": "9f9b84f8.249b3",
        "type": "inject",
        "z": "6108fa1d.d7726c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Reset",
        "payloadType": "str",
        "x": 90,
        "y": 220,
        "wires": [
            [
                "1ef07d45.b639d3"
            ]
        ]
    },
    {
        "id": "2b113950.5e9f66",
        "type": "switch",
        "z": "6108fa1d.d7726c",
        "name": "New gcode line when Idle",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Idle",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 650,
        "y": 440,
        "wires": [
            [
                "30dc015.38898fe"
            ]
        ]
    },
    {
        "id": "30dc015.38898fe",
        "type": "delay",
        "z": "6108fa1d.d7726c",
        "name": "",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 850,
        "y": 440,
        "wires": [
            [
                "558e16e9.0c57e",
                "86879b49.22ae78"
            ]
        ]
    },
    {
        "id": "d956850.0b94178",
        "type": "function",
        "z": "6108fa1d.d7726c",
        "name": "Reset SampleNumber and GUI",
        "func": "global.set('MappingActive', '0');\nglobal.set('sampleNumber', 0);\nglobal.set('noOfSamples', 0)\nmsg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 220,
        "wires": [
            [
                "c54aa4a0.d99ac"
            ]
        ]
    },
    {
        "id": "c54aa4a0.d99ac",
        "type": "link out",
        "z": "6108fa1d.d7726c",
        "name": "GUI",
        "links": [
            "49b17742.94cf1",
            "518385b2.08b734",
            "faca8e54.fea95",
            "7d29b514.480c3c"
        ],
        "x": 495,
        "y": 220,
        "wires": []
    },
    {
        "id": "37799c6b.fd4254",
        "type": "inject",
        "z": "3ac44c2f.c95524",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "300",
        "payloadType": "num",
        "x": 90,
        "y": 440,
        "wires": [
            [
                "194c48fe.71d01f"
            ]
        ]
    },
    {
        "id": "8a6512dc.f5fd6",
        "type": "function",
        "z": "3ac44c2f.c95524",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('feed', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 440,
        "wires": [
            [
                "1e74c5b9.cf98a2"
            ]
        ]
    },
    {
        "id": "870d55c4.fbf018",
        "type": "link in",
        "z": "3ac44c2f.c95524",
        "name": "Remaining_in",
        "links": [
            "1c6d6c73.be5c5c",
            "d54468a2.c58118"
        ],
        "x": 675,
        "y": 360,
        "wires": [
            [
                "46cfb820.6425a"
            ]
        ]
    },
    {
        "id": "fe49f8de.db4a78",
        "type": "inject",
        "z": "2e60473f.e3bb9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "535",
        "payloadType": "num",
        "x": 90,
        "y": 80,
        "wires": [
            [
                "64b7eec5.aab8a",
                "89259461.defe58"
            ]
        ]
    },
    {
        "id": "89259461.defe58",
        "type": "function",
        "z": "2e60473f.e3bb9",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('origoX', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "895cbe5f.525b3",
        "type": "inject",
        "z": "2e60473f.e3bb9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "320",
        "payloadType": "num",
        "x": 90,
        "y": 140,
        "wires": [
            [
                "4da67d76.cdaf6c",
                "91c41b54.aa89c"
            ]
        ]
    },
    {
        "id": "91c41b54.aa89c",
        "type": "function",
        "z": "2e60473f.e3bb9",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('origoY', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "d7c911b.feb897",
        "type": "inject",
        "z": "2e60473f.e3bb9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "235",
        "payloadType": "num",
        "x": 90,
        "y": 200,
        "wires": [
            [
                "3575ff85.312a48",
                "e0afc966.39517"
            ]
        ],
        "info": "244 is max before physically crashing"
    },
    {
        "id": "e0afc966.39517",
        "type": "function",
        "z": "2e60473f.e3bb9",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('origoZ', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "afa59552.ecf478",
        "type": "function",
        "z": "2e60473f.e3bb9",
        "name": "",
        "func": "var origoX = global.get('origoX');\nvar origoY = global.get('origoY');\n// Add 8mm extra y travel due to secondary dipping down at an angle\nvar y = origoY + 0;\nvar origoZ = global.get('origoZ');\nvar feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar gcode=\"$J=G90G21X\"+ origoX + \"Y\" + y + \"Z-\" + origoZ + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 260,
        "wires": [
            [
                "1ba1fb7f.ce4f35"
            ]
        ]
    },
    {
        "id": "1ba1fb7f.ce4f35",
        "type": "link out",
        "z": "2e60473f.e3bb9",
        "name": "Serial_in",
        "links": [
            "38d25aa3.d6580e"
        ],
        "x": 495,
        "y": 260,
        "wires": []
    },
    {
        "id": "e0cff9aa.75ab48",
        "type": "function",
        "z": "2e60473f.e3bb9",
        "name": "",
        "func": "var feed = 100;\nvar jogIncrement = 14;\nvar yDipComp = 0;\nvar gcode=\"$J=G91G21y\" + yDipComp + \"Z-\"+ jogIncrement + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 300,
        "wires": [
            [
                "74cd4172.86bae"
            ]
        ]
    },
    {
        "id": "74cd4172.86bae",
        "type": "link out",
        "z": "2e60473f.e3bb9",
        "name": "Serial_in",
        "links": [
            "38d25aa3.d6580e"
        ],
        "x": 495,
        "y": 300,
        "wires": []
    },
    {
        "id": "d001ea07.c158d8",
        "type": "inject",
        "z": "2e60473f.e3bb9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 90,
        "y": 360,
        "wires": [
            [
                "719757f8.e74f98"
            ]
        ]
    },
    {
        "id": "52c18933.20b0a",
        "type": "function",
        "z": "2e60473f.e3bb9",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('homingProfile', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "434e406b.637c5",
        "type": "inject",
        "z": "2e60473f.e3bb9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 90,
        "y": 420,
        "wires": [
            [
                "d6c25f3e.9ac72"
            ]
        ]
    },
    {
        "id": "affe39e5.4528f8",
        "type": "function",
        "z": "2e60473f.e3bb9",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('homingMode', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "41f2e6ee.f50d2",
        "type": "inject",
        "z": "2e60473f.e3bb9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "100",
        "payloadType": "num",
        "x": 90,
        "y": 580,
        "wires": [
            [
                "5bd09f3c.9984a"
            ]
        ]
    },
    {
        "id": "7e8c00aa.905dc8",
        "type": "function",
        "z": "2e60473f.e3bb9",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('repeats', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 480,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "3817afc6.347c78",
        "type": "link out",
        "z": "6108fa1d.d7726c",
        "name": "Serial_in",
        "links": [
            "38d25aa3.d6580e"
        ],
        "x": 175,
        "y": 560,
        "wires": []
    },
    {
        "id": "d8c56b25.5afdb",
        "type": "inject",
        "z": "2e60473f.e3bb9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 90,
        "y": 680,
        "wires": [
            [
                "df21c39c.e3e5b"
            ]
        ]
    },
    {
        "id": "df21c39c.e3e5b",
        "type": "function",
        "z": "2e60473f.e3bb9",
        "name": "Generate gcode",
        "func": "var width=global.get('width') || 1;\nvar depth=global.get('depth') || 1;\nvar height=global.get('height') || 1;\nvar sampleNumber=global.get('sampleNumber') || 0;\nvar feed=global.get('feed') || 100;\nvar spacing=global.get('spacing') || 1;\nvar origoX=global.get('origoX') || 600;\nvar origoY=global.get('origoY') || 300;\nvar origoZ=global.get('origoZ') || 225;\nvar xStartPos=origoX - (width*spacing*10)/2;\nvar yStartPos=origoY - (depth*spacing*10)/2;\nvar zStartPos=origoZ - (height*spacing*10) + 10;\nvar xPos=0;\nvar yPos=0;\nvar zPos=0;\nvar sample = global.get('sample');\nvar timestamp = global.get('timestamp') || 0;\nvar gcode=\"\";\nvar msg1 = {};\nvar msg2 = {};\nvar msg3 = {};\n\n//\n// Move rig to starting position and wait\n//\n\nxPos=xStartPos;\nyPos=yStartPos;\nzPos=zStartPos;\n\nfor (var z=0; z<height; z++) {\n    for (var y=0; y<depth; y++) {\n        for (var x=0; x<width; x++) {\n            ++sampleNumber;\n            global.set('sampleNumber', sampleNumber);\n            xPos = xStartPos + (x*spacing*10);\n            gcode=\"$J=G90G21X\"+ xPos + \"Y\"+ yPos + \"Z-\"+ zPos + \"F\"+feed;\n            msg1.payload = gcode;\n            msg2.timestamp = global.get('timestamp');\n            msg2.payload = [global.get('sampleNumber'), xPos];\n// Beware: mismatch between expected and actual sent timestamp and sampleNumber \n// Due to the different way Javascript/Node-Red behaves vs c++... Bugger...\n            node.send([msg1,msg2,[]]);\n//\n// Wait for sample aquisition\n//\n\n//            setTimeout(function(){\n//                \n//                msg2.payload = 'ping';\n//                node.send([[],msg2]);\n//            }, 3000);\n\n// Add sample data to global Samples array\n\n        }\n        yPos = yStartPos + 10 + (y*spacing*10);\n//        gcode=\"$J=G90G21X\"+ xPos + \"Y\"+ yPos + \"Z-\"+ zPos + \"F\"+feed;\n//        msg1.payload = gcode;\n//        node.send([msg1,[],[]]);\n    }\n    zPos = zStartPos + 10 + (z*spacing*10);\n//    gcode=\"$J=G90G21X\"+ xPos + \"Y\"+ yPos + \"Z-\"+ zPos + \"F\"+feed;\n//    msg1.payload = gcode;\n//    node.send([msg1,[],[]]);\n    \n// Append current layer saved in the global Samples array to a CSV file\n    msg3.payload = true;\n    node.send([[],[],msg3]);\n    \n}\nglobal.set('sampleNumber', 0);\nglobal.set('noOfSamples', width*depth*height);\n\nreturn null;",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 280,
        "y": 660,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "6ce143bf.140bc4",
        "type": "inject",
        "z": "2e60473f.e3bb9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Reset",
        "payloadType": "str",
        "x": 90,
        "y": 720,
        "wires": [
            [
                "f3bb2aa5.a9f1b"
            ]
        ]
    },
    {
        "id": "b07f7d64.7c17a8",
        "type": "function",
        "z": "2e60473f.e3bb9",
        "name": "Reset SampleNumber and GUI",
        "func": "global.set('sampleNumber', 0);\nmsg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 720,
        "wires": [
            [
                "4b17a591.a1ab24"
            ]
        ]
    },
    {
        "id": "4b17a591.a1ab24",
        "type": "link out",
        "z": "2e60473f.e3bb9",
        "name": "GUI",
        "links": [
            "49b17742.94cf1",
            "518385b2.08b734",
            "faca8e54.fea95",
            "7d29b514.480c3c"
        ],
        "x": 495,
        "y": 720,
        "wires": []
    },
    {
        "id": "19508f5b.d43741",
        "type": "inject",
        "z": "2e60473f.e3bb9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 90,
        "y": 480,
        "wires": [
            [
                "fad64153.9a499"
            ]
        ]
    },
    {
        "id": "f0e87400.2c2d",
        "type": "function",
        "z": "2e60473f.e3bb9",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('homingMode', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "9b8a9649.0473c",
        "type": "inject",
        "z": "3ac44c2f.c95524",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 90,
        "y": 140,
        "wires": [
            [
                "c9371ff0.78eeb8"
            ]
        ]
    },
    {
        "id": "50bc5528.6ee664",
        "type": "function",
        "z": "3ac44c2f.c95524",
        "name": "yResolution",
        "func": "var value = msg.payload;\nglobal.set('yResolution', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 550,
        "y": 140,
        "wires": [
            [
                "1e74c5b9.cf98a2"
            ]
        ]
    },
    {
        "id": "558e16e9.0c57e",
        "type": "change",
        "z": "6108fa1d.d7726c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "delay",
                "pt": "msg",
                "to": "sampleTime",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 400,
        "wires": [
            [
                "b7c442b7.9c023"
            ]
        ]
    },
    {
        "id": "6b906498.dbca9c",
        "type": "function",
        "z": "6108fa1d.d7726c",
        "name": "Combine",
        "func": "var values;\nvar position;\n\nif (msg.topic ==\"position\"){\n    var timestamp = Date.now();\n    position = msg.payload;\n    position.timestamp = timestamp; \n    context.set(\"position\", position)\n}\n\nif (msg.topic ==\"values\"){\n    values = msg.payload;\n    position = context.get(\"position\");\n    delete msg.timestamp;\n\n    msg.payload = {\n//        timestamp: timestamp,\n        values: values,\n        position: position\n    }\nreturn [msg,[]];\n}\n\n// Add code to change to new CSV file (new msg.filename) on new layer\nif (msg.topic ==\"filename\"){\n    // This is only placeholder code\n    msg.filename = \"mapping-\" + Date.now() + \".csv\";\nreturn [[],msg];\n}\n\n/*\nif (msg.topic ==\"values\"){context.set(\"values\", msg.payload)}\nif (msg.topic ==\"position\"){\n\nvar timestamp = Date.now();\nvar values = context.get(\"values\");\nvar position = msg.payload;\nposition.timestamp = msg.timestamp; \n\ndelete msg.timestamp;\n\n\nmsg.payload = {\n   timestamp: timestamp,\n   position: position,\n   values: values\n}\n\nreturn msg;\n}\n*/",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 580,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "e90480fd.5c164",
        "type": "debug",
        "z": "d900094f.ace7f8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 320,
        "wires": []
    },
    {
        "id": "fd3c566.97038a8",
        "type": "inject",
        "z": "d900094f.ace7f8",
        "name": "1sec",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "10",
        "payloadType": "num",
        "x": 140,
        "y": 320,
        "wires": [
            [
                "c3a236d1.d520e8"
            ]
        ]
    },
    {
        "id": "bd5414b7.48f068",
        "type": "inject",
        "z": "d900094f.ace7f8",
        "name": "Off",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "c3a236d1.d520e8"
            ]
        ]
    },
    {
        "id": "6a5a4551.de6ba4",
        "type": "q-gate",
        "z": "6108fa1d.d7726c",
        "name": "G-Queue",
        "controlTopic": "control",
        "defaultState": "queueing",
        "openCmd": "open",
        "closeCmd": "close",
        "toggleCmd": "toggle",
        "queueCmd": "queue",
        "defaultCmd": "default",
        "triggerCmd": "trigger",
        "flushCmd": "flush",
        "resetCmd": "reset",
        "peekCmd": "peek",
        "dropCmd": "drop",
        "statusCmd": "status",
        "maxQueueLength": "0",
        "keepNewest": false,
        "qToggle": true,
        "persist": false,
        "storeName": "memory",
        "x": 600,
        "y": 300,
        "wires": [
            [
                "49289952.0e04a",
                "da094177.3f1e3"
            ]
        ]
    },
    {
        "id": "a021eb51.0d5a5",
        "type": "ui_button",
        "z": "6108fa1d.d7726c",
        "name": "",
        "group": "19dc6535.e7fc1b",
        "order": 17,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Start mapping",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 100,
        "y": 140,
        "wires": [
            [
                "3a0715a6.cd3b7a",
                "df2f75ec.007ec8"
            ]
        ]
    },
    {
        "id": "1ef07d45.b639d3",
        "type": "ui_button",
        "z": "6108fa1d.d7726c",
        "name": "",
        "group": "19dc6535.e7fc1b",
        "order": 18,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Cancel job",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "icon": "warning",
        "payload": "Reset",
        "payloadType": "str",
        "topic": "",
        "x": 90,
        "y": 260,
        "wires": [
            [
                "a2eeebbc.7e8e78",
                "d956850.0b94178",
                "6b07b366.9888c4"
            ]
        ]
    },
    {
        "id": "71c86842.fcc61",
        "type": "ui_button",
        "z": "2e60473f.e3bb9",
        "name": "",
        "group": "428976bf.20c0c",
        "order": 22,
        "width": "4",
        "height": 1,
        "passthru": false,
        "label": "Position above origo",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 140,
        "y": 260,
        "wires": [
            [
                "afa59552.ecf478"
            ]
        ]
    },
    {
        "id": "e3af582f.992898",
        "type": "ui_button",
        "z": "2e60473f.e3bb9",
        "name": "",
        "group": "428976bf.20c0c",
        "order": 23,
        "width": "2",
        "height": 1,
        "passthru": false,
        "label": "Dock",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 90,
        "y": 300,
        "wires": [
            [
                "e0cff9aa.75ab48"
            ]
        ]
    },
    {
        "id": "d119ea8.0d2e318",
        "type": "ui_button",
        "z": "6108fa1d.d7726c",
        "name": "",
        "group": "19dc6535.e7fc1b",
        "order": 19,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Panic",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "icon": "warning",
        "payload": "'\\^X'",
        "payloadType": "str",
        "topic": "",
        "x": 70,
        "y": 560,
        "wires": [
            [
                "3817afc6.347c78"
            ]
        ]
    },
    {
        "id": "b0cb6a8f.b4d2b8",
        "type": "ui_button",
        "z": "2e60473f.e3bb9",
        "name": "",
        "group": "428976bf.20c0c",
        "order": 29,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Start homing",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 90,
        "y": 640,
        "wires": [
            [
                "df21c39c.e3e5b"
            ]
        ]
    },
    {
        "id": "f3bb2aa5.a9f1b",
        "type": "ui_button",
        "z": "2e60473f.e3bb9",
        "name": "",
        "group": "428976bf.20c0c",
        "order": 30,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Cancel job",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "icon": "warning",
        "payload": "Reset",
        "payloadType": "str",
        "topic": "",
        "x": 90,
        "y": 760,
        "wires": [
            [
                "b07f7d64.7c17a8",
                "3ee222df.cda11e"
            ]
        ]
    },
    {
        "id": "769b7dc8.8871ec",
        "type": "ui_dropdown",
        "z": "3ac44c2f.c95524",
        "name": "",
        "label": "Mode",
        "tooltip": "",
        "place": "Select option",
        "group": "19dc6535.e7fc1b",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Continous",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Grid",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Slice",
                "value": 3,
                "type": "num"
            },
            {
                "label": "Spiral",
                "value": 4,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 230,
        "y": 80,
        "wires": [
            [
                "f12d9a91.89638"
            ]
        ]
    },
    {
        "id": "719757f8.e74f98",
        "type": "ui_dropdown",
        "z": "2e60473f.e3bb9",
        "name": "",
        "label": "Profile",
        "tooltip": "",
        "place": "Select option",
        "group": "428976bf.20c0c",
        "order": 24,
        "width": "0",
        "height": "0",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Helicopter",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Plane",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Draining",
                "value": 3,
                "type": "num"
            },
            {
                "label": "At an angle",
                "value": "4",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 210,
        "y": 360,
        "wires": [
            [
                "52c18933.20b0a"
            ]
        ]
    },
    {
        "id": "d6c25f3e.9ac72",
        "type": "ui_dropdown",
        "z": "2e60473f.e3bb9",
        "name": "",
        "label": "Mode",
        "tooltip": "",
        "place": "Select option",
        "group": "428976bf.20c0c",
        "order": 25,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "From current position",
                "value": 1,
                "type": "num"
            },
            {
                "label": "From random position",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Circle",
                "value": 3,
                "type": "num"
            },
            {
                "label": "Grid",
                "value": 4,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 210,
        "y": 420,
        "wires": [
            [
                "affe39e5.4528f8"
            ]
        ]
    },
    {
        "id": "fad64153.9a499",
        "type": "ui_dropdown",
        "z": "2e60473f.e3bb9",
        "name": "",
        "label": "Current",
        "tooltip": "",
        "place": "Select option",
        "group": "428976bf.20c0c",
        "order": 25,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "None",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Sideways",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Countercurrent",
                "value": 3,
                "type": "num"
            },
            {
                "label": "Co-current",
                "value": 4,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 220,
        "y": 480,
        "wires": [
            [
                "f0e87400.2c2d"
            ]
        ]
    },
    {
        "id": "c9371ff0.78eeb8",
        "type": "ui_dropdown",
        "z": "3ac44c2f.c95524",
        "name": "",
        "label": "Yresolution (cm)",
        "tooltip": "",
        "place": "Select option",
        "group": "19dc6535.e7fc1b",
        "order": 2,
        "width": "6",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "0.1 cm",
                "value": 0.1,
                "type": "num"
            },
            {
                "label": "0.2 cm",
                "value": 0.2,
                "type": "num"
            },
            {
                "label": "0.5 cm",
                "value": 0.5,
                "type": "num"
            },
            {
                "label": "1 cm",
                "value": 1,
                "type": "num"
            },
            {
                "label": "2 cm",
                "value": 2,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 260,
        "y": 140,
        "wires": [
            [
                "50bc5528.6ee664"
            ]
        ]
    },
    {
        "id": "319af572.52139a",
        "type": "ui_slider",
        "z": "3ac44c2f.c95524",
        "name": "",
        "label": "Width (cm)",
        "tooltip": "",
        "group": "19dc6535.e7fc1b",
        "order": 4,
        "width": 5,
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "",
        "min": "0",
        "max": "100",
        "step": "2",
        "x": 250,
        "y": 260,
        "wires": [
            [
                "bdfe4bda.235048",
                "ca8662d6.81d6e8"
            ]
        ]
    },
    {
        "id": "20295fc.637fd2",
        "type": "ui_slider",
        "z": "3ac44c2f.c95524",
        "name": "",
        "label": "Depth (cm)",
        "tooltip": "",
        "group": "19dc6535.e7fc1b",
        "order": 6,
        "width": 5,
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "",
        "min": "0",
        "max": "76",
        "step": "2",
        "x": 250,
        "y": 320,
        "wires": [
            [
                "563fe7ed.1a862",
                "3963988d.8866d"
            ]
        ]
    },
    {
        "id": "5a419d7c.d81d8c",
        "type": "ui_slider",
        "z": "3ac44c2f.c95524",
        "name": "",
        "label": "Height (cm)",
        "tooltip": "",
        "group": "19dc6535.e7fc1b",
        "order": 8,
        "width": 5,
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "",
        "min": "0",
        "max": "23",
        "step": 1,
        "x": 250,
        "y": 380,
        "wires": [
            [
                "b80c902f.f859d8",
                "9aa4fe40.8c5be8"
            ]
        ]
    },
    {
        "id": "194c48fe.71d01f",
        "type": "ui_slider",
        "z": "3ac44c2f.c95524",
        "name": "",
        "label": "Feed rate",
        "tooltip": "",
        "group": "19dc6535.e7fc1b",
        "order": 10,
        "width": 4,
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "",
        "min": "100",
        "max": "3500",
        "step": "50",
        "x": 240,
        "y": 440,
        "wires": [
            [
                "c6e2d41e.21233",
                "8a6512dc.f5fd6"
            ]
        ]
    },
    {
        "id": "64b7eec5.aab8a",
        "type": "ui_slider",
        "z": "2e60473f.e3bb9",
        "name": "",
        "label": "Origo X (mm)",
        "tooltip": "",
        "group": "428976bf.20c0c",
        "order": 16,
        "width": 5,
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "",
        "min": "0",
        "max": "1190",
        "step": 1,
        "x": 230,
        "y": 80,
        "wires": [
            [
                "89259461.defe58",
                "ec5ce288.724458"
            ]
        ]
    },
    {
        "id": "4da67d76.cdaf6c",
        "type": "ui_slider",
        "z": "2e60473f.e3bb9",
        "name": "",
        "label": "Origo Y (mm)",
        "tooltip": "",
        "group": "428976bf.20c0c",
        "order": 18,
        "width": 5,
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "",
        "min": "0",
        "max": "770",
        "step": 1,
        "x": 230,
        "y": 140,
        "wires": [
            [
                "91c41b54.aa89c",
                "fb388fe.77d13f"
            ]
        ]
    },
    {
        "id": "3575ff85.312a48",
        "type": "ui_slider",
        "z": "2e60473f.e3bb9",
        "name": "",
        "label": "Origo Z (mm)",
        "tooltip": "",
        "group": "428976bf.20c0c",
        "order": 20,
        "width": 5,
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "",
        "min": "0",
        "max": "225",
        "step": 1,
        "x": 230,
        "y": 200,
        "wires": [
            [
                "e0afc966.39517",
                "d3184287.1144c"
            ]
        ]
    },
    {
        "id": "5bd09f3c.9984a",
        "type": "ui_slider",
        "z": "2e60473f.e3bb9",
        "name": "",
        "label": "Repeats",
        "tooltip": "",
        "group": "428976bf.20c0c",
        "order": 26,
        "width": "4",
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "",
        "min": "10",
        "max": "1000",
        "step": "10",
        "x": 220,
        "y": 580,
        "wires": [
            [
                "7e8c00aa.905dc8",
                "1b13aa4b.e78c7e"
            ]
        ]
    },
    {
        "id": "f9aafd7b.520f38",
        "type": "ui_text_input",
        "z": "7f063300.e79e2c",
        "name": "",
        "label": "Serial monitor",
        "tooltip": "",
        "group": "b6c12137.ce6d28",
        "order": 23,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 940,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "2066a6cc.b4a162",
        "type": "ui_text_input",
        "z": "6108fa1d.d7726c",
        "name": "",
        "label": "CSV output",
        "tooltip": "",
        "group": "b6c12137.ce6d28",
        "order": 14,
        "width": 12,
        "height": "1",
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 1010,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "bdfe4bda.235048",
        "type": "ui_text",
        "z": "3ac44c2f.c95524",
        "group": "19dc6535.e7fc1b",
        "order": 5,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 410,
        "y": 260,
        "wires": []
    },
    {
        "id": "563fe7ed.1a862",
        "type": "ui_text",
        "z": "3ac44c2f.c95524",
        "group": "19dc6535.e7fc1b",
        "order": 7,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 410,
        "y": 320,
        "wires": []
    },
    {
        "id": "b80c902f.f859d8",
        "type": "ui_text",
        "z": "3ac44c2f.c95524",
        "group": "19dc6535.e7fc1b",
        "order": 9,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 410,
        "y": 380,
        "wires": []
    },
    {
        "id": "16d8fca0.ca9cd3",
        "type": "ui_text",
        "z": "3ac44c2f.c95524",
        "group": "19dc6535.e7fc1b",
        "order": 15,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "No. of samples",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1040,
        "y": 280,
        "wires": []
    },
    {
        "id": "844f603d.839028",
        "type": "ui_text",
        "z": "3ac44c2f.c95524",
        "group": "19dc6535.e7fc1b",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Estimated run-time (h)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 980,
        "y": 360,
        "wires": []
    },
    {
        "id": "2c257bfc.b3892c",
        "type": "ui_text",
        "z": "3ac44c2f.c95524",
        "group": "19dc6535.e7fc1b",
        "order": 13,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Grid size",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1020,
        "y": 200,
        "wires": []
    },
    {
        "id": "c6e2d41e.21233",
        "type": "ui_text",
        "z": "3ac44c2f.c95524",
        "group": "19dc6535.e7fc1b",
        "order": 11,
        "width": 2,
        "height": 1,
        "name": "Feed",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 410,
        "y": 440,
        "wires": []
    },
    {
        "id": "ec5ce288.724458",
        "type": "ui_text",
        "z": "2e60473f.e3bb9",
        "group": "428976bf.20c0c",
        "order": 17,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 370,
        "y": 80,
        "wires": []
    },
    {
        "id": "fb388fe.77d13f",
        "type": "ui_text",
        "z": "2e60473f.e3bb9",
        "group": "428976bf.20c0c",
        "order": 19,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 370,
        "y": 140,
        "wires": []
    },
    {
        "id": "d3184287.1144c",
        "type": "ui_text",
        "z": "2e60473f.e3bb9",
        "group": "428976bf.20c0c",
        "order": 21,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 370,
        "y": 200,
        "wires": []
    },
    {
        "id": "1b13aa4b.e78c7e",
        "type": "ui_text",
        "z": "2e60473f.e3bb9",
        "group": "428976bf.20c0c",
        "order": 27,
        "width": "2",
        "height": 1,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 350,
        "y": 580,
        "wires": []
    },
    {
        "id": "fd7c101f.a46128",
        "type": "serial in",
        "z": "7f063300.e79e2c",
        "name": "Blackbox Controller",
        "serial": "d12f49f7.adc66",
        "x": 130,
        "y": 340,
        "wires": [
            [
                "c9349ca2.fe05f"
            ]
        ]
    },
    {
        "id": "29b54f72.c4d198",
        "type": "serial out",
        "z": "7f063300.e79e2c",
        "name": "Blackbox Controller",
        "serial": "d12f49f7.adc66",
        "x": 560,
        "y": 100,
        "wires": []
    },
    {
        "id": "9790f8a0.fcf458",
        "type": "lower-case",
        "z": "d900094f.ace7f8",
        "name": "Test",
        "x": 330,
        "y": 100,
        "wires": [
            [
                "28e8fb72.4d2f14"
            ]
        ]
    },
    {
        "id": "1e63a250.aa89ce",
        "type": "parse-status",
        "z": "d900094f.ace7f8",
        "name": "",
        "x": 370,
        "y": 200,
        "wires": [
            [
                "aac88861.e8dbf8"
            ]
        ]
    },
    {
        "id": "c163e9bc.6117f8",
        "type": "parse-status",
        "z": "6108fa1d.d7726c",
        "name": "",
        "x": 410,
        "y": 380,
        "wires": [
            [
                "f4f821ea.7015f8",
                "2b113950.5e9f66",
                "db9e7eb3.9cd928"
            ]
        ]
    },
    {
        "id": "c3a236d1.d520e8",
        "type": "magnetic-sensors",
        "z": "d900094f.ace7f8",
        "name": "",
        "x": 370,
        "y": 320,
        "wires": [
            [
                "e90480fd.5c164"
            ]
        ]
    },
    {
        "id": "c46436e3.a5bf18",
        "type": "inject",
        "z": "7f063300.e79e2c",
        "name": "200ms",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 100,
        "y": 560,
        "wires": [
            [
                "1a3d3d7c.ea0acb"
            ]
        ]
    },
    {
        "id": "8f5b4d60.adb298",
        "type": "inject",
        "z": "7f063300.e79e2c",
        "name": "Off",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 90,
        "y": 520,
        "wires": [
            [
                "1a3d3d7c.ea0acb"
            ]
        ]
    },
    {
        "id": "1a3d3d7c.ea0acb",
        "type": "magnetic-sensors",
        "z": "7f063300.e79e2c",
        "name": "Magnetic sensors",
        "x": 270,
        "y": 560,
        "wires": [
            [
                "1cd9a762.5dbe71",
                "b0438eed.36bbd",
                "b0ae6b8e.03f18"
            ]
        ]
    },
    {
        "id": "949cf44a.3e11d",
        "type": "comment",
        "z": "7f063300.e79e2c",
        "name": "Sensor output logic",
        "info": "",
        "x": 130,
        "y": 480,
        "wires": []
    },
    {
        "id": "1cd9a762.5dbe71",
        "type": "link out",
        "z": "7f063300.e79e2c",
        "name": "Sensors_out",
        "links": [
            "a072383c.f9d838",
            "d6d6e0fc.7f8898",
            "dd1ef2cb.922ee8"
        ],
        "x": 835,
        "y": 680,
        "wires": []
    },
    {
        "id": "b0438eed.36bbd",
        "type": "debug",
        "z": "7f063300.e79e2c",
        "name": "Sensors_out",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 500,
        "wires": []
    },
    {
        "id": "7207dd41.6c6b14",
        "type": "link out",
        "z": "6108fa1d.d7726c",
        "name": "Position_updated",
        "links": [
            "ded481e9.e228a8",
            "759405f0.f10ed4"
        ],
        "x": 1115,
        "y": 440,
        "wires": []
    },
    {
        "id": "db9e7eb3.9cd928",
        "type": "link out",
        "z": "6108fa1d.d7726c",
        "name": "Status_out",
        "links": [
            "9b584619.62eb68",
            "e4421252.d9c05"
        ],
        "x": 555,
        "y": 400,
        "wires": []
    },
    {
        "id": "733a76f9.28d46",
        "type": "link out",
        "z": "2e60473f.e3bb9",
        "name": "Serial_in",
        "links": [
            "38d25aa3.d6580e"
        ],
        "x": 935,
        "y": 80,
        "wires": []
    },
    {
        "id": "b52b1cc.4e72ce",
        "type": "function",
        "z": "2e60473f.e3bb9",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('jogIncrement', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "14963ecc.52a0f9",
        "type": "function",
        "z": "2e60473f.e3bb9",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('jogIncrement', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "cacd9943.4f062",
        "type": "function",
        "z": "2e60473f.e3bb9",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('jogIncrement', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "2adc0742.644008",
        "type": "function",
        "z": "2e60473f.e3bb9",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('jogIncrement', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "f72602df.50d0a",
        "type": "function",
        "z": "2e60473f.e3bb9",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar gcode=\"$J=G91G21X-\"+ jogIncrement + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 360,
        "wires": [
            [
                "ecead1b3.5847d"
            ]
        ]
    },
    {
        "id": "ecead1b3.5847d",
        "type": "link out",
        "z": "2e60473f.e3bb9",
        "name": "Serial_in",
        "links": [
            "38d25aa3.d6580e"
        ],
        "x": 1075,
        "y": 360,
        "wires": []
    },
    {
        "id": "3bd2cd8c.ea1a92",
        "type": "inject",
        "z": "2e60473f.e3bb9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 690,
        "y": 240,
        "wires": [
            [
                "ce46168f.a06dc8"
            ]
        ]
    },
    {
        "id": "a9ccdb56.261258",
        "type": "function",
        "z": "2e60473f.e3bb9",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar gcode=\"$J=G91G21X\"+ jogIncrement + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 400,
        "wires": [
            [
                "5e835f2b.88e8c"
            ]
        ]
    },
    {
        "id": "5e835f2b.88e8c",
        "type": "link out",
        "z": "2e60473f.e3bb9",
        "name": "Serial_in",
        "links": [
            "38d25aa3.d6580e"
        ],
        "x": 1075,
        "y": 400,
        "wires": []
    },
    {
        "id": "9e162f98.31c32",
        "type": "function",
        "z": "2e60473f.e3bb9",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar gcode=\"$J=G91G21Y-\"+ jogIncrement + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 440,
        "wires": [
            [
                "2acd7e92.f0bd6a"
            ]
        ]
    },
    {
        "id": "2acd7e92.f0bd6a",
        "type": "link out",
        "z": "2e60473f.e3bb9",
        "name": "Serial_in",
        "links": [
            "38d25aa3.d6580e"
        ],
        "x": 1075,
        "y": 440,
        "wires": []
    },
    {
        "id": "694fa2ed.a4a584",
        "type": "function",
        "z": "2e60473f.e3bb9",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar gcode=\"$J=G91G21Y\"+ jogIncrement + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 480,
        "wires": [
            [
                "62af7a45.26d0a4"
            ]
        ]
    },
    {
        "id": "62af7a45.26d0a4",
        "type": "link out",
        "z": "2e60473f.e3bb9",
        "name": "Serial_in",
        "links": [
            "38d25aa3.d6580e"
        ],
        "x": 1075,
        "y": 480,
        "wires": []
    },
    {
        "id": "caab204f.f436",
        "type": "function",
        "z": "2e60473f.e3bb9",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar gcode=\"$J=G91G21Z-\"+ jogIncrement + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 520,
        "wires": [
            [
                "4c14f6c.eb00988"
            ]
        ]
    },
    {
        "id": "4c14f6c.eb00988",
        "type": "link out",
        "z": "2e60473f.e3bb9",
        "name": "Serial_in",
        "links": [
            "38d25aa3.d6580e"
        ],
        "x": 1075,
        "y": 520,
        "wires": []
    },
    {
        "id": "12286460.f6874c",
        "type": "function",
        "z": "2e60473f.e3bb9",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar gcode=\"$J=G91G21Z\"+ jogIncrement + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 560,
        "wires": [
            [
                "32bbac3b.395f5c"
            ]
        ]
    },
    {
        "id": "32bbac3b.395f5c",
        "type": "link out",
        "z": "2e60473f.e3bb9",
        "name": "Serial_in",
        "links": [
            "38d25aa3.d6580e"
        ],
        "x": 1075,
        "y": 560,
        "wires": []
    },
    {
        "id": "71632874.5c90e8",
        "type": "comment",
        "z": "2e60473f.e3bb9",
        "name": "Jog control",
        "info": "",
        "x": 710,
        "y": 40,
        "wires": []
    },
    {
        "id": "1b66a9d3.01dcb6",
        "type": "function",
        "z": "2e60473f.e3bb9",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('gcode', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "630f9304.fcca8c",
        "type": "function",
        "z": "2e60473f.e3bb9",
        "name": "",
        "func": "var gcode=global.get('gcode') || \"?\";\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 640,
        "wires": [
            [
                "51a206cb.6ed478"
            ]
        ]
    },
    {
        "id": "51a206cb.6ed478",
        "type": "link out",
        "z": "2e60473f.e3bb9",
        "name": "Serial_in",
        "links": [
            "38d25aa3.d6580e"
        ],
        "x": 1075,
        "y": 640,
        "wires": []
    },
    {
        "id": "bfa28d7b.2ab34",
        "type": "inject",
        "z": "2e60473f.e3bb9",
        "name": "empty",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 690,
        "y": 600,
        "wires": [
            [
                "b73b6e21.7026a"
            ]
        ]
    },
    {
        "id": "fa7e3869.85f548",
        "type": "inject",
        "z": "2e60473f.e3bb9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 700,
        "y": 80,
        "wires": [
            [
                "f1764a64.ae5ec"
            ]
        ]
    },
    {
        "id": "2e8d1595.1019ba",
        "type": "link out",
        "z": "2e60473f.e3bb9",
        "name": "Serial_in",
        "links": [
            "38d25aa3.d6580e"
        ],
        "x": 935,
        "y": 120,
        "wires": []
    },
    {
        "id": "f1764a64.ae5ec",
        "type": "ui_button",
        "z": "2e60473f.e3bb9",
        "name": "",
        "group": "428976bf.20c0c",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Home",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "home",
        "payload": "$H",
        "payloadType": "str",
        "topic": "",
        "x": 830,
        "y": 80,
        "wires": [
            [
                "733a76f9.28d46"
            ]
        ]
    },
    {
        "id": "6d77fd2a.b5a3a4",
        "type": "ui_button",
        "z": "2e60473f.e3bb9",
        "name": "",
        "group": "428976bf.20c0c",
        "order": 3,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "0.1mm",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "0.1",
        "payloadType": "num",
        "topic": "",
        "x": 830,
        "y": 200,
        "wires": [
            [
                "b52b1cc.4e72ce"
            ]
        ]
    },
    {
        "id": "ce46168f.a06dc8",
        "type": "ui_button",
        "z": "2e60473f.e3bb9",
        "name": "",
        "group": "428976bf.20c0c",
        "order": 4,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "1mm",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "",
        "x": 830,
        "y": 240,
        "wires": [
            [
                "14963ecc.52a0f9"
            ]
        ]
    },
    {
        "id": "8d13c431.977fa",
        "type": "ui_button",
        "z": "2e60473f.e3bb9",
        "name": "",
        "group": "428976bf.20c0c",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "10mm",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "10",
        "payloadType": "num",
        "topic": "",
        "x": 830,
        "y": 280,
        "wires": [
            [
                "cacd9943.4f062"
            ]
        ]
    },
    {
        "id": "348c8563.003ee2",
        "type": "ui_button",
        "z": "2e60473f.e3bb9",
        "name": "",
        "group": "428976bf.20c0c",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "100mm",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "100",
        "payloadType": "num",
        "topic": "",
        "x": 840,
        "y": 320,
        "wires": [
            [
                "2adc0742.644008"
            ]
        ]
    },
    {
        "id": "8b8c1e97.f29728",
        "type": "ui_button",
        "z": "2e60473f.e3bb9",
        "name": "",
        "group": "428976bf.20c0c",
        "order": 7,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "-X",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 830,
        "y": 360,
        "wires": [
            [
                "f72602df.50d0a"
            ]
        ]
    },
    {
        "id": "7e3c371.d2be1c8",
        "type": "ui_button",
        "z": "2e60473f.e3bb9",
        "name": "",
        "group": "428976bf.20c0c",
        "order": 8,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "+X",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 830,
        "y": 400,
        "wires": [
            [
                "a9ccdb56.261258"
            ]
        ]
    },
    {
        "id": "d6cb2045.06825",
        "type": "ui_button",
        "z": "2e60473f.e3bb9",
        "name": "",
        "group": "428976bf.20c0c",
        "order": 9,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "-Y",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 830,
        "y": 440,
        "wires": [
            [
                "9e162f98.31c32"
            ]
        ]
    },
    {
        "id": "604debcb.35523c",
        "type": "ui_button",
        "z": "2e60473f.e3bb9",
        "name": "",
        "group": "428976bf.20c0c",
        "order": 10,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "+Y",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 830,
        "y": 480,
        "wires": [
            [
                "694fa2ed.a4a584"
            ]
        ]
    },
    {
        "id": "aa1ea0a2.7d45e8",
        "type": "ui_button",
        "z": "2e60473f.e3bb9",
        "name": "",
        "group": "428976bf.20c0c",
        "order": 11,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "-Z",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 830,
        "y": 520,
        "wires": [
            [
                "caab204f.f436"
            ]
        ]
    },
    {
        "id": "a1f08aa7.8e1e8",
        "type": "ui_button",
        "z": "2e60473f.e3bb9",
        "name": "",
        "group": "428976bf.20c0c",
        "order": 12,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "+Z",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 830,
        "y": 560,
        "wires": [
            [
                "12286460.f6874c"
            ]
        ]
    },
    {
        "id": "b36e7a33.6bd3e8",
        "type": "ui_button",
        "z": "2e60473f.e3bb9",
        "name": "",
        "group": "428976bf.20c0c",
        "order": 14,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": ">",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 830,
        "y": 640,
        "wires": [
            [
                "630f9304.fcca8c"
            ]
        ]
    },
    {
        "id": "d1c06e66.f8003",
        "type": "ui_button",
        "z": "2e60473f.e3bb9",
        "name": "",
        "group": "428976bf.20c0c",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Zero XYZ",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "icon": "warning",
        "payload": "$G10 P1 L20 X0 Y0 Z0",
        "payloadType": "str",
        "topic": "",
        "x": 840,
        "y": 120,
        "wires": [
            [
                "2e8d1595.1019ba"
            ]
        ]
    },
    {
        "id": "b73b6e21.7026a",
        "type": "ui_text_input",
        "z": "2e60473f.e3bb9",
        "name": "",
        "label": "Gcode",
        "tooltip": "",
        "group": "428976bf.20c0c",
        "order": 13,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 830,
        "y": 600,
        "wires": [
            [
                "1b66a9d3.01dcb6"
            ]
        ]
    },
    {
        "id": "60e08588.71c26c",
        "type": "comment",
        "z": "2e60473f.e3bb9",
        "name": "Homing config",
        "info": "",
        "x": 120,
        "y": 40,
        "wires": []
    },
    {
        "id": "a072383c.f9d838",
        "type": "link in",
        "z": "6108fa1d.d7726c",
        "name": "Sensors_in",
        "links": [
            "1cd9a762.5dbe71"
        ],
        "x": 275,
        "y": 780,
        "wires": [
            [
                "d28e8ad4.4282f",
                "2f2eb8e9.83be4",
                "2d754b36.7eeadc"
            ]
        ]
    },
    {
        "id": "e4421252.d9c05",
        "type": "link in",
        "z": "6108fa1d.d7726c",
        "name": "Status_in",
        "links": [
            "db9e7eb3.9cd928",
            "912f782e.fd11b8"
        ],
        "x": 275,
        "y": 660,
        "wires": [
            [
                "94a9d6b8.64774",
                "a8c0d07.69c3db",
                "dd887f17.6702d"
            ]
        ]
    },
    {
        "id": "4c8b61c.c03ee2",
        "type": "comment",
        "z": "6108fa1d.d7726c",
        "name": "Create sample from latest position and sensor values",
        "info": "",
        "x": 540,
        "y": 540,
        "wires": []
    },
    {
        "id": "b0ae6b8e.03f18",
        "type": "trigger",
        "z": "7f063300.e79e2c",
        "name": "Get GRBL status",
        "op1": "?",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-200",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 490,
        "y": 540,
        "wires": [
            [
                "ca791134.731c7"
            ]
        ]
    },
    {
        "id": "9f0c15b3.1c207",
        "type": "ui_chart",
        "z": "7f063300.e79e2c",
        "name": "",
        "group": "b6c12137.ce6d28",
        "order": 13,
        "width": "12",
        "height": "9",
        "label": "Sensor data",
        "chartType": "line",
        "legend": "true",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "320",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 1050,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "1b0d7fb8.2cb328",
        "type": "function",
        "z": "7f063300.e79e2c",
        "name": "Sensor data graph",
        "func": "var msg1 = {};\nvar msg2 = {};\nvar msg3 = {};\nvar msg4 = {};\n\nmsg1.payload = msg.payload.a;\nmsg1.topic = \"Sensor A\";\n\nmsg2.payload = msg.payload.b;\nmsg2.topic = \"Sensor B\";\n\nmsg3.payload = msg.payload.c;\nmsg3.topic = \"Sensor C\";\n\nmsg4.payload = msg.payload.z;\nmsg4.topic = \"Sensor Z\";\n\nreturn [msg1, msg2, msg3, msg4];",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 710,
        "y": 600,
        "wires": [
            [
                "9f0c15b3.1c207",
                "40eb1ba1.296b6c"
            ],
            [
                "9f0c15b3.1c207"
            ],
            [
                "9f0c15b3.1c207"
            ],
            [
                "9f0c15b3.1c207"
            ]
        ]
    },
    {
        "id": "40eb1ba1.296b6c",
        "type": "debug",
        "z": "7f063300.e79e2c",
        "name": "A",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 540,
        "wires": []
    },
    {
        "id": "86879b49.22ae78",
        "type": "function",
        "z": "6108fa1d.d7726c",
        "name": "SampleNo",
        "func": "var active = global.get('MappingActive');\n\nif (active == true){\n    var sampleNumber = global.get('sampleNumber') + 1 || 1;\n    var noOfSamples = global.get('noOfSamples') || 1;\n    if (sampleNumber <= noOfSamples) {\n        global.set('sampleNumber', sampleNumber);\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1010,
        "y": 440,
        "wires": [
            [
                "7207dd41.6c6b14"
            ]
        ]
    },
    {
        "id": "394c1914.382c2e",
        "type": "switch",
        "z": "7f063300.e79e2c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "else"
            },
            {
                "t": "eq",
                "v": "ok",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Ok",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 610,
        "y": 380,
        "wires": [
            [
                "6e672cee.8cf96c"
            ],
            [],
            []
        ]
    },
    {
        "id": "e10053f0.f7db2",
        "type": "ui_text",
        "z": "3ac44c2f.c95524",
        "group": "19dc6535.e7fc1b",
        "order": 14,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Scan lines",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1030,
        "y": 240,
        "wires": []
    },
    {
        "id": "643dc63.1452db8",
        "type": "function",
        "z": "6108fa1d.d7726c",
        "name": "Old Generate gcode",
        "func": "global.set('MappingActive', true);\nglobal.set('sampleNumber', 0);\n\nvar width=global.get('width') || 1;\nvar depth=global.get('depth') || 1;\nvar height=global.get('height') || 1;\n\nglobal.set('noOfSamples', width*depth*height);\n\n\n//var sampleNumber=global.get('sampleNumber') || 0;\nvar feed=global.get('feed') || 100;\nvar spacing=global.get('yResolution') || 1;\nvar origoX=global.get('origoX') || 600;\nvar origoY=global.get('origoY') || 300;\nvar origoZ=global.get('origoZ') || 225;\nvar xStartPos=origoX - (width*spacing*10)/2;\nvar yStartPos=origoY - (depth*spacing*10)/2;\n//var zStartPos=origoZ - (height*spacing*10) + 10;\nvar zStartPos=origoZ;\n\nvar xPos=0;\nvar yPos=0;\nvar zPos=0;\n//var sample = global.get('sample');\n//var timestamp = global.get('timestamp') || 0;\nvar gcode=\"\";\nvar msg1 = {};\nvar msg2 = {};\nvar msg3 = {};\n\n//\n// Move rig to starting position and wait\n//\n\nxPos=xStartPos;\nyPos=yStartPos;\nzPos=zStartPos;\n\nfor (var z=0; z<height; z++) {\n    for (var y=0; y<depth; y++) {\n        for (var x=0; x<width; x++) {\n//            ++sampleNumber;\n//            global.set('sampleNumber', sampleNumber);\n            xPos = xStartPos + (x*spacing*10);\n            gcode=\"$J=G90G21X\"+ xPos + \"Y\"+ yPos + \"Z-\"+ zPos + \"F\"+feed;\n            msg1.payload = gcode;\n//            msg2.timestamp = global.get('timestamp');\n            msg2.payload = [global.get('sampleNumber'), xPos];\n// Beware: mismatch between expected and actual sent timestamp and sampleNumber \n// Due to the different way Javascript/Node-Red behaves vs c++... Bugger...\n            node.send([msg1,msg2,[]]);\n//\n// Wait for sample aquisition\n//\n\n// Add sample data to global Samples array\n\n        }\n        yPos = yStartPos + 10 + (y*spacing*10);\n//        gcode=\"$J=G90G21X\"+ xPos + \"Y\"+ yPos + \"Z-\"+ zPos + \"F\"+feed;\n//        msg1.payload = gcode;\n//        node.send([msg1,[],[]]);\n    }\n//    zPos = zStartPos + 10 + (z*spacing*10);\n    zPos = zStartPos - 10 - (z*spacing*10);\n\n\n//    gcode=\"$J=G90G21X\"+ xPos + \"Y\"+ yPos + \"Z-\"+ zPos + \"F\"+feed;\n//    msg1.payload = gcode;\n//    node.send([msg1,[],[]]);\n    \n// Append current layer saved in the global Samples array to a CSV file\n//    msg3.payload = true;\n//    node.send([[],[],msg3]);\n    \n}\n//global.set('sampleNumber', 0);\n//global.set('noOfSamples', width*depth*height);\n\nreturn null;",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 820,
        "y": 40,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "8f4afea9.8a32d8",
        "type": "inject",
        "z": "3ac44c2f.c95524",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 90,
        "y": 200,
        "wires": [
            [
                "f7ba7729.b4701"
            ]
        ]
    },
    {
        "id": "a1b342ee.9563d8",
        "type": "function",
        "z": "3ac44c2f.c95524",
        "name": "zResolution",
        "func": "var value = msg.payload;\nglobal.set('zResolution', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 550,
        "y": 200,
        "wires": [
            [
                "1e74c5b9.cf98a2"
            ]
        ]
    },
    {
        "id": "f7ba7729.b4701",
        "type": "ui_dropdown",
        "z": "3ac44c2f.c95524",
        "name": "",
        "label": "Zresolution (cm)",
        "tooltip": "",
        "place": "Select option",
        "group": "19dc6535.e7fc1b",
        "order": 3,
        "width": "6",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "0.1 cm",
                "value": 0.1,
                "type": "num"
            },
            {
                "label": "0.2 cm",
                "value": 0.2,
                "type": "num"
            },
            {
                "label": "0.5 cm",
                "value": 0.5,
                "type": "num"
            },
            {
                "label": "1 cm",
                "value": 1,
                "type": "num"
            },
            {
                "label": "2 cm",
                "value": 2,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 260,
        "y": 200,
        "wires": [
            [
                "a1b342ee.9563d8"
            ]
        ]
    },
    {
        "id": "73974dc9.123b74",
        "type": "change",
        "z": "6108fa1d.d7726c",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "6b07b366.9888c4",
        "type": "change",
        "z": "6108fa1d.d7726c",
        "name": "Disabled",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "df2f75ec.007ec8",
        "type": "function",
        "z": "6108fa1d.d7726c",
        "name": "Set filename",
        "func": "var width=global.get('width') || 1;\nvar depth=global.get('depth') || 1;\nvar height=global.get('height') || 1;\n\nvar origoX=global.get('origoX') || 1;\nvar origoY=global.get('origoY') || 1;\nvar origoZ=global.get('origoZ') || 1;\n\nvar feed=global.get('feed') || 1;\nvar timestamp=Date.now();\n\nvar filename = timestamp + \"_size_\" + width + \"-\" + depth + \"-\" + height + \"_feed_\" + feed + \"_origin_\" + origoX + \"-\" + origoY + \"-\" + origoZ + \".csv\";\nglobal.set('filename', filename);\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 370,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "e518d89c.c8f178",
        "type": "function",
        "z": "6108fa1d.d7726c",
        "name": "Set filename",
        "func": "var width=global.get('width') || 1;\nvar depth=global.get('depth') || 1;\nvar height=global.get('height') || 1;\n\nvar origoX=global.get('origoX') || 1;\nvar origoY=global.get('origoY') || 1;\nvar origoZ=global.get('origoZ') || 1;\n\nvar feed=global.get('feed') || 1;\nvar timestamp=global.get('MappingActive')  || Date.now();\n\nmsg.filename = \"gcode-\" + timestamp + \"_size_\" + width + \"-\" + depth + \"-\" + height + \"_feed_\" + feed + \"_origin_\" + origoX + \"-\" + origoY + \"-\" + origoZ + \".gcode\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 160,
        "wires": [
            [
                "8f808b80.450cb"
            ]
        ]
    },
    {
        "id": "fc758bc3.109868",
        "type": "function",
        "z": "6108fa1d.d7726c",
        "name": "New Generate gcode with x-axis positions",
        "func": "global.set('MappingActive', msg.payload);\nglobal.set('sampleNumber', 0);\n\nvar width=global.get('width') || 1;\nvar depth=global.get('depth') || 1;\nvar height=global.get('height') || 1;\n\nvar rows=global.get('rows') || 1;\nvar columns=global.get('columns') || 1;\n\nvar feed=global.get('feed') || 100;\nvar yResolution=global.get('yResolution') || 1;\nvar zResolution=global.get('zResolution') || 1;\n\nvar origoX=global.get('origoX') || 535;\nvar origoY=global.get('origoY') || 315;\nvar origoZ=global.get('origoZ') || 230;\n\nvar xStartPos=origoX - (width*10)/2;\nvar yStartPos=origoY - (depth*10)/2;\n\nif(width == 1){xStartPos = origoX}\nif(depth == 1){yStartPos = origoY}\n\n//var zStartPos=origoZ - (height*10) + 10;\nvar zStartPos=-origoZ;\n\nvar xPos=xStartPos;\nvar yPos=yStartPos;\nvar zPos=zStartPos;\nglobal.set('temp', \"depth: \" + depth + \" origoY: \" + origoY + \" yStartPos:\" + yStartPos + \" (depth*10)/2: \" + ((depth*10)/2)+ \" yPos: \" + yPos + \" (y*yResolution*10): \" + (y*yResolution*10));\nvar gcode=\"\";\n\nvar forward = true;\n\n// IMPORTANT: adjust loops to compensate for Y & Z resolution \nfor (var z=1; z<=columns; z++) {\n    for (var y=1; y<=rows; y++) {\n        for (var x=0; x<=width; x++) {\n            xPos = xStartPos + Math.round(x/yResolution);\n            gcode=\"$J=G90 G21 X\"+ xPos + \" Y\"+ yPos + \" Z\"+ zPos + \" F\"+feed;\n            msg.payload = gcode;\n            node.send(msg);\n        }\n        yPos = yStartPos + Math.round(10*y*yResolution);\n    }\n    zPos = zStartPos + Math.round(10*z*zResolution);\n    yPos = yStartPos;\n}\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 890,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "26388fdf.d47078",
        "type": "function",
        "z": "6108fa1d.d7726c",
        "name": "File save control",
        "func": "var active = global.get('MappingActive') || \"active\";\n\nif(active != 0){\n    msg.filename = \"values-\" + global.get('filename') || \"values.csv\";\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 680,
        "y": 740,
        "wires": [
            [
                "af3be035.37dec"
            ]
        ]
    },
    {
        "id": "fe7b415c.52b798",
        "type": "function",
        "z": "8a5ecff9.35f98",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('jogIncrement', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "200c46e2.2671f2",
        "type": "function",
        "z": "8a5ecff9.35f98",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('jogIncrement', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "741d0faf.3269b",
        "type": "function",
        "z": "8a5ecff9.35f98",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('jogIncrement', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "c3e454e3.23e97",
        "type": "function",
        "z": "8a5ecff9.35f98",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar gcode=\"$J=G91G21X\"+ jogIncrement + \"Y-\"+ jogIncrement + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 320,
        "wires": [
            [
                "778940af.bb2a78"
            ]
        ]
    },
    {
        "id": "778940af.bb2a78",
        "type": "link out",
        "z": "8a5ecff9.35f98",
        "name": "Serial_in",
        "links": [
            "38d25aa3.d6580e"
        ],
        "x": 455,
        "y": 320,
        "wires": []
    },
    {
        "id": "a4691f94.a1edb",
        "type": "inject",
        "z": "8a5ecff9.35f98",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "25",
        "payloadType": "num",
        "x": 70,
        "y": 280,
        "wires": [
            [
                "3a6b6df8.fba0ba"
            ]
        ]
    },
    {
        "id": "5429cf23.0ee998",
        "type": "function",
        "z": "8a5ecff9.35f98",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar gcode=\"$J=G91G21X\" + jogIncrement + \"Y\"+ jogIncrement + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 400,
        "wires": [
            [
                "ea4be306.52a4"
            ]
        ]
    },
    {
        "id": "ea4be306.52a4",
        "type": "link out",
        "z": "8a5ecff9.35f98",
        "name": "Serial_in",
        "links": [
            "38d25aa3.d6580e"
        ],
        "x": 455,
        "y": 400,
        "wires": []
    },
    {
        "id": "267f9d46.31c22a",
        "type": "function",
        "z": "8a5ecff9.35f98",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar gcode=\"$J=G91G21X-\"+ jogIncrement + \"Y\"+ jogIncrement + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 640,
        "wires": [
            [
                "f3721906.7a4c7"
            ]
        ]
    },
    {
        "id": "f3721906.7a4c7",
        "type": "link out",
        "z": "8a5ecff9.35f98",
        "name": "Serial_in",
        "links": [
            "38d25aa3.d6580e"
        ],
        "x": 455,
        "y": 640,
        "wires": []
    },
    {
        "id": "44886d82.d41c54",
        "type": "function",
        "z": "8a5ecff9.35f98",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar gcode=\"$J=G91G21X-\"+ jogIncrement + \"Y-\"+ jogIncrement + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 560,
        "wires": [
            [
                "7a3f7c66.89a504"
            ]
        ]
    },
    {
        "id": "7a3f7c66.89a504",
        "type": "link out",
        "z": "8a5ecff9.35f98",
        "name": "Serial_in",
        "links": [
            "38d25aa3.d6580e"
        ],
        "x": 455,
        "y": 560,
        "wires": []
    },
    {
        "id": "73591a59.633894",
        "type": "function",
        "z": "8a5ecff9.35f98",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar gcode=\"$J=G91G21Z-\"+ jogIncrement + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 680,
        "wires": [
            [
                "7cdf5cdb.7cb48c"
            ]
        ]
    },
    {
        "id": "7cdf5cdb.7cb48c",
        "type": "link out",
        "z": "8a5ecff9.35f98",
        "name": "Serial_in",
        "links": [
            "38d25aa3.d6580e"
        ],
        "x": 455,
        "y": 680,
        "wires": []
    },
    {
        "id": "2bb2ebda.b37714",
        "type": "function",
        "z": "8a5ecff9.35f98",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar gcode=\"$J=G91G21Z\"+ jogIncrement + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 720,
        "wires": [
            [
                "3cfdba29.01e876"
            ]
        ]
    },
    {
        "id": "3cfdba29.01e876",
        "type": "link out",
        "z": "8a5ecff9.35f98",
        "name": "Serial_in",
        "links": [
            "38d25aa3.d6580e"
        ],
        "x": 455,
        "y": 720,
        "wires": []
    },
    {
        "id": "2bb290ca.052058",
        "type": "ui_button",
        "z": "8a5ecff9.35f98",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 3,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "0.1mm",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "0.1",
        "payloadType": "num",
        "topic": "",
        "x": 210,
        "y": 120,
        "wires": [
            [
                "fe7b415c.52b798"
            ]
        ]
    },
    {
        "id": "ff8a4932.527578",
        "type": "ui_button",
        "z": "8a5ecff9.35f98",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 5,
        "width": "1",
        "height": 1,
        "passthru": false,
        "label": "1mm",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "",
        "x": 210,
        "y": 160,
        "wires": [
            [
                "200c46e2.2671f2"
            ]
        ]
    },
    {
        "id": "4c7719b7.1dad68",
        "type": "ui_button",
        "z": "8a5ecff9.35f98",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "5mm",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "5",
        "payloadType": "num",
        "topic": "",
        "x": 210,
        "y": 200,
        "wires": [
            [
                "741d0faf.3269b"
            ]
        ]
    },
    {
        "id": "f2592b4d.a911b",
        "type": "ui_button",
        "z": "8a5ecff9.35f98",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 7,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "↖",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 210,
        "y": 320,
        "wires": [
            [
                "c3e454e3.23e97"
            ]
        ]
    },
    {
        "id": "c222d0cc.1d671",
        "type": "ui_button",
        "z": "8a5ecff9.35f98",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 9,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "↗",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 210,
        "y": 400,
        "wires": [
            [
                "5429cf23.0ee998"
            ]
        ]
    },
    {
        "id": "380fdb2f.56135c",
        "type": "ui_button",
        "z": "8a5ecff9.35f98",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 15,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "↘",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 210,
        "y": 640,
        "wires": [
            [
                "267f9d46.31c22a"
            ]
        ]
    },
    {
        "id": "ee89ce54.35d72",
        "type": "ui_button",
        "z": "8a5ecff9.35f98",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 13,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "↙",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 210,
        "y": 560,
        "wires": [
            [
                "44886d82.d41c54"
            ]
        ]
    },
    {
        "id": "df08698f.817f08",
        "type": "ui_button",
        "z": "8a5ecff9.35f98",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 16,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "⇓",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 210,
        "y": 680,
        "wires": [
            [
                "73591a59.633894"
            ]
        ]
    },
    {
        "id": "9a216fda.78d6c8",
        "type": "ui_button",
        "z": "8a5ecff9.35f98",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 17,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "⇑",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 210,
        "y": 720,
        "wires": [
            [
                "2bb2ebda.b37714"
            ]
        ]
    },
    {
        "id": "4cf0bb32.222b74",
        "type": "function",
        "z": "8a5ecff9.35f98",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('jogIncrement', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "3a6b6df8.fba0ba",
        "type": "ui_button",
        "z": "8a5ecff9.35f98",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "25mm",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "25",
        "payloadType": "num",
        "topic": "",
        "x": 210,
        "y": 280,
        "wires": [
            [
                "4cf0bb32.222b74"
            ]
        ]
    },
    {
        "id": "2558bf65.fe3dc8",
        "type": "function",
        "z": "8a5ecff9.35f98",
        "name": "Sensor data graph",
        "func": "var msg1 = {};\nvar msg2 = {};\nvar msg3 = {};\nvar msg4 = {};\nvar msg5 = {};\nvar msg6 = {};\n\nmsg1.payload = msg.payload.a;\nmsg1.topic = \"Sensor A\";\n\nmsg2.payload = msg.payload.c;\nmsg2.topic = \"Sensor C\";\n\nmsg3.payload = msg.payload.b;\nmsg3.topic = \"Sensor B\";\n\nmsg4.payload = 30000;\nmsg4.topic = \"Docked\";\n\nmsg6.payload = 35000;\nmsg6.topic = \"Overshot\";\n\nmsg5.payload = msg.payload.z;\nmsg5.topic = \"Z\";\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6];",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 710,
        "y": 580,
        "wires": [
            [
                "7eac3eea.df8a4"
            ],
            [
                "7eac3eea.df8a4"
            ],
            [
                "7eac3eea.df8a4"
            ],
            [
                "1d8714f1.3f7be3"
            ],
            [
                "1d8714f1.3f7be3"
            ],
            [
                "666e82ab.3c281c",
                "1d8714f1.3f7be3"
            ]
        ]
    },
    {
        "id": "666e82ab.3c281c",
        "type": "debug",
        "z": "8a5ecff9.35f98",
        "name": "z",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 600,
        "wires": []
    },
    {
        "id": "1d8714f1.3f7be3",
        "type": "ui_chart",
        "z": "8a5ecff9.35f98",
        "name": "",
        "group": "f9aacf92.64234",
        "order": 1,
        "width": "12",
        "height": "14",
        "label": "Z sensor",
        "chartType": "polar-area",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2ca02c",
            "#1f77b4",
            "#ff9300",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": true,
        "x": 900,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "c7cc129c.2d7a1",
        "type": "function",
        "z": "8a5ecff9.35f98",
        "name": "Generate gcode",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar origoX=global.get('origoX') || 535;\nvar origoY=global.get('origoY') || 320;\nvar origoZ=global.get('origoZ') || 230;\nvar position = global.get(\"rig.position\") || null;\nvar values = global.get(\"sensors\") || null;\n\nvar aVal = values.a;\nvar bVal = values.b;\nvar cVal = values.c;\nvar zVal = values.z;\n\nvar abVal = (aVal+bVal)/2;\nvar acVal = (aVal+cVal)/2;\nvar bcVal = (bVal+cVal)/2;\nvar abcVal = (aVal+bVal+zVal)/3;\n\nvar xPosChange = 0;\nvar yPosChange = 0;\nvar zPosChange = 0;\n\nvar ji = jogIncrement;\nvar mode;\nvar oldMode = flow.get(\"mode\");\n\n    mode=\"-\";\n\nif(zVal < 500 && (((aVal > 1500) && (bcVal > 1500)) || ((bVal > 1500) && (acVal > 1500)) || ((cVal > 1500) && (abVal > 1500)))){\n    jogIncrement = 5;\n    ji=5;\n}\nif(zVal < 500 && (((aVal > 3000) && (bcVal > 3000)) || ((bVal > 3000) && (acVal > 3000)) || ((cVal > 3000) && (abVal > 3000)))){\n    jogIncrement = 5;\n    ji=5;\n}\n\nelse if((zVal > 500 && zVal < 7500) && (((aVal > 2500) && (bcVal > 2500)) || ((bVal > 2500) && (acVal > 2500)) || ((cVal > 2500) && (abVal > 2500)))){\n    jogIncrement = 1.5;\n    ji=1.5;\n}\nif(zVal > 7500){\n    jogIncrement = 1;\n    ji=1.5;\n    feed = 3000;\n} \n\nif(zVal > 30000){\n    jogIncrement = 0.5;\n    ji=0.5;\n    feed = 2000;\n}\n\nif(aVal > bcVal+200){ //NE\n    xPosChange = jogIncrement;\n    yPosChange = jogIncrement;\n    mode=\"NW\";\n} \nelse if(bVal > acVal+200){ //NW\n    xPosChange = jogIncrement;\n    yPosChange = -jogIncrement;\n    mode=\"NE\";\n} \nelse if(cVal > abVal+200){ //S\n    xPosChange = -jogIncrement;\n    mode=\"S\";\n} \nelse if(bcVal > aVal+200){ //SW\n    xPosChange = -jogIncrement;\n    yPosChange = -jogIncrement;\n    mode=\"SW\";\n} \nelse if(acVal > bVal+200){ //SE\n    xPosChange = -jogIncrement;\n    yPosChange = jogIncrement;\n    mode=\"SE\";\n} \nelse if(abVal > cVal+200){ //N\n    xPosChange = jogIncrement;\n    mode=\"N\";\n} \nelse {\n    if(zVal < 34000){\n        zPosChange = -15;\n        mode=\"D15\";\n    }\n    else if(zVal > 34000){\n        zPosChange = -5;\n        mode=\"D5\";\n    }\n}\n\nif(zVal > 35500){\n    xPosChange = 0;\n    yPosChange = 0;\n    zPosChange = 0;\n    mode=\"H\"\n}\n\nflow.set(\"mode\", mode);\n\nvar gcode=\"$J=G91G21X\"+ xPosChange + \"Y\"+ yPosChange + \"Z\"+ zPosChange + \"F\"+feed;\n\nvar newPosition = {\n    \"x\": xPosChange,\n    \"y\": yPosChange,\n    \"z\": zPosChange\n}\n\nmsg = {};\nvar msg1 = {};\nvar msg2 = {};\nvar msg3 = {};\nmsg3.payload = \"Ji:\" + ji + \" Mode:\" + mode; //newPosition;\n\nif(mode != oldMode){\n    msg2.payload = \"JC\";\n    return [[],msg2,msg3];\n}\nelse {\n    msg1.payload = gcode;\n    return [msg1,[],msg3];\n}",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 940,
        "y": 160,
        "wires": [
            [
                "d188d5e0.6dc478"
            ],
            [
                "6a6290b0.7df2a"
            ],
            [
                "80e4eae4.950b18"
            ]
        ]
    },
    {
        "id": "8ac90849.7c4df8",
        "type": "ui_button",
        "z": "8a5ecff9.35f98",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 22,
        "width": "2",
        "height": 1,
        "passthru": false,
        "label": "Auto home",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 550,
        "y": 160,
        "wires": [
            [
                "f8d08f2d.cc5338"
            ]
        ]
    },
    {
        "id": "d188d5e0.6dc478",
        "type": "link out",
        "z": "8a5ecff9.35f98",
        "name": "Serial_out",
        "links": [
            "38d25aa3.d6580e"
        ],
        "x": 1075,
        "y": 140,
        "wires": []
    },
    {
        "id": "82568689.191fd8",
        "type": "ui_button",
        "z": "8a5ecff9.35f98",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 20,
        "width": "3",
        "height": 1,
        "passthru": false,
        "label": "Go to random",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 240,
        "y": 840,
        "wires": [
            [
                "eebcceb9.b67138"
            ]
        ]
    },
    {
        "id": "3903b5f6.94abfa",
        "type": "function",
        "z": "7f063300.e79e2c",
        "name": "Fake value data",
        "func": "min = 0;\nmax = 100;\n\nvar a = flow.get('aV') || 1;\nvar b = flow.get('bV') || 1;\nvar c = flow.get('cV') || 1;\nvar z = flow.get('zV') || 1;\n\na = a+randomIntFromInterval(min, max)-50;\nb = b+randomIntFromInterval(min, max)-50;\nc = c+randomIntFromInterval(min, max)-50;\nz = z+randomIntFromInterval(min+50, max*5)-300;\n\nif( a < 1){a=1}\nif( b < 1){b=1}\nif( c < 1){c=1}\nif( z < 200){z=200}\n\nif( a > 35000){a=35000}\nif( b > 35000){b=35000}\nif( c > 35000){c=35000}\nif( z > 35000){z=34800}\n\nflow.set('aV', a);\nflow.set('bV', b);\nflow.set('cV', c);\nflow.set('zV', z);\n\nfunction randomIntFromInterval(min, max) { // min and max included \n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nmsg = {\n    \"payload\": {\n        \"a\":a,\n        \"b\":b,\n        \"c\":c,\n        \"z\":z\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 700,
        "y": 680,
        "wires": [
            [
                "1cd9a762.5dbe71",
                "1b0d7fb8.2cb328"
            ]
        ]
    },
    {
        "id": "34674cc0.4b95e4",
        "type": "inject",
        "z": "7f063300.e79e2c",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 90,
        "y": 720,
        "wires": [
            [
                "305ab45f.f546bc"
            ]
        ]
    },
    {
        "id": "305ab45f.f546bc",
        "type": "trigger",
        "z": "7f063300.e79e2c",
        "name": "",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-200",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 280,
        "y": 720,
        "wires": [
            [
                "d254adda.e617d"
            ]
        ]
    },
    {
        "id": "8ca0f380.71ed28",
        "type": "inject",
        "z": "7f063300.e79e2c",
        "name": "Off",
        "props": [
            {
                "p": "reset",
                "v": "false",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 680,
        "wires": [
            [
                "305ab45f.f546bc"
            ]
        ]
    },
    {
        "id": "dd1ef2cb.922ee8",
        "type": "link in",
        "z": "8a5ecff9.35f98",
        "name": "Sensors_in",
        "links": [
            "1cd9a762.5dbe71",
            "a6cc3eb3.69cf18"
        ],
        "x": 575,
        "y": 580,
        "wires": [
            [
                "2558bf65.fe3dc8"
            ]
        ]
    },
    {
        "id": "491f4906.d58e",
        "type": "function",
        "z": "7f063300.e79e2c",
        "name": "Fake position data",
        "func": "var min = 0;\nvar max = 10;\n\nvar maxX = 1140;\nvar maxY = 770;\nvar maxZ = 245;\n\nvar rig = global.get('rig') || null;\nif(rig != null){\n    maxX = rig.maxMovement.x;\n    maxY = rig.maxMovement.y;\n    maxZ = rig.maxMovement.z;\n}\n\nvar x = flow.get('xP') || 0;\nvar y = flow.get('yP') || 0;\nvar z = flow.get('zP') || 0;\n\nx = x+randomIntFromInterval(min, max)-5;\ny = y+randomIntFromInterval(min, max)-5;\nz = z+randomIntFromInterval(min, max)-5;\n\nif( x < 0){x=0}\nif( y < 0){y=0}\nif( z < -maxZ){z=-maxZ}\n\nif( x > maxX){x=maxX}\nif( y > maxY){y=maxY}\nif( z > 0){z=0}\n\nflow.set('xP', x);\nflow.set('yP', y);\nflow.set('zP', z);\n\nfunction randomIntFromInterval(min, max) { // min and max included \n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nmsg = {\n    \"payload\": {\n        \"WPos\": [x, y, z]\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 710,
        "y": 720,
        "wires": [
            [
                "912f782e.fd11b8"
            ]
        ]
    },
    {
        "id": "63214130.e00c28",
        "type": "comment",
        "z": "7f063300.e79e2c",
        "name": "Fake it",
        "info": "",
        "x": 90,
        "y": 640,
        "wires": []
    },
    {
        "id": "912f782e.fd11b8",
        "type": "link out",
        "z": "7f063300.e79e2c",
        "name": "Fake_pos_out",
        "links": [
            "e4421252.d9c05"
        ],
        "x": 835,
        "y": 720,
        "wires": []
    },
    {
        "id": "a8c0d07.69c3db",
        "type": "function",
        "z": "6108fa1d.d7726c",
        "name": "Set Glob Pos",
        "func": "// Set position globally\nvar position = {\n    \"x\":msg.payload.WPos[0],\n    \"y\":msg.payload.WPos[1],\n    \"z\":msg.payload.WPos[2]\n}\n\nglobal.set('rig.position', position);\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 410,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "2f2eb8e9.83be4",
        "type": "function",
        "z": "6108fa1d.d7726c",
        "name": "Set Glob values",
        "func": "var sensors = {\n    \"a\":msg.payload.a,\n    \"b\":msg.payload.b,\n    \"c\":msg.payload.c,\n    \"z\":msg.payload.z\n}\n\nglobal.set('sensors', sensors);\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "d057f8d2.ca705",
        "type": "ui_button",
        "z": "8a5ecff9.35f98",
        "name": "Cancel jog",
        "group": "591df4c.3244c0c",
        "order": 11,
        "width": "1",
        "height": "1",
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "icon": "warning",
        "payload": "[133]",
        "payloadType": "bin",
        "topic": "",
        "x": 230,
        "y": 480,
        "wires": [
            [
                "9f6871ab.8440b8"
            ]
        ]
    },
    {
        "id": "9f6871ab.8440b8",
        "type": "link out",
        "z": "8a5ecff9.35f98",
        "name": "Serial_in",
        "links": [
            "52d69fe7.a46dc"
        ],
        "x": 335,
        "y": 480,
        "wires": []
    },
    {
        "id": "4ba69318.50e854",
        "type": "function",
        "z": "8a5ecff9.35f98",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar gcode=\"$J=G91G21Y-\"+ jogIncrement + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 440,
        "wires": [
            [
                "d852b2ea.2060f"
            ]
        ]
    },
    {
        "id": "d852b2ea.2060f",
        "type": "link out",
        "z": "8a5ecff9.35f98",
        "name": "Serial_in",
        "links": [
            "38d25aa3.d6580e"
        ],
        "x": 455,
        "y": 440,
        "wires": []
    },
    {
        "id": "8e6a242.29bbed8",
        "type": "function",
        "z": "8a5ecff9.35f98",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar gcode=\"$J=G91G21Y\"+ jogIncrement + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 520,
        "wires": [
            [
                "457efe09.79c0d8"
            ]
        ]
    },
    {
        "id": "457efe09.79c0d8",
        "type": "link out",
        "z": "8a5ecff9.35f98",
        "name": "Serial_in",
        "links": [
            "38d25aa3.d6580e"
        ],
        "x": 455,
        "y": 520,
        "wires": []
    },
    {
        "id": "dd76fed6.44732",
        "type": "function",
        "z": "8a5ecff9.35f98",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar gcode=\"$J=G91G21X-\"+ jogIncrement + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 600,
        "wires": [
            [
                "a5dd9dfa.937f08"
            ]
        ]
    },
    {
        "id": "a5dd9dfa.937f08",
        "type": "link out",
        "z": "8a5ecff9.35f98",
        "name": "Serial_in",
        "links": [
            "38d25aa3.d6580e"
        ],
        "x": 455,
        "y": 600,
        "wires": []
    },
    {
        "id": "5e14caf2.2c22a4",
        "type": "function",
        "z": "8a5ecff9.35f98",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar gcode=\"$J=G91G21X\"+ jogIncrement + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 360,
        "wires": [
            [
                "370024e7.4f9cbc"
            ]
        ]
    },
    {
        "id": "370024e7.4f9cbc",
        "type": "link out",
        "z": "8a5ecff9.35f98",
        "name": "Serial_in",
        "links": [
            "38d25aa3.d6580e"
        ],
        "x": 455,
        "y": 360,
        "wires": []
    },
    {
        "id": "f0a1c5dc.de6078",
        "type": "ui_button",
        "z": "8a5ecff9.35f98",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 10,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "ᐊ",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 210,
        "y": 440,
        "wires": [
            [
                "4ba69318.50e854"
            ]
        ]
    },
    {
        "id": "b63271d2.134ce8",
        "type": "ui_button",
        "z": "8a5ecff9.35f98",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 12,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "ᐅ",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 210,
        "y": 520,
        "wires": [
            [
                "8e6a242.29bbed8"
            ]
        ]
    },
    {
        "id": "46f8cc44.a21a64",
        "type": "ui_button",
        "z": "8a5ecff9.35f98",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 14,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "ᐁ",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 210,
        "y": 600,
        "wires": [
            [
                "dd76fed6.44732"
            ]
        ]
    },
    {
        "id": "2a11c2ba.9b4716",
        "type": "ui_button",
        "z": "8a5ecff9.35f98",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 8,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "ᐃ",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 210,
        "y": 360,
        "wires": [
            [
                "5e14caf2.2c22a4"
            ]
        ]
    },
    {
        "id": "7f6a897f.8f8cd",
        "type": "serial out",
        "z": "7f063300.e79e2c",
        "name": "Blackbox Controller",
        "serial": "23d9e16c.3ccade",
        "x": 560,
        "y": 140,
        "wires": []
    },
    {
        "id": "2add86a.3a6f1fa",
        "type": "ui_dropdown",
        "z": "7f063300.e79e2c",
        "name": "Select serial port",
        "label": "Serial port",
        "tooltip": "",
        "place": "Select option",
        "group": "b6c12137.ce6d28",
        "order": 30,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "/dev/tty.usbserial-AR0JZC14",
                "value": "/dev/tty.usbserial-AR0JZC14",
                "type": "str"
            },
            {
                "label": "COM15",
                "value": "COM15",
                "type": "str"
            },
            {
                "label": "Dummy",
                "value": "Dummy",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 250,
        "y": 40,
        "wires": [
            [
                "86171460.ac5f38"
            ]
        ]
    },
    {
        "id": "86171460.ac5f38",
        "type": "function",
        "z": "7f063300.e79e2c",
        "name": "Set Global serial port",
        "func": "// Set global value for selected serial port\nvar serial = msg.payload;\n\nglobal.set('serial', serial);\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 460,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "1ad27c4c.a6e794",
        "type": "function",
        "z": "7f063300.e79e2c",
        "name": "Port eval",
        "func": "//Quick port selector.\n//Uses hardcoded values due to not being able to \n//change port in Serial node during run-time.\n\nvar serial = global.get('serial') || \"/dev/tty.usbserial-AR0JZC14\";\n\nif(serial == \"/dev/tty.usbserial-AR0JZC14\"){\n    return [msg,[]];\n}\nelse if(serial == \"COM15\"){\n    return [[],msg];\n} else{\n    return null;\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 140,
        "wires": [
            [
                "29b54f72.c4d198"
            ],
            [
                "7f6a897f.8f8cd"
            ]
        ]
    },
    {
        "id": "8f88ec09.1c30f",
        "type": "serial in",
        "z": "7f063300.e79e2c",
        "name": "Blackbox Controller",
        "serial": "d12f49f7.adc66",
        "x": 130,
        "y": 400,
        "wires": [
            [
                "c9349ca2.fe05f"
            ]
        ]
    },
    {
        "id": "c9349ca2.fe05f",
        "type": "function",
        "z": "7f063300.e79e2c",
        "name": "Port eval",
        "func": "//Quick port selector.\n//Uses hardcoded values due to not being able to \n//change port in Serial node during run-time.\n\nserial = global.get('serial') || \"/dev/tty.usbserial-AR0JZC14\";\n\nif(msg.port == serial){\n    return msg;\n} else{\n    return null;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 380,
        "wires": [
            [
                "d79d9389.4237e",
                "394c1914.382c2e",
                "a6cc3eb3.69cf18"
            ]
        ]
    },
    {
        "id": "e929bbfb.355a5",
        "type": "inject",
        "z": "7f063300.e79e2c",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "/dev/tty.usbserial-AR0JZC14",
        "payloadType": "str",
        "x": 90,
        "y": 40,
        "wires": [
            [
                "2add86a.3a6f1fa"
            ]
        ]
    },
    {
        "id": "d254adda.e617d",
        "type": "function",
        "z": "7f063300.e79e2c",
        "name": "Fake dummy data?",
        "func": "var serial = global.get('serial') || \"/dev/tty.usbserial-AR0JZC14\";\n\nif(serial == \"Dummy\"){\n    return msg;\n} else{\n    return null;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 720,
        "wires": [
            [
                "3903b5f6.94abfa",
                "491f4906.d58e",
                "15e59b77.cc7bed"
            ]
        ]
    },
    {
        "id": "f53aa506.112e98",
        "type": "ui_text",
        "z": "8a5ecff9.35f98",
        "group": "591df4c.3244c0c",
        "order": 25,
        "width": 0,
        "height": 0,
        "name": "X",
        "label": "X:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1010,
        "y": 400,
        "wires": []
    },
    {
        "id": "97c37084.a6fa2",
        "type": "function",
        "z": "8a5ecff9.35f98",
        "name": "Positions",
        "func": "var position = global.get('rig.position') || null;\n\nvar msg1 = {};\nvar msg2 = {};\nvar msg3 = {};\n\nif(position != null){\nmsg1.payload = position.x || \"-\";\nmsg2.payload = position.y || \"-\";\nmsg3.payload = position.z || \"-\";\n} else{\nmsg1.payload = \"-\";\nmsg2.payload = \"-\";\nmsg3.payload = \"-\"; \n}\n\nreturn [msg1, msg2, msg3]",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 880,
        "y": 440,
        "wires": [
            [
                "f53aa506.112e98"
            ],
            [
                "51f0ef1e.7bc6f"
            ],
            [
                "6889a378.53881c"
            ]
        ]
    },
    {
        "id": "51f0ef1e.7bc6f",
        "type": "ui_text",
        "z": "8a5ecff9.35f98",
        "group": "591df4c.3244c0c",
        "order": 26,
        "width": 0,
        "height": 0,
        "name": "Y",
        "label": "Y:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1010,
        "y": 440,
        "wires": []
    },
    {
        "id": "6889a378.53881c",
        "type": "ui_text",
        "z": "8a5ecff9.35f98",
        "group": "591df4c.3244c0c",
        "order": 27,
        "width": 0,
        "height": 0,
        "name": "Z",
        "label": "Z:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1010,
        "y": 480,
        "wires": []
    },
    {
        "id": "c8be846e.18a648",
        "type": "inject",
        "z": "8a5ecff9.35f98",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 630,
        "y": 440,
        "wires": [
            [
                "32e32d.b1e45cd4"
            ]
        ]
    },
    {
        "id": "32e32d.b1e45cd4",
        "type": "trigger",
        "z": "8a5ecff9.35f98",
        "name": "200ms",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-200",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 750,
        "y": 440,
        "wires": [
            [
                "97c37084.a6fa2"
            ]
        ]
    },
    {
        "id": "5b1c8fb0.cbadb",
        "type": "inject",
        "z": "8a5ecff9.35f98",
        "name": "Off",
        "props": [
            {
                "p": "reset",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 630,
        "y": 400,
        "wires": [
            [
                "32e32d.b1e45cd4"
            ]
        ]
    },
    {
        "id": "d93aace.e1ac3d",
        "type": "function",
        "z": "7f063300.e79e2c",
        "name": "Set rig",
        "func": "var rig = {\n    \"maxMovement\":{\n        \"x\":1140,\n        \"y\":770,\n        \"z\":245\n    }\n}\n\nglobal.set('rig', rig);\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 390,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "eebcceb9.b67138",
        "type": "function",
        "z": "8a5ecff9.35f98",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar maxMovement=global.get('rig.maxMovement') || null;\nvar position=global.get('rig.position') || null;\n\nif(maxMovement != null && position != null){\n    var x=Math.floor((Math.random() * maxMovement.x) + 1);\n    var y=Math.floor((Math.random() * maxMovement.y) + 1);\n    var z=Math.floor((Math.random() * 100) + 1);\n\n    var gcode=\"$J=G90G21X\"+ x + \"Y\" + y + \"Z-\" + z + \"F\"+feed;\n\n    msg.payload = gcode;\n    return msg;   \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 840,
        "wires": [
            [
                "59bedb08.68c064",
                "bc78dbfd.64a5b"
            ]
        ]
    },
    {
        "id": "59bedb08.68c064",
        "type": "link out",
        "z": "8a5ecff9.35f98",
        "name": "Serial_in",
        "links": [
            "38d25aa3.d6580e"
        ],
        "x": 495,
        "y": 880,
        "wires": []
    },
    {
        "id": "9fef3d1c.4cc82",
        "type": "comment",
        "z": "8a5ecff9.35f98",
        "name": "Manual movement",
        "info": "",
        "x": 130,
        "y": 40,
        "wires": []
    },
    {
        "id": "f99f8abb.1a993",
        "type": "comment",
        "z": "8a5ecff9.35f98",
        "name": "Autonomous movement",
        "info": "",
        "x": 580,
        "y": 40,
        "wires": []
    },
    {
        "id": "3542458d.64243a",
        "type": "comment",
        "z": "8a5ecff9.35f98",
        "name": "Status feedback",
        "info": "",
        "x": 640,
        "y": 360,
        "wires": []
    },
    {
        "id": "b63fc47c.7603a8",
        "type": "function",
        "z": "8a5ecff9.35f98",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('feed', value);\nmsg.payload = \"F: \" + value;\nmsg.topic = \"feed\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 800,
        "wires": [
            [
                "d3349b02.3752e8"
            ]
        ]
    },
    {
        "id": "a2d09a9.15e7ae8",
        "type": "ui_slider",
        "z": "8a5ecff9.35f98",
        "name": "",
        "label": "Feed",
        "tooltip": "",
        "group": "591df4c.3244c0c",
        "order": 19,
        "width": "3",
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "",
        "min": "100",
        "max": "3500",
        "step": "50",
        "x": 210,
        "y": 800,
        "wires": [
            [
                "b63fc47c.7603a8"
            ]
        ]
    },
    {
        "id": "80e4eae4.950b18",
        "type": "ui_text",
        "z": "8a5ecff9.35f98",
        "group": "591df4c.3244c0c",
        "order": 24,
        "width": "3",
        "height": 1,
        "name": "Status",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1030,
        "y": 800,
        "wires": []
    },
    {
        "id": "cb1e067a.d234f",
        "type": "inject",
        "z": "8a5ecff9.35f98",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "3500",
        "payloadType": "num",
        "x": 90,
        "y": 800,
        "wires": [
            [
                "a2d09a9.15e7ae8"
            ]
        ]
    },
    {
        "id": "bc78dbfd.64a5b",
        "type": "debug",
        "z": "8a5ecff9.35f98",
        "name": "Rnd pos",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 840,
        "wires": []
    },
    {
        "id": "7da32ee3.6636a8",
        "type": "ui_button",
        "z": "8a5ecff9.35f98",
        "name": "Cancel",
        "group": "591df4c.3244c0c",
        "order": 23,
        "width": "1",
        "height": "1",
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "icon": "warning",
        "payload": "[133]",
        "payloadType": "bin",
        "topic": "",
        "x": 540,
        "y": 120,
        "wires": [
            [
                "69b6e051.bfb78",
                "95517da0.20ed78"
            ]
        ]
    },
    {
        "id": "a05e63ff.a36628",
        "type": "function",
        "z": "8a5ecff9.35f98",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('homing.repeats', value);\nmsg.payload = \"R: \" + value;\nmsg.topic = \"repeats\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 880,
        "y": 280,
        "wires": [
            [
                "d3349b02.3752e8"
            ]
        ]
    },
    {
        "id": "cabd9272.a6011",
        "type": "ui_slider",
        "z": "8a5ecff9.35f98",
        "name": "",
        "label": "Repts",
        "tooltip": "",
        "group": "591df4c.3244c0c",
        "order": 21,
        "width": "3",
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "",
        "min": "50",
        "max": "1000",
        "step": "50",
        "x": 750,
        "y": 280,
        "wires": [
            [
                "a05e63ff.a36628"
            ]
        ]
    },
    {
        "id": "742f4beb.777bbc",
        "type": "inject",
        "z": "8a5ecff9.35f98",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "50",
        "payloadType": "num",
        "x": 610,
        "y": 280,
        "wires": [
            [
                "cabd9272.a6011"
            ]
        ]
    },
    {
        "id": "d3349b02.3752e8",
        "type": "function",
        "z": "8a5ecff9.35f98",
        "name": "Format",
        "func": "if(msg.topic == \"repeats\" || msg.topic == \"feed\"){\n    var feed = global.get('feed') || \"n/a\";\n    var repeats = global.get('homing.repeats') || \"n/a\";\n    msg.payload = \"F: \" + feed + \" R: \" + repeats;\n}\nmsg.topic = null;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 900,
        "y": 800,
        "wires": [
            [
                "80e4eae4.950b18"
            ]
        ]
    },
    {
        "id": "5e128f92.ed3398",
        "type": "function",
        "z": "8a5ecff9.35f98",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar gcode=\"$J=G01G21Z0F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 760,
        "wires": [
            [
                "12926956.a9e237"
            ]
        ]
    },
    {
        "id": "12926956.a9e237",
        "type": "link out",
        "z": "8a5ecff9.35f98",
        "name": "Serial_in",
        "links": [
            "38d25aa3.d6580e"
        ],
        "x": 455,
        "y": 760,
        "wires": []
    },
    {
        "id": "144d294d.41ecff",
        "type": "ui_button",
        "z": "8a5ecff9.35f98",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 18,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "⤒",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 210,
        "y": 760,
        "wires": [
            [
                "5e128f92.ed3398"
            ]
        ]
    },
    {
        "id": "f8d08f2d.cc5338",
        "type": "trigger",
        "z": "8a5ecff9.35f98",
        "name": "",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-400",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 740,
        "y": 160,
        "wires": [
            [
                "c7cc129c.2d7a1"
            ]
        ]
    },
    {
        "id": "fbe099ca.6ebea",
        "type": "inject",
        "z": "8a5ecff9.35f98",
        "name": "Off",
        "props": [
            {
                "p": "reset",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 550,
        "y": 80,
        "wires": [
            [
                "f8d08f2d.cc5338"
            ]
        ]
    },
    {
        "id": "35c1b31a.db25a4",
        "type": "debug",
        "z": "8a5ecff9.35f98",
        "name": "Homing",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 220,
        "wires": []
    },
    {
        "id": "c5f873d2.ac10c",
        "type": "delay",
        "z": "8a5ecff9.35f98",
        "name": "",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 650,
        "y": 220,
        "wires": [
            [
                "35c1b31a.db25a4"
            ]
        ]
    },
    {
        "id": "15e59b77.cc7bed",
        "type": "debug",
        "z": "7f063300.e79e2c",
        "name": "Fake",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 760,
        "wires": []
    },
    {
        "id": "7eac3eea.df8a4",
        "type": "ui_chart",
        "z": "8a5ecff9.35f98",
        "name": "",
        "group": "7d7753a1.b4c074",
        "order": 1,
        "width": "12",
        "height": "14",
        "label": "A, B, C sensors",
        "chartType": "polar-area",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#ff7f0e",
            "#aec7e8",
            "#2ca02c",
            "#ff7f0e",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": true,
        "x": 920,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "69b6e051.bfb78",
        "type": "change",
        "z": "8a5ecff9.35f98",
        "name": "rst",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "reset",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 120,
        "wires": [
            [
                "f8d08f2d.cc5338"
            ]
        ]
    },
    {
        "id": "aec888aa.3cf53",
        "type": "link out",
        "z": "8a5ecff9.35f98",
        "name": "Serial_in",
        "links": [
            "38d25aa3.d6580e"
        ],
        "x": 315,
        "y": 80,
        "wires": []
    },
    {
        "id": "afbb6da.2bd421",
        "type": "ui_button",
        "z": "8a5ecff9.35f98",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 1,
        "width": "1",
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "home",
        "payload": "$H",
        "payloadType": "str",
        "topic": "",
        "x": 210,
        "y": 80,
        "wires": [
            [
                "aec888aa.3cf53"
            ]
        ]
    },
    {
        "id": "6e672cee.8cf96c",
        "type": "function",
        "z": "7f063300.e79e2c",
        "name": "Limit output",
        "func": "\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 770,
        "y": 380,
        "wires": [
            [
                "f9aafd7b.520f38"
            ]
        ]
    },
    {
        "id": "52d69fe7.a46dc",
        "type": "link in",
        "z": "7f063300.e79e2c",
        "name": "Direct_serial",
        "links": [
            "9f6871ab.8440b8",
            "95517da0.20ed78",
            "79d7036.b90f1fc",
            "96ec626e.4bb58"
        ],
        "x": 325,
        "y": 100,
        "wires": [
            [
                "29b54f72.c4d198",
                "7f6a897f.8f8cd"
            ]
        ]
    },
    {
        "id": "456d01e.4987f8",
        "type": "csv",
        "z": "6108fa1d.d7726c",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "once",
        "multi": "one",
        "ret": "\\n",
        "temp": "pos_x,pos_y,pos_z,tsp",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 530,
        "y": 700,
        "wires": [
            [
                "f3d34e4d.ac351"
            ]
        ]
    },
    {
        "id": "d15cfd21.59a7a8",
        "type": "debug",
        "z": "6108fa1d.d7726c",
        "name": "Position CSV",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 700,
        "wires": []
    },
    {
        "id": "dd887f17.6702d",
        "type": "function",
        "z": "6108fa1d.d7726c",
        "name": "Prep pos",
        "func": "var pos_x = msg.payload.WPos[0];\nvar pos_y = msg.payload.WPos[1];\nvar pos_z = msg.payload.WPos[2];\nvar tsp = msg.timestamp;\nmsg.payload = {pos_x, pos_y, pos_z, tsp};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 700,
        "wires": [
            [
                "456d01e.4987f8"
            ]
        ]
    },
    {
        "id": "5e0e6908.9ebd18",
        "type": "file",
        "z": "6108fa1d.d7726c",
        "name": "Position file",
        "filename": "",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 850,
        "y": 700,
        "wires": [
            [
                "d15cfd21.59a7a8"
            ]
        ]
    },
    {
        "id": "f3d34e4d.ac351",
        "type": "function",
        "z": "6108fa1d.d7726c",
        "name": "File save control",
        "func": "var active = global.get('MappingActive') || \"active\";\n\nif(active != 0){\n    msg.filename = \"position-\" + global.get('filename') || \"position.csv\";\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 680,
        "y": 700,
        "wires": [
            [
                "5e0e6908.9ebd18"
            ]
        ]
    },
    {
        "id": "2d754b36.7eeadc",
        "type": "debug",
        "z": "6108fa1d.d7726c",
        "name": "values",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 820,
        "wires": []
    },
    {
        "id": "94a9d6b8.64774",
        "type": "debug",
        "z": "6108fa1d.d7726c",
        "name": "values",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 620,
        "wires": []
    },
    {
        "id": "95517da0.20ed78",
        "type": "link out",
        "z": "8a5ecff9.35f98",
        "name": "Serial_in",
        "links": [
            "52d69fe7.a46dc"
        ],
        "x": 655,
        "y": 80,
        "wires": []
    },
    {
        "id": "79d7036.b90f1fc",
        "type": "link out",
        "z": "2e60473f.e3bb9",
        "name": "Serial_in",
        "links": [
            "52d69fe7.a46dc"
        ],
        "x": 495,
        "y": 760,
        "wires": []
    },
    {
        "id": "3ee222df.cda11e",
        "type": "change",
        "z": "2e60473f.e3bb9",
        "name": "Cancel jog",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[133]",
                "tot": "bin"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 760,
        "wires": [
            [
                "79d7036.b90f1fc"
            ]
        ]
    },
    {
        "id": "1fcad01d.d4303",
        "type": "ui_button",
        "z": "8a5ecff9.35f98",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "10mm",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "10",
        "payloadType": "num",
        "topic": "",
        "x": 210,
        "y": 240,
        "wires": [
            [
                "43927f6d.ad56a"
            ]
        ]
    },
    {
        "id": "43927f6d.ad56a",
        "type": "function",
        "z": "8a5ecff9.35f98",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('jogIncrement', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "96ec626e.4bb58",
        "type": "link out",
        "z": "8a5ecff9.35f98",
        "name": "Serial_Out",
        "links": [
            "52d69fe7.a46dc"
        ],
        "x": 1075,
        "y": 220,
        "wires": []
    },
    {
        "id": "6a6290b0.7df2a",
        "type": "change",
        "z": "8a5ecff9.35f98",
        "name": "Jog cancel",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[133]",
                "tot": "bin"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 220,
        "wires": [
            [
                "96ec626e.4bb58",
                "79ee0a0.dc363f8"
            ]
        ]
    },
    {
        "id": "79ee0a0.dc363f8",
        "type": "debug",
        "z": "8a5ecff9.35f98",
        "name": "Jog cancel",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 280,
        "wires": []
    },
    {
        "id": "ce44e20d.74d2a",
        "type": "inject",
        "z": "6108fa1d.d7726c",
        "name": "New day means new name",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 12 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 100,
        "wires": [
            [
                "df2f75ec.007ec8"
            ]
        ]
    },
    {
        "id": "dcb814ea.728828",
        "type": "inject",
        "z": "6108fa1d.d7726c",
        "name": "New day means new name",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 60,
        "wires": [
            [
                "df2f75ec.007ec8"
            ]
        ]
    }
]


================================================
FILE: flow_cred.json
================================================
{
    "$": "554db84682c319af0393794692a84405SyU="
}


================================================
FILE: flows.json
================================================
[
    {
        "id": "aaab088f87709a09",
        "type": "tab",
        "label": "Main",
        "disabled": false,
        "info": ""
    },
    {
        "id": "62fd21a7ba3f28b8",
        "type": "tab",
        "label": "Homing",
        "disabled": false,
        "info": ""
    },
    {
        "id": "90cdd7aec5fd0b38",
        "type": "tab",
        "label": "Manual homing",
        "disabled": false,
        "info": ""
    },
    {
        "id": "0aceb2d416fb98e0",
        "type": "tab",
        "label": "Mapping config",
        "disabled": false,
        "info": ""
    },
    {
        "id": "892a62a4c03bf242",
        "type": "tab",
        "label": "Mapping",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ac33877c.a8fa08",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "ec2c78e7.48ac68",
        "type": "ui_tab",
        "name": "Magnetic homing",
        "icon": "wifi_tethering",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "dc63712a.a007d",
        "type": "ui_tab",
        "name": "Manual homing",
        "icon": "flight_land",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "428976bf.20c0c",
        "type": "ui_group",
        "name": "Homing & control",
        "tab": "ec2c78e7.48ac68",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "591df4c.3244c0c",
        "type": "ui_group",
        "name": "Control",
        "tab": "dc63712a.a007d",
        "order": 1,
        "disp": true,
        "width": "3",
        "collapse": false
    },
    {
        "id": "19dc6535.e7fc1b",
        "type": "ui_group",
        "name": "Mapping",
        "tab": "ec2c78e7.48ac68",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "f9aacf92.64234",
        "type": "ui_group",
        "name": "Z sensor",
        "tab": "dc63712a.a007d",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "b6c12137.ce6d28",
        "type": "ui_group",
        "name": "Status",
        "tab": "ec2c78e7.48ac68",
        "order": 3,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "d534b0ff.92c37",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "428976bf.20c0c",
        "order": 15,
        "width": "6",
        "height": 1
    },
    {
        "id": "b6f29518.234608",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "19dc6535.e7fc1b",
        "order": 12,
        "width": "6",
        "height": 1
    },
    {
        "id": "7d7753a1.b4c074",
        "type": "ui_group",
        "name": "ABC",
        "tab": "dc63712a.a007d",
        "order": 3,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "d12f49f7.adc66",
        "type": "serial-port",
        "name": "",
        "serialport": "/dev/ttyUSB0",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "23d9e16c.3ccade",
        "type": "serial-port",
        "serialport": "COM15",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "120d30137f1a4250",
        "type": "debug",
        "z": "aaab088f87709a09",
        "name": "Serial_out",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 340,
        "wires": []
    },
    {
        "id": "6fb3883a82a86fbe",
        "type": "debug",
        "z": "aaab088f87709a09",
        "name": "Serial_in",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 240,
        "y": 180,
        "wires": []
    },
    {
        "id": "662149f93c5e598e",
        "type": "inject",
        "z": "aaab088f87709a09",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "?",
        "payloadType": "str",
        "x": 90,
        "y": 140,
        "wires": [
            [
                "6fb3883a82a86fbe",
                "8086dea960d746d1"
            ]
        ]
    },
    {
        "id": "8086dea960d746d1",
        "type": "function",
        "z": "aaab088f87709a09",
        "name": "Add \\r",
        "func": "msg.payload = Buffer.from(msg.payload + \"\\r\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 140,
        "wires": [
            [
                "b52c3d59d962af47"
            ]
        ]
    },
    {
        "id": "42685681efb1a1c1",
        "type": "link in",
        "z": "aaab088f87709a09",
        "name": "Serial_input",
        "links": [
            "5d6e617c9d552fad",
            "1425028e86794f49",
            "202eb55e4b6ae049",
            "d04770cb7f0e0430",
            "fc09d30fe539a447",
            "6ad85cb64ea0f97c",
            "d7772a6210838994",
            "3d0c1c5256a20768",
            "b8136d0106f6f5c2",
            "b15a13cd952835bd",
            "1c3b7076d79abb5c",
            "494b6b021723bda2",
            "82fdf26f354a957f",
            "2409015f3628e730",
            "4986d6f603a7f288",
            "1ceff7d6100f241e",
            "08d461ae75fd0707",
            "9ad5c9d394153f6a",
            "5821369da12fb513",
            "16dff90bf9b6d7a3",
            "1cb0b16e6290b89b",
            "1757dc106dd1adc7",
            "7f861d492906aa01",
            "ccde10eb4f65aa3c",
            "529dba6e2ca301a0",
            "f85e83a204759dd4",
            "241cb05bf823a052",
            "bd8947ff7d3026d8",
            "9e56e5aeb6196579",
            "d23263521d57fb0f"
        ],
        "x": 115,
        "y": 180,
        "wires": [
            [
                "6fb3883a82a86fbe",
                "8086dea960d746d1",
                "cbd27c509f957182"
            ]
        ]
    },
    {
        "id": "a9097e5d588333e2",
        "type": "comment",
        "z": "aaab088f87709a09",
        "name": "Serial output logic",
        "info": "",
        "x": 130,
        "y": 100,
        "wires": []
    },
    {
        "id": "1a5e2e710407312b",
        "type": "comment",
        "z": "aaab088f87709a09",
        "name": "Serial input logic",
        "info": "",
        "x": 120,
        "y": 300,
        "wires": []
    },
    {
        "id": "6e3f5304006696dd",
        "type": "inject",
        "z": "aaab088f87709a09",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"timestamp\":0,\"number\":0,\"position\":{\"x\":0,\"y\":0,\"z\":0},\"values\":{\"a\":0,\"b\":0,\"c\":0,\"z\":0}}",
        "payloadType": "json",
        "x": 90,
        "y": 840,
        "wires": [
            [
                "772cb961aeb41b17",
                "20dd6f086a0dc3fa"
            ]
        ]
    },
    {
        "id": "772cb961aeb41b17",
        "type": "function",
        "z": "aaab088f87709a09",
        "name": "Set Sample",
        "func": "global.set('sample', msg.payload);\nreturn null;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "60642ed72b2255ce",
        "type": "comment",
        "z": "aaab088f87709a09",
        "name": "Initialize global Sample array",
        "info": "",
        "x": 160,
        "y": 800,
        "wires": []
    },
    {
        "id": "93829c296a75c63d",
        "type": "link out",
        "z": "aaab088f87709a09",
        "name": "Serial_out",
        "mode": "link",
        "links": [
            "011d43ad9284d363",
            "d46ef38577561a90"
        ],
        "x": 575,
        "y": 420,
        "wires": []
    },
    {
        "id": "cbd27c509f957182",
        "type": "switch",
        "z": "aaab088f87709a09",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "?",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ok",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Ok",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 230,
        "y": 220,
        "wires": [
            [
                "3b374a7ada94270d"
            ],
            [],
            []
        ]
    },
    {
        "id": "a82e2676ec58a191",
        "type": "ui_text_input",
        "z": "aaab088f87709a09",
        "name": "",
        "label": "Serial monitor",
        "tooltip": "",
        "group": "b6c12137.ce6d28",
        "order": 23,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 940,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "0a7bcc42c8f3c8c3",
        "type": "comment",
        "z": "aaab088f87709a09",
        "name": "Sensor output logic",
        "info": "",
        "x": 130,
        "y": 480,
        "wires": []
    },
    {
        "id": "363235871727ce79",
        "type": "link out",
        "z": "aaab088f87709a09",
        "name": "Sensors_out",
        "links": [
            "517f4d74d0402904",
            "d6d6e0fc.7f8898",
            "d46ef38577561a90"
        ],
        "x": 855,
        "y": 680,
        "wires": []
    },
    {
        "id": "225f687e03c1f731",
        "type": "debug",
        "z": "aaab088f87709a09",
        "name": "Sensors_out",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 330,
        "y": 520,
        "wires": []
    },
    {
        "id": "5bc49274f345d47c",
        "type": "trigger",
        "z": "aaab088f87709a09",
        "name": "Get GRBL status",
        "op1": "?",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-200",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 350,
        "y": 560,
        "wires": [
            [
                "8086dea960d746d1"
            ]
        ]
    },
    {
        "id": "8d50c3179280c1ca",
        "type": "ui_chart",
        "z": "aaab088f87709a09",
        "name": "",
        "group": "b6c12137.ce6d28",
        "order": 2,
        "width": "12",
        "height": "9",
        "label": "Sensor data",
        "chartType": "line",
        "legend": "true",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "320",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1150,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "e76973e9597d3faf",
        "type": "function",
        "z": "aaab088f87709a09",
        "name": "Sensor data graph",
        "func": "var msg1 = {};\nvar msg2 = {};\nvar msg3 = {};\nvar msg4 = {};\n\nmsg1.payload = msg.payload.a;\nmsg1.topic = \"Sensor A\";\n\nmsg2.payload = msg.payload.b;\nmsg2.topic = \"Sensor B\";\n\nmsg3.payload = msg.payload.c;\nmsg3.topic = \"Sensor C\";\n\nmsg4.payload = msg.payload.z;\nmsg4.topic = \"Sensor Z\";\n\nreturn [msg1, msg2, msg3, msg4];",
        "outputs": 4,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 600,
        "wires": [
            [
                "8d50c3179280c1ca",
                "6b73a1b2739a05b3"
            ],
            [
                "8d50c3179280c1ca"
            ],
            [
                "8d50c3179280c1ca"
            ],
            [
                "8d50c3179280c1ca"
            ]
        ]
    },
    {
        "id": "6b73a1b2739a05b3",
        "type": "debug",
        "z": "aaab088f87709a09",
        "name": "A",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 560,
        "wires": []
    },
    {
        "id": "69b88fcfb35ef6dc",
        "type": "switch",
        "z": "aaab088f87709a09",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "else"
            },
            {
                "t": "eq",
                "v": "ok",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Ok",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 610,
        "y": 380,
        "wires": [
            [
                "3b374a7ada94270d"
            ],
            [],
            []
        ]
    },
    {
        "id": "b68dc78cd442c679",
        "type": "function",
        "z": "aaab088f87709a09",
        "name": "Fake value data",
        "func": "var min = 0;\nvar max = 100;\n\nvar a = flow.get('aV') || 1;\nvar b = flow.get('bV') || 1;\nvar c = flow.get('cV') || 1;\nvar z = flow.get('zV') || 1;\n\na = a+randomIntFromInterval(min, max)-50;\nb = b+randomIntFromInterval(min, max)-50;\nc = c+randomIntFromInterval(min, max)-50;\nz = z+randomIntFromInterval(min+50, max*5)-300;\n\nif( a < 1){a=1}\nif( b < 1){b=1}\nif( c < 1){c=1}\nif( z < 200){z=200}\n\nif( a > 35000){a=35000}\nif( b > 35000){b=35000}\nif( c > 35000){c=35000}\nif( z > 35000){z=34800}\n\nflow.set('aV', a);\nflow.set('bV', b);\nflow.set('cV', c);\nflow.set('zV', z);\n\nfunction randomIntFromInterval(min, max) { // min and max included \n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nmsg = {\n    \"payload\": {\n        \"a\":a,\n        \"b\":b,\n        \"c\":c,\n        \"z\":z\n    }\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 680,
        "wires": [
            [
                "363235871727ce79",
                "e76973e9597d3faf"
            ]
        ]
    },
    {
        "id": "371f76a219668c41",
        "type": "inject",
        "z": "aaab088f87709a09",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 90,
        "y": 720,
        "wires": [
            [
                "18a33f926b7884be"
            ]
        ]
    },
    {
        "id": "18a33f926b7884be",
        "type": "trigger",
        "z": "aaab088f87709a09",
        "name": "",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-200",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 280,
        "y": 720,
        "wires": [
            [
                "6c207abe48cb10a8"
            ]
        ]
    },
    {
        "id": "1645977640511557",
        "type": "inject",
        "z": "aaab088f87709a09",
        "name": "Off",
        "props": [
            {
                "p": "reset",
                "v": "false",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 680,
        "wires": [
            [
                "18a33f926b7884be"
            ]
        ]
    },
    {
        "id": "8e9a404c52b24e4f",
        "type": "function",
        "z": "aaab088f87709a09",
        "name": "Fake position data",
        "func": "var min = 0;\nvar max = 10;\n\nvar maxX = 1140;\nvar maxY = 770;\nvar maxZ = 245;\n\nvar rig = global.get('rig') || null;\nif(rig != null){\n    maxX = rig.maxMovement.x;\n    maxY = rig.maxMovement.y;\n    maxZ = rig.maxMovement.z;\n}\n\nvar x = flow.get('xP') || 0;\nvar y = flow.get('yP') || 0;\nvar z = flow.get('zP') || 0;\n\nx = x+randomIntFromInterval(min, max)-5;\ny = y+randomIntFromInterval(min, max)-5;\nz = z+randomIntFromInterval(min, max)-5;\n\nif( x < 0){x=0}\nif( y < 0){y=0}\nif( z < -maxZ){z=-maxZ}\n\nif( x > maxX){x=maxX}\nif( y > maxY){y=maxY}\nif( z > 0){z=0}\n\nflow.set('xP', x);\nflow.set('yP', y);\nflow.set('zP', z);\n\nfunction randomIntFromInterval(min, max) { // min and max included \n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nmsg = {\n    \"payload\": {\n        \"WPos\": [x, y, z]\n    }\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 720,
        "wires": [
            [
                "ce52a6fbf1510423",
                "dc3dbddc35793fe8"
            ]
        ]
    },
    {
        "id": "fcc11762bf08d3d6",
        "type": "comment",
        "z": "aaab088f87709a09",
        "name": "Fake it",
        "info": "",
        "x": 90,
        "y": 640,
        "wires": []
    },
    {
        "id": "ce52a6fbf1510423",
        "type": "link out",
        "z": "aaab088f87709a09",
        "name": "Fake_pos_out",
        "links": [
            "cfed308f521558ed"
        ],
        "x": 855,
        "y": 720,
        "wires": []
    },
    {
        "id": "973ad079b5cc2e02",
        "type": "ui_dropdown",
        "z": "aaab088f87709a09",
        "name": "Select serial port",
        "label": "Serial port",
        "tooltip": "",
        "place": "Select option",
        "group": "b6c12137.ce6d28",
        "order": 30,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "/dev/ttyUSB0",
                "value": "/dev/ttyUSB0",
                "type": "str"
            },
            {
                "label": "/dev/tty.usbserial-AR0JZC14",
                "value": "/dev/tty.usbserial-AR0JZC14",
                "type": "str"
            },
            {
                "label": "COM15",
                "value": "COM15",
                "type": "str"
            },
            {
                "label": "Dummy",
                "value": "Dummy",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 310,
        "y": 40,
        "wires": [
            [
                "b1f5d8a4ca1aba43"
            ]
        ]
    },
    {
        "id": "b1f5d8a4ca1aba43",
        "type": "function",
        "z": "aaab088f87709a09",
        "name": "Set Global serial port",
        "func": "// Set global value for selected serial port\nvar serial = msg.payload;\n\nglobal.set('serial', serial);\n\nreturn null;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "b52c3d59d962af47",
        "type": "function",
        "z": "aaab088f87709a09",
        "name": "Port eval",
        "func": "//Quick port selector.\n//Uses hardcoded values due to not being able to \n//change port in Serial node during run-time.\n\nvar serial = global.get('serial') || \"/dev/ttyUSB0\";\n\nif(serial == \"/dev/ttyUSB0\"){\n    return [msg,[]];\n}\nelse if(serial == \"COM15\"){\n    return [[],msg];\n} else{\n    return null;\n}",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 140,
        "wires": [
            [
                "0b4a6b1addddb07e"
            ],
            [
                "fd80e4032a5eb12e"
            ]
        ]
    },
    {
        "id": "fc5eaddc6374f3c2",
        "type": "function",
        "z": "aaab088f87709a09",
        "name": "Port eval",
        "func": "//Quick port selector.\n//Uses hardcoded values due to not being able to \n//change port in Serial node during run-time.\n\nlet serial = global.get('serial') || \"/dev/ttyUSB0\";\n\nif(msg.port == serial){\n    return msg;\n} else{\n    return null;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 380,
        "wires": [
            [
                "120d30137f1a4250",
                "69b88fcfb35ef6dc",
                "93829c296a75c63d"
            ]
        ]
    },
    {
        "id": "78679220e62460f3",
        "type": "inject",
        "z": "aaab088f87709a09",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "/dev/ttyUSB0",
        "payloadType": "str",
        "x": 110,
        "y": 40,
        "wires": [
            [
                "973ad079b5cc2e02"
            ]
        ]
    },
    {
        "id": "6c207abe48cb10a8",
        "type": "function",
        "z": "aaab088f87709a09",
        "name": "Fake dummy data?",
        "func": "var serial = global.get('serial') || \"/dev/ttyUSB0\";\n\nif(serial == \"Dummy\"){\n    return msg;\n} else{\n    return null;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 720,
        "wires": [
            [
                "b68dc78cd442c679",
                "8e9a404c52b24e4f",
                "f83ebdeddd5b9908"
            ]
        ]
    },
    {
        "id": "20dd6f086a0dc3fa",
        "type": "function",
        "z": "aaab088f87709a09",
        "name": "Set rig",
        "func": "var rig = {\n    \"maxMovement\":{\n        \"x\":950,\n        \"y\":770,\n        \"z\":239\n    }\n}\n\nglobal.set('rig', rig);\nreturn null;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "f83ebdeddd5b9908",
        "type": "debug",
        "z": "aaab088f87709a09",
        "name": "Fake",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 760,
        "wires": []
    },
    {
        "id": "3b374a7ada94270d",
        "type": "function",
        "z": "aaab088f87709a09",
        "name": "Limit output",
        "func": "\n//return msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 380,
        "wires": [
            [
                "a82e2676ec58a191"
            ]
        ]
    },
    {
        "id": "9782e7a60372617d",
        "type": "link in",
        "z": "aaab088f87709a09",
        "name": "Direct_serial",
        "links": [
            "cddb760892aa481c",
            "1a456fd1713ab2d3",
            "3a4f7db2a7eb74aa",
            "07afb9c83662703a"
        ],
        "x": 325,
        "y": 100,
        "wires": [
            [
                "0b4a6b1addddb07e",
                "fd80e4032a5eb12e"
            ]
        ]
    },
    {
        "id": "26427aa20b8b84e5",
        "type": "serial in",
        "z": "aaab088f87709a09",
        "name": "Blackbox Controller",
        "serial": "d12f49f7.adc66",
        "x": 130,
        "y": 340,
        "wires": [
            [
                "fc5eaddc6374f3c2"
            ]
        ]
    },
    {
        "id": "5d36641164bdc02d",
        "type": "serial in",
        "z": "aaab088f87709a09",
        "name": "Blackbox Controller",
        "serial": "d12f49f7.adc66",
        "x": 130,
        "y": 400,
        "wires": [
            [
                "fc5eaddc6374f3c2"
            ]
        ]
    },
    {
        "id": "0b4a6b1addddb07e",
        "type": "serial out",
        "z": "aaab088f87709a09",
        "name": "Blackbox Controller",
        "serial": "d12f49f7.adc66",
        "x": 560,
        "y": 100,
        "wires": []
    },
    {
        "id": "fd80e4032a5eb12e",
        "type": "serial out",
        "z": "aaab088f87709a09",
        "name": "Blackbox Controller",
        "serial": "23d9e16c.3ccade",
        "x": 560,
        "y": 140,
        "wires": []
    },
    {
        "id": "844545c916098136",
        "type": "magnetic-sensors",
        "z": "aaab088f87709a09",
        "name": "",
        "x": 130,
        "y": 520,
        "wires": [
            [
                "e76973e9597d3faf",
                "5bc49274f345d47c",
                "225f687e03c1f731",
                "93829c296a75c63d",
                "dc3dbddc35793fe8"
            ]
        ]
    },
    {
        "id": "dc3dbddc35793fe8",
        "type": "function",
        "z": "aaab088f87709a09",
        "name": "Set Glob values",
        "func": "var sensors = {\n    \"a\":msg.payload.a,\n    \"b\":msg.payload.b,\n    \"c\":msg.payload.c,\n    \"z\":msg.payload.z\n}\n\nglobal.set('sensors', sensors);\nreturn null;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "3edf5d87d1bd1e77",
        "type": "inject",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "525",
        "payloadType": "num",
        "x": 90,
        "y": 80,
        "wires": [
            [
                "8e666ef1e2d19d18",
                "f38bb4ae4545305d"
            ]
        ]
    },
    {
        "id": "f38bb4ae4545305d",
        "type": "function",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('origoX', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "3dd072ac78414a31",
        "type": "inject",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "315",
        "payloadType": "num",
        "x": 90,
        "y": 140,
        "wires": [
            [
                "fb244539fdcdb5fe",
                "65e74becf6cc553c"
            ]
        ]
    },
    {
        "id": "65e74becf6cc553c",
        "type": "function",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('origoY', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "494b7ca3bf6acab9",
        "type": "inject",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "172",
        "payloadType": "num",
        "x": 90,
        "y": 200,
        "wires": [
            [
                "f19c7d2d3b6e9d36",
                "86f9840fd7a4ff05"
            ]
        ],
        "info": "244 is max before physically crashing"
    },
    {
        "id": "86f9840fd7a4ff05",
        "type": "function",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('origoZ', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "516068c15526119c",
        "type": "function",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "func": "var origoX = global.get('origoX');\nvar origoY = global.get('origoY');\n// Add 8mm extra y travel due to secondary dipping down at an angle\nvar y = origoY + 0;\nvar origoZ = global.get('origoZ');\nvar feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar gcode=\"$J=G90G21X\"+ origoX + \"Y\" + y + \"Z-\" + origoZ + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 260,
        "wires": [
            [
                "1425028e86794f49"
            ]
        ]
    },
    {
        "id": "1425028e86794f49",
        "type": "link out",
        "z": "62fd21a7ba3f28b8",
        "name": "Serial_in",
        "links": [
            "42685681efb1a1c1"
        ],
        "x": 495,
        "y": 260,
        "wires": []
    },
    {
        "id": "ab626d8deda66623",
        "type": "function",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "func": "var feed = 100;\nvar jogIncrement = 45;\nvar yDipComp = 0;\nvar gcode=\"$J=G91G21y\" + yDipComp + \"Z-\"+ jogIncrement + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 300,
        "wires": [
            [
                "9ad5c9d394153f6a"
            ]
        ]
    },
    {
        "id": "9ad5c9d394153f6a",
        "type": "link out",
        "z": "62fd21a7ba3f28b8",
        "name": "Serial_in",
        "links": [
            "42685681efb1a1c1"
        ],
        "x": 495,
        "y": 300,
        "wires": []
    },
    {
        "id": "9c457f73771d3868",
        "type": "inject",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 90,
        "y": 360,
        "wires": [
            [
                "5efa68293aa8bdeb"
            ]
        ]
    },
    {
        "id": "ba723c7090254cc5",
        "type": "function",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('homingProfile', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "568bf5f3cee7315e",
        "type": "inject",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 90,
        "y": 420,
        "wires": [
            [
                "0dea972c82a6c58d"
            ]
        ]
    },
    {
        "id": "14b2ca0c6a6e1039",
        "type": "function",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('homingMode', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "a70d75683e0b6975",
        "type": "inject",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "100",
        "payloadType": "num",
        "x": 90,
        "y": 580,
        "wires": [
            [
                "e36b901a415742c1"
            ]
        ]
    },
    {
        "id": "0f97b2836cc8ee86",
        "type": "function",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('repeats', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 480,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "8bef264d4599d488",
        "type": "inject",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 90,
        "y": 680,
        "wires": [
            [
                "91a5484d4976352d"
            ]
        ]
    },
    {
        "id": "91a5484d4976352d",
        "type": "function",
        "z": "62fd21a7ba3f28b8",
        "name": "Generate gcode",
        "func": "var width=global.get('width') || 1;\nvar depth=global.get('depth') || 1;\nvar height=global.get('height') || 1;\nvar sampleNumber=global.get('sampleNumber') || 0;\nvar feed=global.get('feed') || 100;\nvar spacing=global.get('spacing') || 1;\nvar origoX=global.get('origoX') || 600;\nvar origoY=global.get('origoY') || 300;\nvar origoZ=global.get('origoZ') || 225;\nvar xStartPos=origoX - (width*spacing*10)/2;\nvar yStartPos=origoY - (depth*spacing*10)/2;\nvar zStartPos=origoZ - (height*spacing*10) + 10;\nvar xPos=0;\nvar yPos=0;\nvar zPos=0;\nvar sample = global.get('sample');\nvar timestamp = global.get('timestamp') || 0;\nvar gcode=\"\";\nvar msg1 = {};\nvar msg2 = {};\nvar msg3 = {};\n\n//\n// Move rig to starting position and wait\n//\n\nxPos=xStartPos;\nyPos=yStartPos;\nzPos=zStartPos;\n\nfor (var z=0; z<height; z++) {\n    for (var y=0; y<depth; y++) {\n        for (var x=0; x<width; x++) {\n            ++sampleNumber;\n            global.set('sampleNumber', sampleNumber);\n            xPos = xStartPos + (x*spacing*10);\n            gcode=\"$J=G90G21X\"+ xPos + \"Y\"+ yPos + \"Z-\"+ zPos + \"F\"+feed;\n            msg1.payload = gcode;\n            msg2.timestamp = global.get('timestamp');\n            msg2.payload = [global.get('sampleNumber'), xPos];\n// Beware: mismatch between expected and actual sent timestamp and sampleNumber \n// Due to the different way Javascript/Node-Red behaves vs c++... Bugger...\n            node.send([msg1,msg2,[]]);\n//\n// Wait for sample aquisition\n//\n\n//            setTimeout(function(){\n//                \n//                msg2.payload = 'ping';\n//                node.send([[],msg2]);\n//            }, 3000);\n\n// Add sample data to global Samples array\n\n        }\n        yPos = yStartPos + 10 + (y*spacing*10);\n//        gcode=\"$J=G90G21X\"+ xPos + \"Y\"+ yPos + \"Z-\"+ zPos + \"F\"+feed;\n//        msg1.payload = gcode;\n//        node.send([msg1,[],[]]);\n    }\n    zPos = zStartPos + 10 + (z*spacing*10);\n//    gcode=\"$J=G90G21X\"+ xPos + \"Y\"+ yPos + \"Z-\"+ zPos + \"F\"+feed;\n//    msg1.payload = gcode;\n//    node.send([msg1,[],[]]);\n    \n// Append current layer saved in the global Samples array to a CSV file\n    msg3.payload = true;\n    node.send([[],[],msg3]);\n    \n}\nglobal.set('sampleNumber', 0);\nglobal.set('noOfSamples', width*depth*height);\n\nreturn null;",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 660,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "2a82f229c7d206e5",
        "type": "inject",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Reset",
        "payloadType": "str",
        "x": 90,
        "y": 720,
        "wires": [
            [
                "0f965507f4168e14"
            ]
        ]
    },
    {
        "id": "ba5aeea18facecbe",
        "type": "function",
        "z": "62fd21a7ba3f28b8",
        "name": "Reset SampleNumber and GUI",
        "func": "global.set('sampleNumber', 0);\nmsg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 720,
        "wires": [
            [
                "8e2eb923f93611c3"
            ]
        ]
    },
    {
        "id": "8e2eb923f93611c3",
        "type": "link out",
        "z": "62fd21a7ba3f28b8",
        "name": "GUI",
        "links": [
            "49b17742.94cf1",
            "518385b2.08b734",
            "faca8e54.fea95",
            "7d29b514.480c3c"
        ],
        "x": 495,
        "y": 720,
        "wires": []
    },
    {
        "id": "bb6c7c30305cd64a",
        "type": "inject",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 90,
        "y": 480,
        "wires": [
            [
                "f3f929b94656b175"
            ]
        ]
    },
    {
        "id": "491a1b92ba2bba91",
        "type": "function",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('homingMode', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "4f2256ee8759013b",
        "type": "ui_button",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "group": "428976bf.20c0c",
        "order": 22,
        "width": "4",
        "height": 1,
        "passthru": false,
        "label": "Position above origo",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "topicType": "str",
        "x": 140,
        "y": 260,
        "wires": [
            [
                "516068c15526119c"
            ]
        ]
    },
    {
        "id": "d75d405febf5f048",
        "type": "ui_button",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "group": "428976bf.20c0c",
        "order": 23,
        "width": "2",
        "height": 1,
        "passthru": false,
        "label": "Dock",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "topicType": "str",
        "x": 90,
        "y": 300,
        "wires": [
            [
                "ab626d8deda66623"
            ]
        ]
    },
    {
        "id": "cc4e2838e68d0673",
        "type": "ui_button",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "group": "428976bf.20c0c",
        "order": 29,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Start homing",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 90,
        "y": 640,
        "wires": [
            [
                "91a5484d4976352d"
            ]
        ]
    },
    {
        "id": "0f965507f4168e14",
        "type": "ui_button",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "group": "428976bf.20c0c",
        "order": 30,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Cancel job",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "icon": "warning",
        "payload": "Reset",
        "payloadType": "str",
        "topic": "",
        "x": 90,
        "y": 760,
        "wires": [
            [
                "ba5aeea18facecbe",
                "b78b098826fb5a48"
            ]
        ]
    },
    {
        "id": "5efa68293aa8bdeb",
        "type": "ui_dropdown",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "label": "Profile",
        "tooltip": "",
        "place": "Select option",
        "group": "428976bf.20c0c",
        "order": 24,
        "width": "0",
        "height": "0",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Helicopter",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Plane",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Draining",
                "value": 3,
                "type": "num"
            },
            {
                "label": "At an angle",
                "value": "4",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 210,
        "y": 360,
        "wires": [
            [
                "ba723c7090254cc5"
            ]
        ]
    },
    {
        "id": "0dea972c82a6c58d",
        "type": "ui_dropdown",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "label": "Mode",
        "tooltip": "",
        "place": "Select option",
        "group": "428976bf.20c0c",
        "order": 25,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "From current position",
                "value": 1,
                "type": "num"
            },
            {
                "label": "From random position",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Circle",
                "value": 3,
                "type": "num"
            },
            {
                "label": "Grid",
                "value": 4,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 210,
        "y": 420,
        "wires": [
            [
                "14b2ca0c6a6e1039"
            ]
        ]
    },
    {
        "id": "f3f929b94656b175",
        "type": "ui_dropdown",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "label": "Current",
        "tooltip": "",
        "place": "Select option",
        "group": "428976bf.20c0c",
        "order": 25,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "None",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Sideways",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Countercurrent",
                "value": 3,
                "type": "num"
            },
            {
                "label": "Co-current",
                "value": 4,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 220,
        "y": 480,
        "wires": [
            [
                "491a1b92ba2bba91"
            ]
        ]
    },
    {
        "id": "8e666ef1e2d19d18",
        "type": "ui_slider",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "label": "Origo X (mm)",
        "tooltip": "",
        "group": "428976bf.20c0c",
        "order": 16,
        "width": 5,
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "",
        "min": "0",
        "max": "1190",
        "step": 1,
        "x": 230,
        "y": 80,
        "wires": [
            [
                "f38bb4ae4545305d",
                "2bc59952ef6baa83"
            ]
        ]
    },
    {
        "id": "fb244539fdcdb5fe",
        "type": "ui_slider",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "label": "Origo Y (mm)",
        "tooltip": "",
        "group": "428976bf.20c0c",
        "order": 18,
        "width": 5,
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "",
        "min": "0",
        "max": "770",
        "step": 1,
        "x": 230,
        "y": 140,
        "wires": [
            [
                "65e74becf6cc553c",
                "fa46daa1e7b5846b"
            ]
        ]
    },
    {
        "id": "f19c7d2d3b6e9d36",
        "type": "ui_slider",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "label": "Origo Z (mm)",
        "tooltip": "",
        "group": "428976bf.20c0c",
        "order": 20,
        "width": 5,
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "",
        "min": "0",
        "max": "225",
        "step": 1,
        "x": 230,
        "y": 200,
        "wires": [
            [
                "86f9840fd7a4ff05",
                "db4e375fd0334876"
            ]
        ]
    },
    {
        "id": "e36b901a415742c1",
        "type": "ui_slider",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "label": "Repeats",
        "tooltip": "",
        "group": "428976bf.20c0c",
        "order": 26,
        "width": "4",
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "",
        "min": "10",
        "max": "1000",
        "step": "10",
        "x": 220,
        "y": 580,
        "wires": [
            [
                "0f97b2836cc8ee86",
                "ebd85d55ddc12da8"
            ]
        ]
    },
    {
        "id": "2bc59952ef6baa83",
        "type": "ui_text",
        "z": "62fd21a7ba3f28b8",
        "group": "428976bf.20c0c",
        "order": 17,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 370,
        "y": 80,
        "wires": []
    },
    {
        "id": "fa46daa1e7b5846b",
        "type": "ui_text",
        "z": "62fd21a7ba3f28b8",
        "group": "428976bf.20c0c",
        "order": 19,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 370,
        "y": 140,
        "wires": []
    },
    {
        "id": "db4e375fd0334876",
        "type": "ui_text",
        "z": "62fd21a7ba3f28b8",
        "group": "428976bf.20c0c",
        "order": 21,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 370,
        "y": 200,
        "wires": []
    },
    {
        "id": "ebd85d55ddc12da8",
        "type": "ui_text",
        "z": "62fd21a7ba3f28b8",
        "group": "428976bf.20c0c",
        "order": 27,
        "width": "2",
        "height": 1,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 350,
        "y": 580,
        "wires": []
    },
    {
        "id": "08d461ae75fd0707",
        "type": "link out",
        "z": "62fd21a7ba3f28b8",
        "name": "Serial_in",
        "links": [
            "42685681efb1a1c1"
        ],
        "x": 935,
        "y": 80,
        "wires": []
    },
    {
        "id": "9a35d1ee193b9cf0",
        "type": "function",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('jogIncrement', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "aca7cc77dd85f8aa",
        "type": "function",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('jogIncrement', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "c1c29ab4933cf91b",
        "type": "function",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('jogIncrement', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "46ab134640f11976",
        "type": "function",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('jogIncrement', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "76b0b602a6c2bc25",
        "type": "function",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar gcode=\"$J=G91G21X-\"+ jogIncrement + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 360,
        "wires": [
            [
                "241cb05bf823a052"
            ]
        ]
    },
    {
        "id": "241cb05bf823a052",
        "type": "link out",
        "z": "62fd21a7ba3f28b8",
        "name": "Serial_in",
        "links": [
            "42685681efb1a1c1"
        ],
        "x": 1075,
        "y": 360,
        "wires": []
    },
    {
        "id": "c3fca555c0aa53de",
        "type": "inject",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 690,
        "y": 240,
        "wires": [
            [
                "52cbe0d366f53397"
            ]
        ]
    },
    {
        "id": "ea4d1d51e12992b8",
        "type": "function",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar gcode=\"$J=G91G21X\"+ jogIncrement + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 400,
        "wires": [
            [
                "2409015f3628e730"
            ]
        ]
    },
    {
        "id": "2409015f3628e730",
        "type": "link out",
        "z": "62fd21a7ba3f28b8",
        "name": "Serial_in",
        "links": [
            "42685681efb1a1c1"
        ],
        "x": 1075,
        "y": 400,
        "wires": []
    },
    {
        "id": "39f3d7e1d4637501",
        "type": "function",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar gcode=\"$J=G91G21Y-\"+ jogIncrement + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 440,
        "wires": [
            [
                "202eb55e4b6ae049"
            ]
        ]
    },
    {
        "id": "202eb55e4b6ae049",
        "type": "link out",
        "z": "62fd21a7ba3f28b8",
        "name": "Serial_in",
        "links": [
            "42685681efb1a1c1"
        ],
        "x": 1075,
        "y": 440,
        "wires": []
    },
    {
        "id": "91c754ac1b5a8d4c",
        "type": "function",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar gcode=\"$J=G91G21Y\"+ jogIncrement + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 480,
        "wires": [
            [
                "4986d6f603a7f288"
            ]
        ]
    },
    {
        "id": "4986d6f603a7f288",
        "type": "link out",
        "z": "62fd21a7ba3f28b8",
        "name": "Serial_in",
        "links": [
            "42685681efb1a1c1"
        ],
        "x": 1075,
        "y": 480,
        "wires": []
    },
    {
        "id": "6b5dbe1d9e60f3c9",
        "type": "function",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar gcode=\"$J=G91G21Z-\"+ jogIncrement + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 520,
        "wires": [
            [
                "1c3b7076d79abb5c"
            ]
        ]
    },
    {
        "id": "1c3b7076d79abb5c",
        "type": "link out",
        "z": "62fd21a7ba3f28b8",
        "name": "Serial_in",
        "links": [
            "42685681efb1a1c1"
        ],
        "x": 1075,
        "y": 520,
        "wires": []
    },
    {
        "id": "60f223d843177d1d",
        "type": "function",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar gcode=\"$J=G91G21Z\"+ jogIncrement + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 560,
        "wires": [
            [
                "fc09d30fe539a447"
            ]
        ]
    },
    {
        "id": "fc09d30fe539a447",
        "type": "link out",
        "z": "62fd21a7ba3f28b8",
        "name": "Serial_in",
        "links": [
            "42685681efb1a1c1"
        ],
        "x": 1075,
        "y": 560,
        "wires": []
    },
    {
        "id": "545d17998008e5fa",
        "type": "comment",
        "z": "62fd21a7ba3f28b8",
        "name": "Jog control",
        "info": "",
        "x": 710,
        "y": 40,
        "wires": []
    },
    {
        "id": "b22bd120d3e93268",
        "type": "function",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('gcode', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "342669dee8b5bf80",
        "type": "function",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "func": "var gcode=global.get('gcode') || \"?\";\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 640,
        "wires": [
            [
                "494b6b021723bda2"
            ]
        ]
    },
    {
        "id": "494b6b021723bda2",
        "type": "link out",
        "z": "62fd21a7ba3f28b8",
        "name": "Serial_in",
        "links": [
            "42685681efb1a1c1"
        ],
        "x": 1075,
        "y": 640,
        "wires": []
    },
    {
        "id": "f493e22e1926b044",
        "type": "inject",
        "z": "62fd21a7ba3f28b8",
        "name": "empty",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 690,
        "y": 600,
        "wires": [
            [
                "e84953a52322e555"
            ]
        ]
    },
    {
        "id": "a60933fe82b3ec97",
        "type": "inject",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 700,
        "y": 80,
        "wires": [
            [
                "27c869cc5daca7a9"
            ]
        ]
    },
    {
        "id": "d04770cb7f0e0430",
        "type": "link out",
        "z": "62fd21a7ba3f28b8",
        "name": "Serial_in",
        "links": [
            "42685681efb1a1c1"
        ],
        "x": 935,
        "y": 120,
        "wires": []
    },
    {
        "id": "27c869cc5daca7a9",
        "type": "ui_button",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "group": "428976bf.20c0c",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Home",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "home",
        "payload": "$H",
        "payloadType": "str",
        "topic": "",
        "x": 830,
        "y": 80,
        "wires": [
            [
                "08d461ae75fd0707"
            ]
        ]
    },
    {
        "id": "67e0503fc40d037a",
        "type": "ui_button",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "group": "428976bf.20c0c",
        "order": 3,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "0.1mm",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "0.1",
        "payloadType": "num",
        "topic": "",
        "x": 830,
        "y": 200,
        "wires": [
            [
                "9a35d1ee193b9cf0"
            ]
        ]
    },
    {
        "id": "52cbe0d366f53397",
        "type": "ui_button",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "group": "428976bf.20c0c",
        "order": 4,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "1mm",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "",
        "x": 830,
        "y": 240,
        "wires": [
            [
                "aca7cc77dd85f8aa"
            ]
        ]
    },
    {
        "id": "46c41fcbb7b0e223",
        "type": "ui_button",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "group": "428976bf.20c0c",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "10mm",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "10",
        "payloadType": "num",
        "topic": "",
        "x": 830,
        "y": 280,
        "wires": [
            [
                "c1c29ab4933cf91b"
            ]
        ]
    },
    {
        "id": "95ca104a89227a48",
        "type": "ui_button",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "group": "428976bf.20c0c",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "100mm",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "100",
        "payloadType": "num",
        "topic": "",
        "x": 840,
        "y": 320,
        "wires": [
            [
                "46ab134640f11976"
            ]
        ]
    },
    {
        "id": "c6a9ab7e8317ed9f",
        "type": "ui_button",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "group": "428976bf.20c0c",
        "order": 7,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "-X",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 830,
        "y": 360,
        "wires": [
            [
                "76b0b602a6c2bc25"
            ]
        ]
    },
    {
        "id": "d99b2e41ef1068b4",
        "type": "ui_button",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "group": "428976bf.20c0c",
        "order": 8,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "+X",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 830,
        "y": 400,
        "wires": [
            [
                "ea4d1d51e12992b8"
            ]
        ]
    },
    {
        "id": "0e5c6142fd7fad47",
        "type": "ui_button",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "group": "428976bf.20c0c",
        "order": 9,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "-Y",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 830,
        "y": 440,
        "wires": [
            [
                "39f3d7e1d4637501"
            ]
        ]
    },
    {
        "id": "4037e2c365092f28",
        "type": "ui_button",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "group": "428976bf.20c0c",
        "order": 10,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "+Y",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 830,
        "y": 480,
        "wires": [
            [
                "91c754ac1b5a8d4c"
            ]
        ]
    },
    {
        "id": "2b6db1877f0e5dba",
        "type": "ui_button",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "group": "428976bf.20c0c",
        "order": 11,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "-Z",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 830,
        "y": 520,
        "wires": [
            [
                "6b5dbe1d9e60f3c9"
            ]
        ]
    },
    {
        "id": "6b75538ade9d51ce",
        "type": "ui_button",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "group": "428976bf.20c0c",
        "order": 12,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "+Z",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 830,
        "y": 560,
        "wires": [
            [
                "60f223d843177d1d"
            ]
        ]
    },
    {
        "id": "c5d0eb07c1e08cca",
        "type": "ui_button",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "group": "428976bf.20c0c",
        "order": 14,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": ">",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 830,
        "y": 640,
        "wires": [
            [
                "342669dee8b5bf80"
            ]
        ]
    },
    {
        "id": "a2c5d255624b30da",
        "type": "ui_button",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "group": "428976bf.20c0c",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Zero XYZ",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "icon": "warning",
        "payload": "$G10 P1 L20 X0 Y0 Z0",
        "payloadType": "str",
        "topic": "",
        "x": 840,
        "y": 120,
        "wires": [
            [
                "d04770cb7f0e0430"
            ]
        ]
    },
    {
        "id": "e84953a52322e555",
        "type": "ui_text_input",
        "z": "62fd21a7ba3f28b8",
        "name": "",
        "label": "Gcode",
        "tooltip": "",
        "group": "428976bf.20c0c",
        "order": 13,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 830,
        "y": 600,
        "wires": [
            [
                "b22bd120d3e93268"
            ]
        ]
    },
    {
        "id": "92bbfa1b89e89a03",
        "type": "comment",
        "z": "62fd21a7ba3f28b8",
        "name": "Homing config",
        "info": "",
        "x": 120,
        "y": 40,
        "wires": []
    },
    {
        "id": "cddb760892aa481c",
        "type": "link out",
        "z": "62fd21a7ba3f28b8",
        "name": "Serial_in",
        "links": [
            "9782e7a60372617d"
        ],
        "x": 495,
        "y": 760,
        "wires": []
    },
    {
        "id": "b78b098826fb5a48",
        "type": "change",
        "z": "62fd21a7ba3f28b8",
        "name": "Cancel jog",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[133]",
                "tot": "bin"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 760,
        "wires": [
            [
                "cddb760892aa481c"
            ]
        ]
    },
    {
        "id": "ce8485fd916a9db6",
        "type": "function",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('jogIncrement', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "2025c7db6ea350b6",
        "type": "function",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('jogIncrement', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "87fae37f8c557d7d",
        "type": "function",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('jogIncrement', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "21b66dcfe4e879b2",
        "type": "function",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar gcode=\"$J=G91G21X\"+ jogIncrement + \"Y-\"+ jogIncrement + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 320,
        "wires": [
            [
                "5821369da12fb513"
            ]
        ]
    },
    {
        "id": "5821369da12fb513",
        "type": "link out",
        "z": "90cdd7aec5fd0b38",
        "name": "Serial_in",
        "links": [
            "42685681efb1a1c1"
        ],
        "x": 455,
        "y": 320,
        "wires": []
    },
    {
        "id": "e6cab7be09ad2c0f",
        "type": "inject",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "25",
        "payloadType": "num",
        "x": 70,
        "y": 280,
        "wires": [
            [
                "b215161a18d93192"
            ]
        ]
    },
    {
        "id": "e0f5e87160e87163",
        "type": "function",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar gcode=\"$J=G91G21X\" + jogIncrement + \"Y\"+ jogIncrement + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 400,
        "wires": [
            [
                "f85e83a204759dd4"
            ]
        ]
    },
    {
        "id": "f85e83a204759dd4",
        "type": "link out",
        "z": "90cdd7aec5fd0b38",
        "name": "Serial_in",
        "links": [
            "42685681efb1a1c1"
        ],
        "x": 455,
        "y": 400,
        "wires": []
    },
    {
        "id": "f35b5de1bf67a872",
        "type": "function",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar gcode=\"$J=G91G21X-\"+ jogIncrement + \"Y\"+ jogIncrement + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 640,
        "wires": [
            [
                "bd8947ff7d3026d8"
            ]
        ]
    },
    {
        "id": "bd8947ff7d3026d8",
        "type": "link out",
        "z": "90cdd7aec5fd0b38",
        "name": "Serial_in",
        "links": [
            "42685681efb1a1c1"
        ],
        "x": 455,
        "y": 640,
        "wires": []
    },
    {
        "id": "d4af9d13d738728f",
        "type": "function",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar gcode=\"$J=G91G21X-\"+ jogIncrement + \"Y-\"+ jogIncrement + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 560,
        "wires": [
            [
                "16dff90bf9b6d7a3"
            ]
        ]
    },
    {
        "id": "16dff90bf9b6d7a3",
        "type": "link out",
        "z": "90cdd7aec5fd0b38",
        "name": "Serial_in",
        "links": [
            "42685681efb1a1c1"
        ],
        "x": 455,
        "y": 560,
        "wires": []
    },
    {
        "id": "0ef5dd7e3c20a6c0",
        "type": "function",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar gcode=\"$J=G91G21Z-\"+ jogIncrement + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 680,
        "wires": [
            [
                "1cb0b16e6290b89b"
            ]
        ]
    },
    {
        "id": "1cb0b16e6290b89b",
        "type": "link out",
        "z": "90cdd7aec5fd0b38",
        "name": "Serial_in",
        "links": [
            "42685681efb1a1c1"
        ],
        "x": 455,
        "y": 680,
        "wires": []
    },
    {
        "id": "38bdd1be044fb68b",
        "type": "function",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar gcode=\"$J=G91G21Z\"+ jogIncrement + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 720,
        "wires": [
            [
                "3d0c1c5256a20768"
            ]
        ]
    },
    {
        "id": "3d0c1c5256a20768",
        "type": "link out",
        "z": "90cdd7aec5fd0b38",
        "name": "Serial_in",
        "links": [
            "42685681efb1a1c1"
        ],
        "x": 455,
        "y": 720,
        "wires": []
    },
    {
        "id": "52b5767092eeb0a0",
        "type": "ui_button",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 3,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "0.1mm",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "0.1",
        "payloadType": "num",
        "topic": "",
        "x": 210,
        "y": 120,
        "wires": [
            [
                "ce8485fd916a9db6"
            ]
        ]
    },
    {
        "id": "598d0bf313fe139d",
        "type": "ui_button",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 5,
        "width": "1",
        "height": 1,
        "passthru": false,
        "label": "1mm",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "",
        "x": 210,
        "y": 160,
        "wires": [
            [
                "2025c7db6ea350b6"
            ]
        ]
    },
    {
        "id": "1e71a1e2683d74c1",
        "type": "ui_button",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "5mm",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "5",
        "payloadType": "num",
        "topic": "",
        "x": 210,
        "y": 200,
        "wires": [
            [
                "87fae37f8c557d7d"
            ]
        ]
    },
    {
        "id": "9378f7d064ee332f",
        "type": "ui_button",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 7,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "↖",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 210,
        "y": 320,
        "wires": [
            [
                "21b66dcfe4e879b2"
            ]
        ]
    },
    {
        "id": "d972e66a95b34997",
        "type": "ui_button",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 9,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "↗",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 210,
        "y": 400,
        "wires": [
            [
                "e0f5e87160e87163"
            ]
        ]
    },
    {
        "id": "d43e4e2674aec461",
        "type": "ui_button",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 15,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "↘",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 210,
        "y": 640,
        "wires": [
            [
                "f35b5de1bf67a872"
            ]
        ]
    },
    {
        "id": "c83857ef37f2224f",
        "type": "ui_button",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 13,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "↙",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 210,
        "y": 560,
        "wires": [
            [
                "d4af9d13d738728f"
            ]
        ]
    },
    {
        "id": "357c9fe23cc38ff9",
        "type": "ui_button",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 16,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "⇓",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 210,
        "y": 680,
        "wires": [
            [
                "0ef5dd7e3c20a6c0"
            ]
        ]
    },
    {
        "id": "540931be220ba07b",
        "type": "ui_button",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 17,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "⇑",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 210,
        "y": 720,
        "wires": [
            [
                "38bdd1be044fb68b"
            ]
        ]
    },
    {
        "id": "a2db53cdc2f604c0",
        "type": "function",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('jogIncrement', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "b215161a18d93192",
        "type": "ui_button",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "25mm",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "25",
        "payloadType": "num",
        "topic": "",
        "x": 210,
        "y": 280,
        "wires": [
            [
                "a2db53cdc2f604c0"
            ]
        ]
    },
    {
        "id": "a7b4883d881e129a",
        "type": "function",
        "z": "90cdd7aec5fd0b38",
        "name": "Sensor data graph",
        "func": "var msg1 = {};\nvar msg2 = {};\nvar msg3 = {};\nvar msg4 = {};\nvar msg5 = {};\nvar msg6 = {};\n\nmsg1.payload = msg.payload.a;\nmsg1.topic = \"Sensor A\";\n\nmsg2.payload = msg.payload.c;\nmsg2.topic = \"Sensor C\";\n\nmsg3.payload = msg.payload.b;\nmsg3.topic = \"Sensor B\";\n\nmsg4.payload = 30000;\nmsg4.topic = \"Docked\";\n\nmsg6.payload = 35000;\nmsg6.topic = \"Overshot\";\n\nmsg5.payload = msg.payload.z;\nmsg5.topic = \"Z\";\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6];",
        "outputs": 6,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 580,
        "wires": [
            [
                "828f057030c93555"
            ],
            [
                "828f057030c93555"
            ],
            [
                "828f057030c93555"
            ],
            [
                "8cb8b62428c68023"
            ],
            [
                "8cb8b62428c68023"
            ],
            [
                "c6765a86f312c485",
                "8cb8b62428c68023"
            ]
        ]
    },
    {
        "id": "c6765a86f312c485",
        "type": "debug",
        "z": "90cdd7aec5fd0b38",
        "name": "z",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 600,
        "wires": []
    },
    {
        "id": "8cb8b62428c68023",
        "type": "ui_chart",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "group": "f9aacf92.64234",
        "order": 1,
        "width": "12",
        "height": "14",
        "label": "Z sensor",
        "chartType": "polar-area",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2ca02c",
            "#1f77b4",
            "#ff9300",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": true,
        "className": "",
        "x": 900,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "1359ed1688686945",
        "type": "function",
        "z": "90cdd7aec5fd0b38",
        "name": "Generate gcode",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar origoX=global.get('origoX') || 535;\nvar origoY=global.get('origoY') || 320;\nvar origoZ=global.get('origoZ') || 230;\nvar position = global.get(\"rig.position\") || null;\nvar values = global.get(\"sensors\") || null;\n\nvar aVal = values.a;\nvar bVal = values.b;\nvar cVal = values.c;\nvar zVal = values.z;\n\nvar abVal = (aVal+bVal)/2;\nvar acVal = (aVal+cVal)/2;\nvar bcVal = (bVal+cVal)/2;\nvar abcVal = (aVal+bVal+zVal)/3;\n\nvar xPosChange = 0;\nvar yPosChange = 0;\nvar zPosChange = 0;\n\nvar ji = jogIncrement;\nvar mode;\nvar oldMode = flow.get(\"mode\");\n\n    mode=\"-\";\n\nif(zVal < 500 && (((aVal > 1500) && (bcVal > 1500)) || ((bVal > 1500) && (acVal > 1500)) || ((cVal > 1500) && (abVal > 1500)))){\n    jogIncrement = 5;\n    ji=5;\n}\nif(zVal < 500 && (((aVal > 3000) && (bcVal > 3000)) || ((bVal > 3000) && (acVal > 3000)) || ((cVal > 3000) && (abVal > 3000)))){\n    jogIncrement = 5;\n    ji=5;\n}\n\nelse if((zVal > 500 && zVal < 7500) && (((aVal > 2500) && (bcVal > 2500)) || ((bVal > 2500) && (acVal > 2500)) || ((cVal > 2500) && (abVal > 2500)))){\n    jogIncrement = 1.5;\n    ji=1.5;\n}\nif(zVal > 7500){\n    jogIncrement = 1;\n    ji=1.5;\n    feed = 3000;\n}\n\nif(zVal > 30000){\n    jogIncrement = 0.5;\n    ji=0.5;\n    feed = 2000;\n}\n\nif(aVal > bcVal+200){ //NE\n    xPosChange = jogIncrement;\n    yPosChange = jogIncrement;\n    mode=\"NW\";\n}\nelse if(bVal > acVal+200){ //NW\n    xPosChange = jogIncrement;\n    yPosChange = -jogIncrement;\n    mode=\"NE\";\n}\nelse if(cVal > abVal+200){ //S\n    xPosChange = -jogIncrement;\n    mode=\"S\";\n}\nelse if(bcVal > aVal+200){ //SW\n    xPosChange = -jogIncrement;\n    yPosChange = -jogIncrement;\n    mode=\"SW\";\n}\nelse if(acVal > bVal+200){ //SE\n    xPosChange = -jogIncrement;\n    yPosChange = jogIncrement;\n    mode=\"SE\";\n}\nelse if(abVal > cVal+200){ //N\n    xPosChange = jogIncrement;\n    mode=\"N\";\n}\nelse {\n    if(zVal < 34000){\n        zPosChange = -15;\n        mode=\"D15\";\n    }\n    else if(zVal > 34000){\n        zPosChange = -5;\n        mode=\"D5\";\n    }\n}\n\nif(zVal > 35500){\n    xPosChange = 0;\n    yPosChange = 0;\n    zPosChange = 0;\n    mode=\"H\"\n}\n\nflow.set(\"mode\", mode);\n\nvar gcode=\"$J=G91G21X\"+ xPosChange + \"Y\"+ yPosChange + \"Z\"+ zPosChange + \"F\"+feed;\n\nvar newPosition = {\n    \"x\": xPosChange,\n    \"y\": yPosChange,\n    \"z\": zPosChange\n}\n\nmsg = {};\nvar msg1 = {};\nvar msg2 = {};\nvar msg3 = {};\nmsg3.payload = \"Ji:\" + ji + \" Mode:\" + mode; //newPosition;\n\nif(mode != oldMode){\n    msg2.payload = \"JC\";\n    return [[],msg2,msg3];\n}\nelse {\n    msg1.payload = gcode;\n    return [msg1,[],msg3];\n}",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 160,
        "wires": [
            [
                "ccde10eb4f65aa3c",
                "9229c0ca891f0870"
            ],
            [
                "3b94454d0779b4fd",
                "9229c0ca891f0870"
            ],
            [
                "47ea591a1a15bccb"
            ]
        ]
    },
    {
        "id": "d867c6aff337b9e9",
        "type": "ui_button",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 24,
        "width": "2",
        "height": 1,
        "passthru": false,
        "label": "Auto home",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "topicType": "str",
        "x": 550,
        "y": 160,
        "wires": [
            [
                "173dc575dd1af050"
            ]
        ]
    },
    {
        "id": "ccde10eb4f65aa3c",
        "type": "link out",
        "z": "90cdd7aec5fd0b38",
        "name": "Serial_out",
        "links": [
            "42685681efb1a1c1"
        ],
        "x": 1075,
        "y": 120,
        "wires": []
    },
    {
        "id": "cb91e4a7746d2892",
        "type": "ui_button",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 20,
        "width": "3",
        "height": 1,
        "passthru": false,
        "label": "Go to random",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 240,
        "y": 840,
        "wires": [
            [
                "70300596a2d36563"
            ]
        ]
    },
    {
        "id": "d46ef38577561a90",
        "type": "link in",
        "z": "90cdd7aec5fd0b38",
        "name": "Sensors_in",
        "links": [
            "363235871727ce79",
            "93829c296a75c63d"
        ],
        "x": 575,
        "y": 580,
        "wires": [
            [
                "a7b4883d881e129a"
            ]
        ]
    },
    {
        "id": "095bac58a197b413",
        "type": "ui_button",
        "z": "90cdd7aec5fd0b38",
        "name": "Cancel jog",
        "group": "591df4c.3244c0c",
        "order": 11,
        "width": "1",
        "height": "1",
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "icon": "warning",
        "payload": "[133]",
        "payloadType": "bin",
        "topic": "",
        "x": 230,
        "y": 480,
        "wires": [
            [
                "07afb9c83662703a"
            ]
        ]
    },
    {
        "id": "07afb9c83662703a",
        "type": "link out",
        "z": "90cdd7aec5fd0b38",
        "name": "Serial_in",
        "links": [
            "9782e7a60372617d"
        ],
        "x": 335,
        "y": 480,
        "wires": []
    },
    {
        "id": "501979b51f569201",
        "type": "function",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar gcode=\"$J=G91G21Y-\"+ jogIncrement + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 440,
        "wires": [
            [
                "529dba6e2ca301a0"
            ]
        ]
    },
    {
        "id": "529dba6e2ca301a0",
        "type": "link out",
        "z": "90cdd7aec5fd0b38",
        "name": "Serial_in",
        "links": [
            "42685681efb1a1c1"
        ],
        "x": 455,
        "y": 440,
        "wires": []
    },
    {
        "id": "db280cb708927e55",
        "type": "function",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar gcode=\"$J=G91G21Y\"+ jogIncrement + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 520,
        "wires": [
            [
                "b8136d0106f6f5c2"
            ]
        ]
    },
    {
        "id": "b8136d0106f6f5c2",
        "type": "link out",
        "z": "90cdd7aec5fd0b38",
        "name": "Serial_in",
        "links": [
            "42685681efb1a1c1"
        ],
        "x": 455,
        "y": 520,
        "wires": []
    },
    {
        "id": "ecf980c95d88d07f",
        "type": "function",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar gcode=\"$J=G91G21X-\"+ jogIncrement + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 600,
        "wires": [
            [
                "1757dc106dd1adc7"
            ]
        ]
    },
    {
        "id": "1757dc106dd1adc7",
        "type": "link out",
        "z": "90cdd7aec5fd0b38",
        "name": "Serial_in",
        "links": [
            "42685681efb1a1c1"
        ],
        "x": 455,
        "y": 600,
        "wires": []
    },
    {
        "id": "7b98e9b228f9e1a7",
        "type": "function",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar gcode=\"$J=G91G21X\"+ jogIncrement + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 360,
        "wires": [
            [
                "6ad85cb64ea0f97c"
            ]
        ]
    },
    {
        "id": "6ad85cb64ea0f97c",
        "type": "link out",
        "z": "90cdd7aec5fd0b38",
        "name": "Serial_in",
        "links": [
            "42685681efb1a1c1"
        ],
        "x": 455,
        "y": 360,
        "wires": []
    },
    {
        "id": "363de73ce5a4bf6f",
        "type": "ui_button",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 10,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "ᐊ",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 210,
        "y": 440,
        "wires": [
            [
                "501979b51f569201"
            ]
        ]
    },
    {
        "id": "90ee3932e388302e",
        "type": "ui_button",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 12,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "ᐅ",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 210,
        "y": 520,
        "wires": [
            [
                "db280cb708927e55"
            ]
        ]
    },
    {
        "id": "84283d6844cf5d5d",
        "type": "ui_button",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 14,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "ᐁ",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 210,
        "y": 600,
        "wires": [
            [
                "ecf980c95d88d07f"
            ]
        ]
    },
    {
        "id": "ace11c037064553b",
        "type": "ui_button",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 8,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "ᐃ",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 210,
        "y": 360,
        "wires": [
            [
                "7b98e9b228f9e1a7"
            ]
        ]
    },
    {
        "id": "43f0dd97124a3d08",
        "type": "ui_text",
        "z": "90cdd7aec5fd0b38",
        "group": "591df4c.3244c0c",
        "order": 27,
        "width": 0,
        "height": 0,
        "name": "X",
        "label": "X:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1010,
        "y": 400,
        "wires": []
    },
    {
        "id": "159d5550523b9d2e",
        "type": "function",
        "z": "90cdd7aec5fd0b38",
        "name": "Positions",
        "func": "var position = global.get('rig.position') || null;\n\nvar msg1 = {};\nvar msg2 = {};\nvar msg3 = {};\n\nif(position != null){\nmsg1.payload = position.x || \"-\";\nmsg2.payload = position.y || \"-\";\nmsg3.payload = position.z || \"-\";\n} else{\nmsg1.payload = \"-\";\nmsg2.payload = \"-\";\nmsg3.payload = \"-\"; \n}\n\nreturn [msg1, msg2, msg3]",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 440,
        "wires": [
            [
                "43f0dd97124a3d08"
            ],
            [
                "14c18a6751515ef5"
            ],
            [
                "1ab963d837b5c107"
            ]
        ]
    },
    {
        "id": "14c18a6751515ef5",
        "type": "ui_text",
        "z": "90cdd7aec5fd0b38",
        "group": "591df4c.3244c0c",
        "order": 28,
        "width": 0,
        "height": 0,
        "name": "Y",
        "label": "Y:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1010,
        "y": 440,
        "wires": []
    },
    {
        "id": "1ab963d837b5c107",
        "type": "ui_text",
        "z": "90cdd7aec5fd0b38",
        "group": "591df4c.3244c0c",
        "order": 29,
        "width": 0,
        "height": 0,
        "name": "Z",
        "label": "Z:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1010,
        "y": 480,
        "wires": []
    },
    {
        "id": "cd031aa05117fe78",
        "type": "inject",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 630,
        "y": 440,
        "wires": [
            [
                "fe46d4ded65186ca"
            ]
        ]
    },
    {
        "id": "fe46d4ded65186ca",
        "type": "trigger",
        "z": "90cdd7aec5fd0b38",
        "name": "200ms",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-200",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 750,
        "y": 440,
        "wires": [
            [
                "159d5550523b9d2e"
            ]
        ]
    },
    {
        "id": "f01bbc83e4578f0b",
        "type": "inject",
        "z": "90cdd7aec5fd0b38",
        "name": "Off",
        "props": [
            {
                "p": "reset",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 630,
        "y": 400,
        "wires": [
            [
                "fe46d4ded65186ca"
            ]
        ]
    },
    {
        "id": "70300596a2d36563",
        "type": "function",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar maxMovement=global.get('rig.maxMovement') || null;\nvar position=global.get('rig.position') || null;\n\nif(maxMovement != null && position != null){\n    var x=Math.floor((Math.random() * maxMovement.x) + 1);\n    var y=Math.floor((Math.random() * maxMovement.y) + 1);\n    var z=Math.floor((Math.random() * 100) + 1);\n\n    var gcode=\"$J=G90G21X\"+ x + \"Y\" + y + \"Z-\" + z + \"F\"+feed;\n\n    msg.payload = gcode;\n    return msg;   \n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 840,
        "wires": [
            [
                "82fdf26f354a957f",
                "41cb73bf3ea99ec7"
            ]
        ]
    },
    {
        "id": "82fdf26f354a957f",
        "type": "link out",
        "z": "90cdd7aec5fd0b38",
        "name": "Serial_in",
        "links": [
            "42685681efb1a1c1"
        ],
        "x": 495,
        "y": 880,
        "wires": []
    },
    {
        "id": "2e7b07173a117179",
        "type": "comment",
        "z": "90cdd7aec5fd0b38",
        "name": "Manual movement",
        "info": "",
        "x": 130,
        "y": 40,
        "wires": []
    },
    {
        "id": "68de9d37e5ba13c2",
        "type": "comment",
        "z": "90cdd7aec5fd0b38",
        "name": "Autonomous movement",
        "info": "",
        "x": 580,
        "y": 40,
        "wires": []
    },
    {
        "id": "5f9a77e6d11509ff",
        "type": "comment",
        "z": "90cdd7aec5fd0b38",
        "name": "Status feedback",
        "info": "",
        "x": 640,
        "y": 360,
        "wires": []
    },
    {
        "id": "17f42a1b5d8fd653",
        "type": "function",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('feed', value);\nmsg.payload = \"F: \" + value;\nmsg.topic = \"feed\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 800,
        "wires": [
            [
                "c7e5284ca2348d3e"
            ]
        ]
    },
    {
        "id": "2b4d3c7391bcc2dd",
        "type": "ui_slider",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "label": "Feed",
        "tooltip": "",
        "group": "591df4c.3244c0c",
        "order": 19,
        "width": "3",
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "",
        "topicType": "str",
        "min": "100",
        "max": "3500",
        "step": "50",
        "className": "",
        "x": 210,
        "y": 800,
        "wires": [
            [
                "17f42a1b5d8fd653"
            ]
        ]
    },
    {
        "id": "47ea591a1a15bccb",
        "type": "ui_text",
        "z": "90cdd7aec5fd0b38",
        "group": "591df4c.3244c0c",
        "order": 26,
        "width": "3",
        "height": 1,
        "name": "Status",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1030,
        "y": 800,
        "wires": []
    },
    {
        "id": "42aff5d520a0d25d",
        "type": "inject",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "3500",
        "payloadType": "num",
        "x": 90,
        "y": 800,
        "wires": [
            [
                "2b4d3c7391bcc2dd"
            ]
        ]
    },
    {
        "id": "41cb73bf3ea99ec7",
        "type": "debug",
        "z": "90cdd7aec5fd0b38",
        "name": "Rnd pos",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 840,
        "wires": []
    },
    {
        "id": "ef73d9a4e73b7605",
        "type": "ui_button",
        "z": "90cdd7aec5fd0b38",
        "name": "Cancel",
        "group": "591df4c.3244c0c",
        "order": 25,
        "width": "1",
        "height": "1",
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "icon": "warning",
        "payload": "[133]",
        "payloadType": "bin",
        "topic": "",
        "x": 540,
        "y": 120,
        "wires": [
            [
                "ab28d82874c3fbb5",
                "1a456fd1713ab2d3"
            ]
        ]
    },
    {
        "id": "020ddee278feb3ba",
        "type": "function",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('homing.repeats', value);\nmsg.payload = \"R: \" + value;\nmsg.topic = \"repeats\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 880,
        "y": 280,
        "wires": [
            [
                "c7e5284ca2348d3e"
            ]
        ]
    },
    {
        "id": "5d9a2b58815b9a0b",
        "type": "ui_slider",
        "z": "90cdd7aec5fd0b38",
        "d": true,
        "name": "",
        "label": "Repts",
        "tooltip": "",
        "group": "591df4c.3244c0c",
        "order": 21,
        "width": "3",
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "",
        "topicType": "str",
        "min": "50",
        "max": "1000",
        "step": "50",
        "className": "",
        "x": 750,
        "y": 280,
        "wires": [
            [
                "020ddee278feb3ba"
            ]
        ]
    },
    {
        "id": "65e924966f4d4730",
        "type": "inject",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "50",
        "payloadType": "num",
        "x": 610,
        "y": 280,
        "wires": [
            [
                "5d9a2b58815b9a0b"
            ]
        ]
    },
    {
        "id": "c7e5284ca2348d3e",
        "type": "function",
        "z": "90cdd7aec5fd0b38",
        "name": "Format",
        "func": "if(msg.topic == \"repeats\" || msg.topic == \"feed\"){\n    var feed = global.get('feed') || \"n/a\";\n    var repeats = global.get('homing.repeats') || \"n/a\";\n    msg.payload = \"F: \" + feed + \" R: \" + repeats;\n}\nmsg.topic = null;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 900,
        "y": 800,
        "wires": [
            [
                "47ea591a1a15bccb"
            ]
        ]
    },
    {
        "id": "7c30f794510ebb62",
        "type": "function",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "func": "var feed=global.get('feed') || 100;\nvar gcode=\"$J=G01G21Z0F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 760,
        "wires": [
            [
                "5d6e617c9d552fad"
            ]
        ]
    },
    {
        "id": "5d6e617c9d552fad",
        "type": "link out",
        "z": "90cdd7aec5fd0b38",
        "name": "Serial_in",
        "links": [
            "42685681efb1a1c1"
        ],
        "x": 455,
        "y": 760,
        "wires": []
    },
    {
        "id": "79340b83e2d35aa5",
        "type": "ui_button",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 18,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "⤒",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 210,
        "y": 760,
        "wires": [
            [
                "7c30f794510ebb62"
            ]
        ]
    },
    {
        "id": "173dc575dd1af050",
        "type": "trigger",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-400",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 740,
        "y": 160,
        "wires": [
            [
                "1359ed1688686945"
            ]
        ]
    },
    {
        "id": "ee75a6a43d3f0f18",
        "type": "inject",
        "z": "90cdd7aec5fd0b38",
        "name": "Off",
        "props": [
            {
                "p": "reset",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 550,
        "y": 80,
        "wires": [
            [
                "173dc575dd1af050"
            ]
        ]
    },
    {
        "id": "a622b9ceb113a887",
        "type": "debug",
        "z": "90cdd7aec5fd0b38",
        "name": "Homing",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 220,
        "wires": []
    },
    {
        "id": "27553aae68862ee9",
        "type": "delay",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 650,
        "y": 220,
        "wires": [
            [
                "a622b9ceb113a887"
            ]
        ]
    },
    {
        "id": "828f057030c93555",
        "type": "ui_chart",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "group": "7d7753a1.b4c074",
        "order": 1,
        "width": "12",
        "height": "14",
        "label": "A, B, C sensors",
        "chartType": "polar-area",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#ff7f0e",
            "#aec7e8",
            "#2ca02c",
            "#ff7f0e",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": true,
        "x": 920,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "ab28d82874c3fbb5",
        "type": "change",
        "z": "90cdd7aec5fd0b38",
        "name": "rst",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "reset",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 120,
        "wires": [
            [
                "173dc575dd1af050"
            ]
        ]
    },
    {
        "id": "7f861d492906aa01",
        "type": "link out",
        "z": "90cdd7aec5fd0b38",
        "name": "Serial_in",
        "links": [
            "42685681efb1a1c1"
        ],
        "x": 315,
        "y": 80,
        "wires": []
    },
    {
        "id": "204e0d0984236b3b",
        "type": "ui_button",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 1,
        "width": "1",
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "home",
        "payload": "$H",
        "payloadType": "str",
        "topic": "",
        "x": 210,
        "y": 80,
        "wires": [
            [
                "7f861d492906aa01"
            ]
        ]
    },
    {
        "id": "1a456fd1713ab2d3",
        "type": "link out",
        "z": "90cdd7aec5fd0b38",
        "name": "Serial_in",
        "links": [
            "9782e7a60372617d"
        ],
        "x": 655,
        "y": 80,
        "wires": []
    },
    {
        "id": "3539e241af763e83",
        "type": "ui_button",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "10mm",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "10",
        "payloadType": "num",
        "topic": "",
        "x": 210,
        "y": 240,
        "wires": [
            [
                "daace2d5859713e3"
            ]
        ]
    },
    {
        "id": "daace2d5859713e3",
        "type": "function",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('jogIncrement', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "3a4f7db2a7eb74aa",
        "type": "link out",
        "z": "90cdd7aec5fd0b38",
        "name": "Serial_Out",
        "links": [
            "9782e7a60372617d"
        ],
        "x": 1075,
        "y": 220,
        "wires": []
    },
    {
        "id": "3b94454d0779b4fd",
        "type": "change",
        "z": "90cdd7aec5fd0b38",
        "name": "Jog cancel",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[133]",
                "tot": "bin"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 220,
        "wires": [
            [
                "3a4f7db2a7eb74aa",
                "1035fad2a54f8f1c"
            ]
        ]
    },
    {
        "id": "1035fad2a54f8f1c",
        "type": "debug",
        "z": "90cdd7aec5fd0b38",
        "name": "Jog cancel",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 280,
        "wires": []
    },
    {
        "id": "9229c0ca891f0870",
        "type": "debug",
        "z": "90cdd7aec5fd0b38",
        "name": "AutoHoming",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 160,
        "wires": []
    },
    {
        "id": "191b649289a2207e",
        "type": "function",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "func": "var origoX = global.get('origoX');\nvar origoY = global.get('origoY');\n// Add 8mm extra y travel due to secondary dipping down at an angle\nvar y = origoY + 0;\nvar origoZ = global.get('origoZ');\nvar feed=global.get('feed') || 100;\nvar jogIncrement=global.get('jogIncrement') || 1;\nvar gcode=\"$J=G90G21X\"+ origoX + \"Y\" + y + \"Z-\" + origoZ + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 700,
        "wires": [
            [
                "9e56e5aeb6196579"
            ]
        ]
    },
    {
        "id": "14987025a274b3bb",
        "type": "ui_button",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 22,
        "width": "2",
        "height": 1,
        "passthru": false,
        "label": "Above origo",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "topicType": "str",
        "x": 610,
        "y": 700,
        "wires": [
            [
                "191b649289a2207e"
            ]
        ]
    },
    {
        "id": "9e56e5aeb6196579",
        "type": "link out",
        "z": "90cdd7aec5fd0b38",
        "name": "Serial_in",
        "links": [
            "42685681efb1a1c1"
        ],
        "x": 995,
        "y": 700,
        "wires": []
    },
    {
        "id": "e5b8601e084d9403",
        "type": "function",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "func": "var feed = 100;\nvar jogIncrement = 45;\nvar yDipComp = 0;\nvar gcode=\"$J=G91G21y\" + yDipComp + \"Z-\"+ jogIncrement + \"F\"+feed;\n\nmsg.payload = gcode;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 740,
        "wires": [
            [
                "d23263521d57fb0f"
            ]
        ]
    },
    {
        "id": "e8f08995acf0343b",
        "type": "ui_button",
        "z": "90cdd7aec5fd0b38",
        "name": "",
        "group": "591df4c.3244c0c",
        "order": 23,
        "width": "1",
        "height": 1,
        "passthru": false,
        "label": "Dock",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "topicType": "str",
        "x": 590,
        "y": 740,
        "wires": [
            [
                "e5b8601e084d9403"
            ]
        ]
    },
    {
        "id": "d23263521d57fb0f",
        "type": "link out",
        "z": "90cdd7aec5fd0b38",
        "name": "Serial_in",
        "links": [
            "42685681efb1a1c1"
        ],
        "x": 995,
        "y": 740,
        "wires": []
    },
    {
        "id": "d959b35019c42066",
        "type": "function",
        "z": "0aceb2d416fb98e0",
        "name": "Set mapping variables",
        "func": "var x=global.get('width') || 0;\nvar y=global.get('depth') || 0;\nvar z=global.get('height') || 0;\nvar yResolution=global.get('yResolution') || 0;\nvar zResolution=global.get('zResolution') || 0;\nvar feed = global.get('feed');\n\nvar sampleRate = 5;\nvar seconds = (x*60)/(feed/10);\n\nvar xSamples = seconds * sampleRate;\nvar rows = 1 + y/yResolution;\nvar columns = 1 + z/zResolution;\nif(y==1){rows = 1}\nif(z==1){columns = 1}\n\nvar noOfSamples = Math.round(xSamples*rows*columns);\n\nglobal.set('rows', rows);\nglobal.set('columns', columns);\nglobal.set('noOfSamples', noOfSamples);\nglobal.set('scanLength', (x*rows*columns));\n\nvar msg1 = { payload:x + \"x\" + y + \"x\" + z };\nvar msg2 = { payload:x + \" (cm)x\" + rows + \"x\" + columns };\nvar msg3 = { payload:noOfSamples };\nreturn [msg1, msg2, msg3];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 820,
        "y": 240,
        "wires": [
            [
                "8bb63581103901d9"
            ],
            [
                "7aecbd3e2c99ef93"
            ],
            [
                "a453dcbce7b7207d",
                "e4bcc8c133312c90"
            ]
        ]
    },
    {
        "id": "e4bcc8c133312c90",
        "type": "function",
        "z": "0aceb2d416fb98e0",
        "name": "Set duration",
        "func": "var scanLength = global.get('scanLength');\nvar feed = global.get('feed') || 0;\nvar duration = (scanLength/(feed/10))/60;\nmsg.payload = Math.round(duration);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 790,
        "y": 360,
        "wires": [
            [
                "bce711703a0c8e7d"
            ]
        ]
    },
    {
        "id": "0554dc1d617f94c6",
        "type": "inject",
        "z": "0aceb2d416fb98e0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "40",
        "payloadType": "num",
        "x": 90,
        "y": 320,
        "wires": [
            [
                "44975b218fa30c63"
            ]
        ]
    },
    {
        "id": "6a0cb793d6f8b114",
        "type": "function",
        "z": "0aceb2d416fb98e0",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('width', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 260,
        "wires": [
            [
                "d959b35019c42066"
            ]
        ]
    },
    {
        "id": "257718fc95fbb665",
        "type": "function",
        "z": "0aceb2d416fb98e0",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('depth', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 320,
        "wires": [
            [
                "d959b35019c42066"
            ]
        ]
    },
    {
        "id": "e0d07903da735828",
        "type": "function",
        "z": "0aceb2d416fb98e0",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('height', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 380,
        "wires": [
            [
                "d959b35019c42066"
            ]
        ]
    },
    {
        "id": "dd24ae9a78b86152",
        "type": "function",
        "z": "0aceb2d416fb98e0",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('mappingMode', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "5239d2f5cf9c350e",
        "type": "inject",
        "z": "0aceb2d416fb98e0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "23",
        "payloadType": "num",
        "x": 90,
        "y": 380,
        "wires": [
            [
                "22dd6a02dfbf7a1a"
            ]
        ]
    },
    {
        "id": "352cd468e2d6d267",
        "type": "inject",
        "z": "0aceb2d416fb98e0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "60",
        "payloadType": "num",
        "x": 90,
        "y": 260,
        "wires": [
            [
                "f2fb4b2fd99ccc4b"
            ]
        ]
    },
    {
        "id": "57d1492ec9430ade",
        "type": "comment",
        "z": "0aceb2d416fb98e0",
        "name": "Mapping config",
        "info": "",
        "x": 120,
        "y": 40,
        "wires": []
    },
    {
        "id": "a371b5d05012f9d4",
        "type": "inject",
        "z": "0aceb2d416fb98e0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 90,
        "y": 80,
        "wires": [
            [
                "b641279259e6922e"
            ]
        ]
    },
    {
        "id": "399797c6212e4f99",
        "type": "inject",
        "z": "0aceb2d416fb98e0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "3500",
        "payloadType": "num",
        "x": 90,
        "y": 440,
        "wires": [
            [
                "12333d572b735ad1"
            ]
        ]
    },
    {
        "id": "23fbb5fc847e202f",
        "type": "function",
        "z": "0aceb2d416fb98e0",
        "name": "",
        "func": "var value = msg.payload;\nglobal.set('feed', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 440,
        "wires": [
            [
                "d959b35019c42066"
            ]
        ]
    },
    {
        "id": "5f1e31e7d7e4d22a",
        "type": "link in",
        "z": "0aceb2d416fb98e0",
        "name": "Remaining_in",
        "links": [
            "1c6d6c73.be5c5c",
            "d54468a2.c58118"
        ],
        "x": 675,
        "y": 360,
        "wires": [
            [
                "e4bcc8c133312c90"
            ]
        ]
    },
    {
        "id": "0a8445e39e64afef",
        "type": "inject",
        "z": "0aceb2d416fb98e0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 90,
        "y": 140,
        "wires": [
            [
                "4827757af62aad91"
            ]
        ]
    },
    {
        "id": "f0e866eb1759ab55",
        "type": "function",
        "z": "0aceb2d416fb98e0",
        "name": "yResolution",
        "func": "var value = msg.payload;\nglobal.set('yResolution', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 550,
        "y": 140,
        "wires": [
            [
                "d959b35019c42066"
            ]
        ]
    },
    {
        "id": "b641279259e6922e",
        "type": "ui_dropdown",
        "z": "0aceb2d416fb98e0",
        "name": "",
        "label": "Mode",
        "tooltip": "",
        "place": "Select option",
        "group": "19dc6535.e7fc1b",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Continous",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Grid",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Slice",
                "value": 3,
                "type": "num"
            },
            {
                "label": "Spiral",
                "value": 4,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 230,
        "y": 80,
        "wires": [
            [
                "dd24ae9a78b86152"
            ]
        ]
    },
    {
        "id": "4827757af62aad91",
        "type": "ui_dropdown",
        "z": "0aceb2d416fb98e0",
        "name": "",
        "label": "Yresolution (cm)",
        "tooltip": "",
        "place": "Select option",
        "group": "19dc6535.e7fc1b",
        "order": 2,
        "width": "6",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "0.1 cm",
                "value": 0.1,
                "type": "num"
            },
            {
                "label": "0.2 cm",
                "value": 0.2,
                "type": "num"
            },
            {
                "label": "0.5 cm",
                "value": 0.5,
                "type": "num"
            },
            {
                "label": "1 cm",
                "value": 1,
                "type": "num"
            },
            {
                "label": "2 cm",
                "value": 2,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 260,
        "y": 140,
        "wires": [
            [
                "f0e866eb1759ab55"
            ]
        ]
    },
    {
        "id": "f2fb4b2fd99ccc4b",
        "type": "ui_slider",
        "z": "0aceb2d416fb98e0",
        "name": "",
        "label": "Width (cm)",
        "tooltip": "",
        "group": "19dc6535.e7fc1b",
        "order": 4,
        "width": 5,
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "",
        "min": "0",
        "max": "100",
        "step": "2",
        "x": 250,
        "y": 260,
        "wires": [
            [
                "7f0fbfe2ec415b5b",
                "6a0cb793d6f8b114"
            ]
        ]
    },
    {
        "id": "44975b218fa30c63",
        "type": "ui_slider",
        "z": "0aceb2d416fb98e0",
        "name": "",
        "label": "Depth (cm)",
        "tooltip": "",
        "group": "19dc6535.e7fc1b",
        "order": 6,
        "width": 5,
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "",
        "min": "0",
        "max": "76",
        "step": "2",
        "x": 250,
        "y": 320,
        "wires": [
            [
                "4fa96c3b2f929dff",
                "257718fc95fbb665"
            ]
        ]
    },
    {
        "id": "22dd6a02dfbf7a1a",
        "type": "ui_slider",
        "z": "0aceb2d416fb98e0",
        "name": "",
        "label": "Height (cm)",
        "tooltip": "",
        "group": "19dc6535.e7fc1b",
        "order": 8,
        "width": 5,
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "",
        "min": "0",
        "max": "23",
        "step": 1,
        "x": 250,
        "y": 380,
        "wires": [
            [
                "cb1dd09de6b90755",
                "e0d07903da735828"
            ]
        ]
    },
    {
        "id": "12333d572b735ad1",
        "type": "ui_slider",
        "z": "0aceb2d416fb98e0",
        "name": "",
        "label": "Feed rate",
        "tooltip": "",
        "group": "19dc6535.e7fc1b",
        "order": 10,
        "width": 4,
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "",
        "min": "100",
        "max": "3500",
        "step": "50",
        "x": 240,
        "y": 440,
        "wires": [
            [
                "bf6b3b48e1ea4a58",
                "23fbb5fc847e202f"
            ]
        ]
    },
    {
        "id": "7f0fbfe2ec415b5b",
        "type": "ui_text",
        "z": "0aceb2d416fb98e0",
        "group": "19dc6535.e7fc1b",
        "order": 5,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 410,
        "y": 260,
        "wires": []
    },
    {
        "id": "4fa96c3b2f929dff",
        "type": "ui_text",
        "z": "0aceb2d416fb98e0",
        "group": "19dc6535.e7fc1b",
        "order": 7,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 410,
        "y": 320,
        "wires": []
    },
    {
        "id": "cb1dd09de6b90755",
        "type": "ui_text",
        "z": "0aceb2d416fb98e0",
        "group": "19dc6535.e7fc1b",
        "order": 9,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 410,
        "y": 380,
        "wires": []
    },
    {
        "id": "a453dcbce7b7207d",
        "type": "ui_text",
        "z": "0aceb2d416fb98e0",
        "group": "19dc6535.e7fc1b",
        "order": 15,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "No. of samples",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1040,
        "y": 280,
        "wires": []
    },
    {
        "id": "bce711703a0c8e7d",
        "type": "ui_text",
        "z": "0aceb2d416fb98e0",
        "group": "19dc6535.e7fc1b",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Estimated run-time (h)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 980,
        "y": 360,
        "wires": []
    },
    {
        "id": "8bb63581103901d9",
        "type": "ui_text",
        "z": "0aceb2d416fb98e0",
        "group": "19dc6535.e7fc1b",
        "order": 13,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Grid size",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1020,
        "y": 200,
        "wires": []
    },
    {
        "id": "bf6b3b48e1ea4a58",
        "type": "ui_text",
        "z": "0aceb2d416fb98e0",
        "group": "19dc6535.e7fc1b",
        "order": 11,
        "width": 2,
        "height": 1,
        "name": "Feed",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 410,
        "y": 440,
        "wires": []
    },
    {
        "id": "7aecbd3e2c99ef93",
        "type": "ui_text",
        "z": "0aceb2d416fb98e0",
        "group": "19dc6535.e7fc1b",
        "order": 14,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Scan lines",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1030,
        "y": 240,
        "wires": []
    },
    {
        "id": "77a086cfd6484e17",
        "type": "inject",
        "z": "0aceb2d416fb98e0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 90,
        "y": 200,
        "wires": [
            [
                "e6d81231a40e4a33"
            ]
        ]
    },
    {
        "id": "288bc5a677e16e4f",
        "type": "function",
        "z": "0aceb2d416fb98e0",
        "name": "zResolution",
        "func": "var value = msg.payload;\nglobal.set('zResolution', value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 550,
        "y": 200,
        "wires": [
            [
                "d959b35019c42066"
            ]
        ]
    },
    {
        "id": "e6d81231a40e4a33",
        "type": "ui_dropdown",
        "z": "0aceb2d416fb98e0",
        "name": "",
        "label": "Zresolution (cm)",
        "tooltip": "",
        "place": "Select option",
        "group": "19dc6535.e7fc1b",
        "order": 3,
        "width": "6",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "0.1 cm",
                "value": 0.1,
                "type": "num"
            },
            {
                "label": "0.2 cm",
                "value": 0.2,
                "type": "num"
            },
            {
                "label": "0.5 cm",
                "value": 0.5,
                "type": "num"
            },
            {
                "label": "1 cm",
                "value": 1,
                "type": "num"
            },
            {
                "label": "2 cm",
                "value": 2,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 260,
        "y": 200,
        "wires": [
            [
                "288bc5a677e16e4f"
            ]
        ]
    },
    {
        "id": "952c781f5cc27177",
        "type": "csv",
        "z": "892a62a4c03bf242",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "once",
        "multi": "one",
        "ret": "\\n",
        "temp": "sample_a,sample_b,sample_c,sample_z,tss",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 530,
        "y": 740,
        "wires": [
            [
                "ea64a65fd0e2f9f2"
            ]
        ]
    },
    {
        "id": "e31cd9092abe4cd7",
        "type": "debug",
        "z": "892a62a4c03bf242",
        "name": "Values CSV",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 740,
        "wires": []
    },
    {
        "id": "1ebba2c034ba3c1d",
        "type": "function",
        "z": "892a62a4c03bf242",
        "name": "Prep vals",
        "func": "var sample_a = msg.payload.a;\nvar sample_b = msg.payload.b;\nvar sample_c = msg.payload.c;\nvar sample_z = msg.payload.z;\nvar tss = msg.payload.timestamp;\nmsg.payload = {sample_a, sample_b, sample_c, sample_z, tss};\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 740,
        "wires": [
            [
                "952c781f5cc27177"
            ]
        ]
    },
    {
        "id": "7341804ed9a7eeba",
        "type": "file",
        "z": "892a62a4c03bf242",
        "name": "Values file",
        "filename": "",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 840,
        "y": 740,
        "wires": [
            [
                "e31cd9092abe4cd7"
            ]
        ]
    },
    {
        "id": "aa55fea735e6af64",
        "type": "function",
        "z": "892a62a4c03bf242",
        "name": "Generate gcode",
        "func": "global.set('MappingActive', msg.payload);\nglobal.set('sampleNumber', 0);\n\nvar mappingMode=global.get('mappingMode') || 1;\n\nvar width=global.get('width') || 1;\nvar depth=global.get('depth') || 1;\nvar height=global.get('height') || 1;\n\nvar rows=global.get('rows') || 1;\nvar columns=global.get('columns') || 1;\n\nvar feed=global.get('feed') || 100;\nvar yResolution=global.get('yResolution') || 1;\nvar zResolution=global.get('zResolution') || 1;\n\nvar origoX=global.get('origoX') || 535;\nvar origoY=global.get('origoY') || 315;\nvar origoZ=global.get('origoZ') || 230;\n\nvar xStartPos=origoX - (width*10)/2;\nvar yStartPos=origoY - (depth*10)/2;\n\nif(width == 1){xStartPos = origoX}\nif(depth == 1){yStartPos = origoY}\n\nvar xEndPos = xStartPos + width*10;\nvar yEndPos = yStartPos + Math.round(10*rows*yResolution);\n\nvar zStartPos=-origoZ;\n\nvar xPos=xStartPos;\nvar xPos2=xEndPos;\nvar yPos=yStartPos;\nvar yPosOld;\nvar zPos=zStartPos;\n//global.set('temp', \"depth: \" + depth + \" origoY: \" + origoY + \" yStartPos:\" + yStartPos + \" (depth*10)/2: \" + ((depth*10)/2)+ \" yPos: \" + yPos + \" (y*yResolution*10): \" + (y*yResolution*10));\nvar gcode=\"\";\n\nvar forwardX = true;\nvar forwardY = true;\n\nvar x=1;\nvar y=1;\nvar z=1;\n\n// Continous mode\nif(mappingMode == 1){\n    for (z=1; z<=columns; z++) {\n        for (y=1; y<=rows; y++) {\n            if(forwardX == true){\n                xPos = xStartPos;\n                xPos2 = xEndPos;\n            }\n            else{\n                xPos = xEndPos;\n                xPos2 = xStartPos;\n            }\n            gcode=\"G1 G90 G21 X\"+ xPos + \" Y\"+ yPos + \" Z\"+ zPos + \" F\"+feed;\n            msg.payload = gcode;\n            node.send(msg);\n            gcode=\"G1 G90 G21 X\"+ xPos2 + \" Y\"+ yPos + \" Z\"+ zPos + \" F\"+feed;\n            msg.payload = gcode;\n            node.send(msg);\n            forwardX = !forwardX;\n            yPosOld = yPos;\n            if(forwardY == true){\n                yPos = yStartPos + Math.round(10*y*yResolution);\n            }\n            else{\n                yPos = yEndPos - Math.round(10*y*yResolution);\n            }\n        }\n        zPos = zStartPos + Math.round(10*z*zResolution);\n        if(forwardY == true){\n            yPos = yPosOld;\n        }\n        forwardY = !forwardY;\n    }\n}\n// Grid mode\nelse if(mappingMode == 2){\n    for (z=1; z<=columns; z++) {\n        for (y=1; y<=rows; y++) {\n            for (x=0; x<=width; x++) {\n                xPos = xStartPos + Math.round(x/yResolution);\n                gcode=\"$J=G90 G21 X\"+ xPos + \" Y\"+ yPos + \" Z\"+ zPos + \" F\"+feed;\n                msg.payload = gcode;\n                node.send(msg);\n            }\n            yPos = yStartPos + Math.round(10*y*yResolution);\n        }\n        zPos = zStartPos + Math.round(10*z*zResolution);\n        yPos = yStartPos;\n    }\n}\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 280,
        "y": 160,
        "wires": [
            [
                "1ad2e6a407d9856d",
                "23de2aebce2d8df9",
                "3c35d142ffbb6f76"
            ]
        ]
    },
    {
        "id": "1924ad19576e9e9b",
        "type": "inject",
        "z": "892a62a4c03bf242",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 180,
        "wires": [
            [
                "aa55fea735e6af64"
            ]
        ]
    },
    {
        "id": "5db5953a42c33c96",
        "type": "comment",
        "z": "892a62a4c03bf242",
        "name": "Create mapping gcode",
        "info": "",
        "x": 120,
        "y": 20,
        "wires": []
    },
    {
        "id": "ff1fd2c47265d467",
        "type": "file",
        "z": "892a62a4c03bf242",
        "name": "Gcode file",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 650,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "7472fe87bebaf4e6",
        "type": "inject",
        "z": "892a62a4c03bf242",
        "name": "Idle",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "<Idle|WPos:100.000,0.000,0.000|FS:0,0>",
        "payloadType": "str",
        "x": 90,
        "y": 380,
        "wires": [
            [
                "66d0ec50be16434c"
            ]
        ]
    },
    {
        "id": "b00fb8b3645ed4cb",
        "type": "inject",
        "z": "892a62a4c03bf242",
        "name": "Jog",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "<Jog|WPos:100.000,0.000,0.000|FS:0,0>",
        "payloadType": "str",
        "x": 90,
        "y": 420,
        "wires": [
            [
                "66d0ec50be16434c"
            ]
        ]
    },
    {
        "id": "aff5a2870f4c0f74",
        "type": "inject",
        "z": "892a62a4c03bf242",
        "name": "Run",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "<Run|WPos:123.000,321.000,225.000|FS:0,0>",
        "payloadType": "str",
        "x": 90,
        "y": 460,
        "wires": [
            [
                "66d0ec50be16434c"
            ]
        ]
    },
    {
        "id": "b734a9afa5c6e182",
        "type": "debug",
        "z": "892a62a4c03bf242",
        "name": "Status",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 360,
        "wires": []
    },
    {
        "id": "6aa63f6aed35c343",
        "type": "inject",
        "z": "892a62a4c03bf242",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Error:15",
        "payloadType": "str",
        "x": 90,
        "y": 340,
        "wires": [
            [
                "66d0ec50be16434c"
            ]
        ]
    },
    {
        "id": "3e6b2381344599a7",
        "type": "inject",
        "z": "892a62a4c03bf242",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Ok",
        "payloadType": "str",
        "x": 90,
        "y": 300,
        "wires": [
            [
                "66d0ec50be16434c"
            ]
        ]
    },
    {
        "id": "66d0ec50be16434c",
        "type": "switch",
        "z": "892a62a4c03bf242",
        "name": "Switch",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Ok",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "Error:",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 250,
        "y": 340,
        "wires": [
            [
                "2c9b50e1f9afbdaf"
            ],
            [
                "daa1cd34c4b97c76"
            ],
            [
                "fbfdf3d4ceb52f5e"
            ]
        ]
    },
    {
        "id": "daa1cd34c4b97c76",
        "type": "change",
        "z": "892a62a4c03bf242",
        "name": "Error code",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Error:",
                "fromt": "str",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 340,
        "wires": [
            [
                "b734a9afa5c6e182"
            ]
        ]
    },
    {
        "id": "b15a13cd952835bd",
        "type": "link out",
        "z": "892a62a4c03bf242",
        "name": "Serial_in",
        "mode": "link",
        "links": [
            "42685681efb1a1c1"
        ],
        "x": 715,
        "y": 300,
        "wires": []
    },
    {
        "id": "2c9b50e1f9afbdaf",
        "type": "change",
        "z": "892a62a4c03bf242",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "control",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "trigger",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 300,
        "wires": [
            [
                "1ad2e6a407d9856d"
            ]
        ]
    },
    {
        "id": "011d43ad9284d363",
        "type": "link in",
        "z": "892a62a4c03bf242",
        "name": "Serial_out",
        "links": [
            "93829c296a75c63d"
        ],
        "x": 115,
        "y": 500,
        "wires": [
            [
                "66d0ec50be16434c",
                "bbd4c2e83799987d"
            ]
        ]
    },
    {
        "id": "1ceff7d6100f241e",
        "type": "link out",
        "z": "892a62a4c03bf242",
        "name": "Serial_in",
        "links": [
            "42685681efb1a1c1"
        ],
        "x": 995,
        "y": 260,
        "wires": []
    },
    {
        "id": "b5729b06cb993a8f",
        "type": "change",
        "z": "892a62a4c03bf242",
        "name": "Request status from controller",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "?",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 260,
        "wires": [
            [
                "1ceff7d6100f241e"
            ]
        ]
    },
    {
        "id": "cedabf90a21115e3",
        "type": "change",
        "z": "892a62a4c03bf242",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "control",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 260,
        "wires": [
            [
                "1ad2e6a407d9856d"
            ]
        ]
    },
    {
        "id": "389a48772521e3cc",
        "type": "inject",
        "z": "892a62a4c03bf242",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Reset",
        "payloadType": "str",
        "x": 90,
        "y": 220,
        "wires": [
            [
                "4e2a64fc3080a66d"
            ]
        ]
    },
    {
        "id": "781416be8d9df8a2",
        "type": "switch",
        "z": "892a62a4c03bf242",
        "name": "New gcode line when Idle",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Idle",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 650,
        "y": 440,
        "wires": [
            [
                "059a616f2883bf02"
            ]
        ]
    },
    {
        "id": "059a616f2883bf02",
        "type": "delay",
        "z": "892a62a4c03bf242",
        "name": "",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 850,
        "y": 440,
        "wires": [
            [
                "835af52934d9696d",
                "3b6cfdda859db174"
            ]
        ]
    },
    {
        "id": "f0608a5d929027af",
        "type": "function",
        "z": "892a62a4c03bf242",
        "name": "Reset SampleNumber and GUI",
        "func": "global.set('MappingActive', '0');\nglobal.set('sampleNumber', 0);\nglobal.set('noOfSamples', 0)\nmsg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 220,
        "wires": [
            [
                "1d79c40c69c9c11f"
            ]
        ]
    },
    {
        "id": "1d79c40c69c9c11f",
        "type": "link out",
        "z": "892a62a4c03bf242",
        "name": "GUI",
        "links": [
            "49b17742.94cf1",
            "518385b2.08b734",
            "faca8e54.fea95",
            "7d29b514.480c3c"
        ],
        "x": 495,
        "y": 220,
        "wires": []
    },
    {
        "id": "d7772a6210838994",
        "type": "link out",
        "z": "892a62a4c03bf242",
        "name": "Serial_in",
        "links": [
            "42685681efb1a1c1"
        ],
        "x": 175,
        "y": 560,
        "wires": []
    },
    {
        "id": "835af52934d9696d",
        "type": "change",
        "z": "892a62a4c03bf242",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "delay",
                "pt": "msg",
                "to": "sampleTime",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 400,
        "wires": [
            [
                "2c9b50e1f9afbdaf"
            ]
        ]
    },
    {
        "id": "a2374b41ed6e975e",
        "type": "function",
        "z": "892a62a4c03bf242",
        "name": "Combine",
        "func": "var values;\nvar position;\n\nif (msg.topic ==\"position\"){\n    var timestamp = Date.now();\n    position = msg.payload;\n    position.timestamp = timestamp; \n    context.set(\"position\", position)\n}\n\nif (msg.topic ==\"values\"){\n    values = msg.payload;\n    position = context.get(\"position\");\n    delete msg.timestamp;\n\n    msg.payload = {\n//        timestamp: timestamp,\n        values: values,\n        position: position\n    }\nreturn [msg,[]];\n}\n\n// Add code to change to new CSV file (new msg.filename) on new layer\nif (msg.topic ==\"filename\"){\n    // This is only placeholder code\n    msg.filename = \"mapping-\" + Date.now() + \".csv\";\nreturn [[],msg];\n}\n\n/*\nif (msg.topic ==\"values\"){context.set(\"values\", msg.payload)}\nif (msg.topic ==\"position\"){\n\nvar timestamp = Date.now();\nvar values = context.get(\"values\");\nvar position = msg.payload;\nposition.timestamp = msg.timestamp; \n\ndelete msg.timestamp;\n\n\nmsg.payload = {\n   timestamp: timestamp,\n   position: position,\n   values: values\n}\n\nreturn msg;\n}\n*/",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 580,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "70335bb9e659d0ce",
        "type": "ui_button",
        "z": "892a62a4c03bf242",
        "name": "",
        "group": "19dc6535.e7fc1b",
        "order": 17,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Start mapping",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 100,
        "y": 140,
        "wires": [
            [
                "aa55fea735e6af64",
                "eff657f7b27e166f"
            ]
        ]
    },
    {
        "id": "4e2a64fc3080a66d",
        "type": "ui_button",
        "z": "892a62a4c03bf242",
        "name": "",
        "group": "19dc6535.e7fc1b",
        "order": 18,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Cancel job",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "icon": "warning",
        "payload": "Reset",
        "payloadType": "str",
        "topic": "",
        "x": 90,
        "y": 260,
        "wires": [
            [
                "cedabf90a21115e3",
                "f0608a5d929027af",
                "8cbbe5eb06107e47"
            ]
        ]
    },
    {
        "id": "8b4670092ca8a332",
        "type": "ui_button",
        "z": "892a62a4c03bf242",
        "name": "",
        "group": "19dc6535.e7fc1b",
        "order": 19,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Panic",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "icon": "warning",
        "payload": "'\\^X'",
        "payloadType": "str",
        "topic": "",
        "x": 70,
        "y": 560,
        "wires": [
            [
                "d7772a6210838994"
            ]
        ]
    },
    {
        "id": "0267ca886cf82942",
        "type": "link out",
        "z": "892a62a4c03bf242",
        "name": "Position_updated",
        "links": [
            "ded481e9.e228a8",
            "759405f0.f10ed4"
        ],
        "x": 1115,
        "y": 440,
        "wires": []
    },
    {
        "id": "4e86e390f209c3b9",
        "type": "link out",
        "z": "892a62a4c03bf242",
        "name": "Status_out",
        "links": [
            "9b584619.62eb68",
            "cfed308f521558ed"
        ],
        "x": 555,
        "y": 400,
        "wires": []
    },
    {
        "id": "517f4d74d0402904",
        "type": "link in",
        "z": "892a62a4c03bf242",
        "name": "Sensors_in",
        "links": [
            "363235871727ce79"
        ],
        "x": 275,
        "y": 780,
        "wires": [
            [
                "1ebba2c034ba3c1d",
                "a932ca1b0ea4ecf7"
            ]
        ]
    },
    {
        "id": "cfed308f521558ed",
        "type": "link in",
        "z": "892a62a4c03bf242",
        "name": "Status_in",
        "links": [
            "ce52a6fbf1510423",
            "4e86e390f209c3b9"
        ],
        "x": 275,
        "y": 660,
        "wires": [
            [
                "e5908c3a413b36a8",
                "2fd8535d9cd67782",
                "02165dcd8a0d2cba"
            ]
        ]
    },
    {
        "id": "04a43e771840c41a",
        "type": "comment",
        "z": "892a62a4c03bf242",
        "name": "Create sample from latest position and sensor values",
        "info": "",
        "x": 540,
        "y": 540,
        "wires": []
    },
    {
        "id": "3b6cfdda859db174",
        "type": "function",
        "z": "892a62a4c03bf242",
        "name": "SampleNo",
        "func": "var active = global.get('MappingActive');\n\nif (active == true){\n    var sampleNumber = global.get('sampleNumber') + 1 || 1;\n    var noOfSamples = global.get('noOfSamples') || 1;\n    if (sampleNumber <= noOfSamples) {\n        global.set('sampleNumber', sampleNumber);\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1010,
        "y": 440,
        "wires": [
            [
                "0267ca886cf82942"
            ]
        ]
    },
    {
        "id": "23de2aebce2d8df9",
        "type": "change",
        "z": "892a62a4c03bf242",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "8cbbe5eb06107e47",
        "type": "change",
        "z": "892a62a4c03bf242",
        "name": "Disabled",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "eff657f7b27e166f",
        "type": "function",
        "z": "892a62a4c03bf242",
        "name": "Set filename",
        "func": "var width=global.get('width') || 1;\nvar depth=global.get('depth') || 1;\nvar height=global.get('height') || 1;\n\nvar origoX=global.get('origoX') || 1;\nvar origoY=global.get('origoY') || 1;\nvar origoZ=global.get('origoZ') || 1;\n\nvar feed=global.get('feed') || 1;\nvar timestamp=Date.now();\n\nvar filename = timestamp + \"_size_\" + width + \"-\" + depth + \"-\" + height + \"_feed_\" + feed + \"_origin_\" + origoX + \"-\" + origoY + \"-\" + origoZ + \".csv\";\nglobal.set('filename', filename);\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 370,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "3c35d142ffbb6f76",
        "type": "function",
        "z": "892a62a4c03bf242",
        "name": "Set filename",
        "func": "var width=global.get('width') || 1;\nvar depth=global.get('depth') || 1;\nvar height=global.get('height') || 1;\n\nvar origoX=global.get('origoX') || 1;\nvar origoY=global.get('origoY') || 1;\nvar origoZ=global.get('origoZ') || 1;\n\nvar feed=global.get('feed') || 1;\nvar timestamp=global.get('MappingActive')  || Date.now();\n\nmsg.filename = \"gcode-\" + timestamp + \"_size_\" + width + \"-\" + depth + \"-\" + height + \"_feed_\" + feed + \"_origin_\" + origoX + \"-\" + origoY + \"-\" + origoZ + \".gcode\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 160,
        "wires": [
            [
                "ff1fd2c47265d467"
            ]
        ]
    },
    {
        "id": "ea64a65fd0e2f9f2",
        "type": "function",
        "z": "892a62a4c03bf242",
        "name": "File save control",
        "func": "var active = global.get('MappingActive') || \"active\";\n\nif(active != 0){\n    msg.filename = \"values-\" + global.get('filename') || \"values.csv\";\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 680,
        "y": 740,
        "wires": [
            [
                "7341804ed9a7eeba"
            ]
        ]
    },
    {
        "id": "2fd8535d9cd67782",
        "type": "function",
        "z": "892a62a4c03bf242",
        "name": "Set Glob Pos",
        "func": "// Set position globally\nvar position = {\n    \"x\":msg.payload.WPos[0],\n    \"y\":msg.payload.WPos[1],\n    \"z\":msg.payload.WPos[2]\n}\n\nglobal.set('rig.position', position);\nreturn null;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "c8bcbf034299831f",
        "type": "csv",
        "z": "892a62a4c03bf242",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "once",
        "multi": "one",
        "ret": "\\n",
        "temp": "pos_x,pos_y,pos_z,tsp",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 530,
        "y": 700,
        "wires": [
            [
                "829fff6f5a0489e0"
            ]
        ]
    },
    {
        "id": "0257cc776d89d7f6",
        "type": "debug",
        "z": "892a62a4c03bf242",
        "name": "Position CSV",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 700,
        "wires": []
    },
    {
        "id": "02165dcd8a0d2cba",
        "type": "function",
        "z": "892a62a4c03bf242",
        "name": "Prep pos",
        "func": "var pos_x = msg.payload.WPos[0];\nvar pos_y = msg.payload.WPos[1];\nvar pos_z = msg.payload.WPos[2];\nvar tsp = msg.timestamp;\nmsg.payload = {pos_x, pos_y, pos_z, tsp};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 700,
        "wires": [
            [
                "c8bcbf034299831f"
            ]
        ]
    },
    {
        "id": "805a6cfd3a4cefe4",
        "type": "file",
        "z": "892a62a4c03bf242",
        "name": "Position file",
        "filename": "",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 850,
        "y": 700,
        "wires": [
            [
                "0257cc776d89d7f6"
            ]
        ]
    },
    {
        "id": "829fff6f5a0489e0",
        "type": "function",
        "z": "892a62a4c03bf242",
        "name": "File save control",
        "func": "var active = global.get('MappingActive') || \"active\";\n\nif(active != 0){\n    msg.filename = \"position-\" + global.get('filename') || \"position.csv\";\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 680,
        "y": 700,
        "wires": [
            [
                "805a6cfd3a4cefe4"
            ]
        ]
    },
    {
        "id": "a932ca1b0ea4ecf7",
        "type": "debug",
        "z": "892a62a4c03bf242",
        "name": "values",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 780,
        "wires": []
    },
    {
        "id": "e5908c3a413b36a8",
        "type": "debug",
        "z": "892a62a4c03bf242",
        "name": "values",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 620,
        "wires": []
    },
    {
        "id": "04c70f2aeaf02bd0",
        "type": "inject",
        "z": "892a62a4c03bf242",
        "name": "New day means new name",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 12 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 100,
        "wires": [
            [
                "eff657f7b27e166f"
            ]
        ]
    },
    {
        "id": "8365c0f9e1684368",
        "type": "inject",
        "z": "892a62a4c03bf242",
        "name": "New day means new name",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 60,
        "wires": [
            [
                "eff657f7b27e166f"
            ]
        ]
    },
    {
        "id": "1ad2e6a407d9856d",
        "type": "q-gate",
        "z": "892a62a4c03bf242",
        "name": "G-Queue",
        "controlTopic": "control",
        "defaultState": "queueing",
        "openCmd": "open",
        "closeCmd": "close",
        "toggleCmd": "toggle",
        "queueCmd": "queue",
        "defaultCmd": "default",
        "triggerCmd": "trigger",
        "flushCmd": "flush",
        "resetCmd": "reset",
        "peekCmd": "peek",
        "dropCmd": "drop",
        "statusCmd": "status",
        "maxQueueLength": "0",
        "keepNewest": false,
        "qToggle": true,
        "persist": false,
        "storeName": "memory",
        "x": 600,
        "y": 300,
        "wires": [
            [
                "b15a13cd952835bd",
                "b5729b06cb993a8f"
            ]
        ]
    },
    {
        "id": "fbfdf3d4ceb52f5e",
        "type": "parse-status",
        "z": "892a62a4c03bf242",
        "name": "parse-status",
        "x": 410,
        "y": 380,
        "wires": [
            [
                "4e86e390f209c3b9",
                "b734a9afa5c6e182"
            ]
        ]
    },
    {
        "id": "bbd4c2e83799987d",
        "type": "debug",
        "z": "892a62a4c03bf242",
        "name": "Serial",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 230,
        "y": 500,
        "wires": []
    }
]


================================================
FILE: flows_cred.json
================================================
{
    "$": "2932f2cb0035e03960e6ca4764359b37m2c="
}


================================================
FILE: LICENSE
================================================
MIT License

Copyright (c) 2020 Equinor

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.



================================================
FILE: package.json
================================================
{
    "name": "node-red-project",
    "description": "A Node-RED Project",
    "version": "0.0.1",
    "private": true,
    "dependencies": {
        "node-red-contrib-queue-gate": "~1.5.5",
        "node-red-dashboard": "~3.6.5",
        "node-red-node-serialport": "~2.0.2",
        "nodes": "file:../eit-magnetic-rig/nodes"
    }
}



================================================
FILE: homing/README.md
================================================
<div align="center">

  <h1><code>wasm-pack-template</code></h1>

  <strong>A template for kick starting a Rust and WebAssembly project using <a href="https://github.com/rustwasm/wasm-pack">wasm-pack</a>.</strong>

  <p>
    <a href="https://travis-ci.org/rustwasm/wasm-pack-template"><img src="https://img.shields.io/travis/rustwasm/wasm-pack-template.svg?style=flat-square" alt="Build Status" /></a>
  </p>

  <h3>
    <a href="https://rustwasm.github.io/docs/wasm-pack/tutorials/npm-browser-packages/index.html">Tutorial</a>
    <span> | </span>
    <a href="https://discordapp.com/channels/442252698964721669/443151097398296587">Chat</a>
  </h3>

  <sub>Built with 🦀🕸 by <a href="https://rustwasm.github.io/">The Rust and WebAssembly Working Group</a></sub>
</div>

## About

[**📚 Read this template tutorial! 📚**][template-docs]

This template is designed for compiling Rust libraries into WebAssembly and
publishing the resulting package to NPM.

Be sure to check out [other `wasm-pack` tutorials online][tutorials] for other
templates and usages of `wasm-pack`.

[tutorials]: https://rustwasm.github.io/docs/wasm-pack/tutorials/index.html
[template-docs]: https://rustwasm.github.io/docs/wasm-pack/tutorials/npm-browser-packages/index.html

## 🚴 Usage

### 🐑 Use `cargo generate` to Clone this Template

[Learn more about `cargo generate` here.](https://github.com/ashleygwilliams/cargo-generate)

```
cargo generate --git https://github.com/rustwasm/wasm-pack-template.git --name my-project
cd my-project
```

### 🛠️ Build with `wasm-pack build`

```
wasm-pack build
```

### 🔬 Test in Headless Browsers with `wasm-pack test`

```
wasm-pack test --headless --firefox
```

### 🎁 Publish to NPM with `wasm-pack publish`

```
wasm-pack publish
```

## 🔋 Batteries Included

* [`wasm-bindgen`](https://github.com/rustwasm/wasm-bindgen) for communicating
  between WebAssembly and JavaScript.
* [`console_error_panic_hook`](https://github.com/rustwasm/console_error_panic_hook)
  for logging panic messages to the developer console.
* [`wee_alloc`](https://github.com/rustwasm/wee_alloc), an allocator optimized
  for small code size.



================================================
FILE: homing/Cargo.toml
================================================
[package]
name = "homing"
version = "0.1.0"
authors = ["Ole Martin Gjersvik <olgj@equinor.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2.63"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"



================================================
FILE: homing/LICENSE_APACHE
================================================
                              Apache License
                        Version 2.0, January 2004
                     http://www.apache.org/licenses/

TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION

1. Definitions.

   "License" shall mean the terms and conditions for use, reproduction,
   and distribution as defined by Sections 1 through 9 of this document.

   "Licensor" shall mean the copyright owner or entity authorized by
   the copyright owner that is granting the License.

   "Legal Entity" shall mean the union of the acting entity and all
   other entities that control, are controlled by, or are under common
   control with that entity. For the purposes of this definition,
   "control" means (i) the power, direct or indirect, to cause the
   direction or management of such entity, whether by contract or
   otherwise, or (ii) ownership of fifty percent (50%) or more of the
   outstanding shares, or (iii) beneficial ownership of such entity.

   "You" (or "Your") shall mean an individual or Legal Entity
   exercising permissions granted by this License.

   "Source" form shall mean the preferred form for making modifications,
   including but not limited to software source code, documentation
   source, and configuration files.

   "Object" form shall mean any form resulting from mechanical
   transformation or translation of a Source form, including but
   not limited to compiled object code, generated documentation,
   and conversions to other media types.

   "Work" shall mean the work of authorship, whether in Source or
   Object form, made available under the License, as indicated by a
   copyright notice that is included in or attached to the work
   (an example is provided in the Appendix below).

   "Derivative Works" shall mean any work, whether in Source or Object
   form, that is based on (or derived from) the Work and for which the
   editorial revisions, annotations, elaborations, or other modifications
   represent, as a whole, an original work of authorship. For the purposes
   of this License, Derivative Works shall not include works that remain
   separable from, or merely link (or bind by name) to the interfaces of,
   the Work and Derivative Works thereof.

   "Contribution" shall mean any work of authorship, including
   the original version of the Work and any modifications or additions
   to that Work or Derivative Works thereof, that is intentionally
   submitted to Licensor for inclusion in the Work by the copyright owner
   or by an individual or Legal Entity authorized to submit on behalf of
   the copyright owner. For the purposes of this definition, "submitted"
   means any form of electronic, verbal, or written communication sent
   to the Licensor or its representatives, including but not limited to
   communication on electronic mailing lists, source code control systems,
   and issue tracking systems that are managed by, or on behalf of, the
   Licensor for the purpose of discussing and improving the Work, but
   excluding communication that is conspicuously marked or otherwise
   designated in writing by the copyright owner as "Not a Contribution."

   "Contributor" shall mean Licensor and any individual or Legal Entity
   on behalf of whom a Contribution has been received by Licensor and
   subsequently incorporated within the Work.

2. Grant of Copyright License. Subject to the terms and conditions of
   this License, each Contributor hereby grants to You a perpetual,
   worldwide, non-exclusive, no-charge, royalty-free, irrevocable
   copyright license to reproduce, prepare Derivative Works of,
   publicly display, publicly perform, sublicense, and distribute the
   Work and such Derivative Works in Source or Object form.

3. Grant of Patent License. Subject to the terms and conditions of
   this License, each Contributor hereby grants to You a perpetual,
   worldwide, non-exclusive, no-charge, royalty-free, irrevocable
   (except as stated in this section) patent license to make, have made,
   use, offer to sell, sell, import, and otherwise transfer the Work,
   where such license applies only to those patent claims licensable
   by such Contributor that are necessarily infringed by their
   Contribution(s) alone or by combination of their Contribution(s)
   with the Work to which such Contribution(s) was submitted. If You
   institute patent litigation against any entity (including a
   cross-claim or counterclaim in a lawsuit) alleging that the Work
   or a Contribution incorporated within the Work constitutes direct
   or contributory patent infringement, then any patent licenses
   granted to You under this License for that Work shall terminate
   as of the date such litigation is filed.

4. Redistribution. You may reproduce and distribute copies of the
   Work or Derivative Works thereof in any medium, with or without
   modifications, and in Source or Object form, provided that You
   meet the following conditions:

   (a) You must give any other recipients of the Work or
       Derivative Works a copy of this License; and

   (b) You must cause any modified files to carry prominent notices
       stating that You changed the files; and

   (c) You must retain, in the Source form of any Derivative Works
       that You distribute, all copyright, patent, trademark, and
       attribution notices from the Source form of the Work,
       excluding those notices that do not pertain to any part of
       the Derivative Works; and

   (d) If the Work includes a "NOTICE" text file as part of its
       distribution, then any Derivative Works that You distribute must
       include a readable copy of the attribution notices contained
       within such NOTICE file, excluding those notices that do not
       pertain to any part of the Derivative Works, in at least one
       of the following places: within a NOTICE text file distributed
       as part of the Derivative Works; within the Source form or
       documentation, if provided along with the Derivative Works; or,
       within a display generated by the Derivative Works, if and
       wherever such third-party notices normally appear. The contents
       of the NOTICE file are for informational purposes only and
       do not modify the License. You may add Your own attribution
       notices within Derivative Works that You distribute, alongside
       or as an addendum to the NOTICE text from the Work, provided
       that such additional attribution notices cannot be construed
       as modifying the License.

   You may add Your own copyright statement to Your modifications and
   may provide additional or different license terms and conditions
   for use, reproduction, or distribution of Your modifications, or
   for any such Derivative Works as a whole, provided Your use,
   reproduction, and distribution of the Work otherwise complies with
   the conditions stated in this License.

5. Submission of Contributions. Unless You explicitly state otherwise,
   any Contribution intentionally submitted for inclusion in the Work
   by You to the Licensor shall be under the terms and conditions of
   this License, without any additional terms or conditions.
   Notwithstanding the above, nothing herein shall supersede or modify
   the terms of any separate license agreement you may have executed
   with Licensor regarding such Contributions.

6. Trademarks. This License does not grant permission to use the trade
   names, trademarks, service marks, or product names of the Licensor,
   except as required for reasonable and customary use in describing the
   origin of the Work and reproducing the content of the NOTICE file.

7. Disclaimer of Warranty. Unless required by applicable law or
   agreed to in writing, Licensor provides the Work (and each
   Contributor provides its Contributions) on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
   implied, including, without limitation, any warranties or conditions
   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
   PARTICULAR PURPOSE. You are solely responsible for determining the
   appropriateness of using or redistributing the Work and assume any
   risks associated with Your exercise of permissions under this License.

8. Limitation of Liability. In no event and under no legal theory,
   whether in tort (including negligence), contract, or otherwise,
   unless required by applicable law (such as deliberate and grossly
   negligent acts) or agreed to in writing, shall any Contributor be
   liable to You for damages, including any direct, indirect, special,
   incidental, or consequential damages of any character arising as a
   result of this License or out of the use or inability to use the
   Work (including but not limited to damages for loss of goodwill,
   work stoppage, computer failure or malfunction, or any and all
   other commercial damages or losses), even if such Contributor
   has been advised of the possibility of such damages.

9. Accepting Warranty or Additional Liability. While redistributing
   the Work or Derivative Works thereof, You may choose to offer,
   and charge a fee for, acceptance of support, warranty, indemnity,
   or other liability obligations and/or rights consistent with this
   License. However, in accepting such obligations, You may act only
   on Your own behalf and on Your sole responsibility, not on behalf
   of any other Contributor, and only if You agree to indemnify,
   defend, and hold each Contributor harmless for any liability
   incurred by, or claims asserted against, such Contributor by reason
   of your accepting any such warranty or additional liability.

END OF TERMS AND CONDITIONS



================================================
FILE: homing/LICENSE_MIT
================================================
Copyright (c) 2018 Ole Martin Gjersvik <olgj@equinor.com>

Permission is hereby granted, free of charge, to any
person obtaining a copy of this software and associated
documentation files (the "Software"), to deal in the
Software without restriction, including without
limitation the rights to use, copy, modify, merge,
publish, distribute, sublicense, and/or sell copies of
the Software, and to permit persons to whom the Software
is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice
shall be included in all copies or substantial portions
of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF
ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT
SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR
IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.



================================================
FILE: homing/.appveyor.yml
================================================
install:
  - appveyor-retry appveyor DownloadFile https://win.rustup.rs/ -FileName rustup-init.exe
  - if not defined RUSTFLAGS rustup-init.exe -y --default-host x86_64-pc-windows-msvc --default-toolchain nightly
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - rustc -V
  - cargo -V

build: false

test_script:
  - cargo test --locked



================================================
FILE: homing/.cargo-ok
================================================



================================================
FILE: homing/.gitignore
================================================
/target
**/*.rs.bk
Cargo.lock
bin/
wasm-pack.log



================================================
FILE: homing/.travis.yml
================================================
language: rust
sudo: false

cache: cargo

matrix:
  include:

  # Builds with wasm-pack.
  - rust: beta
    env: RUST_BACKTRACE=1
    addons:
      firefox: latest
      chrome: stable
    before_script:
      - (test -x $HOME/.cargo/bin/cargo-install-update || cargo install cargo-update)
      - (test -x $HOME/.cargo/bin/cargo-generate || cargo install --vers "^0.2" cargo-generate)
      - cargo install-update -a
      - curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh -s -- -f
    script:
      - cargo generate --git . --name testing
      # Having a broken Cargo.toml (in that it has curlies in fields) anywhere
      # in any of our parent dirs is problematic.
      - mv Cargo.toml Cargo.toml.tmpl
      - cd testing
      - wasm-pack build
      - wasm-pack test --chrome --firefox --headless

  # Builds on nightly.
  - rust: nightly
    env: RUST_BACKTRACE=1
    before_script:
      - (test -x $HOME/.cargo/bin/cargo-install-update || cargo install cargo-update)
      - (test -x $HOME/.cargo/bin/cargo-generate || cargo install --vers "^0.2" cargo-generate)
      - cargo install-update -a
      - rustup target add wasm32-unknown-unknown
    script:
      - cargo generate --git . --name testing
      - mv Cargo.toml Cargo.toml.tmpl
      - cd testing
      - cargo check
      - cargo check --target wasm32-unknown-unknown
      - cargo check                                 --no-default-features
      - cargo check --target wasm32-unknown-unknown --no-default-features
      - cargo check                                 --no-default-features --features console_error_panic_hook
      - cargo check --target wasm32-unknown-unknown --no-default-features --features console_error_panic_hook
      - cargo check                                 --no-default-features --features "console_error_panic_hook wee_alloc"
      - cargo check --target wasm32-unknown-unknown --no-default-features --features "console_error_panic_hook wee_alloc"

  # Builds on beta.
  - rust: beta
    env: RUST_BACKTRACE=1
    before_script:
      - (test -x $HOME/.cargo/bin/cargo-install-update || cargo install cargo-update)
      - (test -x $HOME/.cargo/bin/cargo-generate || cargo install --vers "^0.2" cargo-generate)
      - cargo install-update -a
      - rustup target add wasm32-unknown-unknown
    script:
      - cargo generate --git . --name testing
      - mv Cargo.toml Cargo.toml.tmpl
      - cd testing
      - cargo check
      - cargo check --target wasm32-unknown-unknown
      - cargo check                                 --no-default-features
      - cargo check --target wasm32-unknown-unknown --no-default-features
      - cargo check                                 --no-default-features --features console_error_panic_hook
      - cargo check --target wasm32-unknown-unknown --no-default-features --features console_error_panic_hook
      # Note: no enabling the `wee_alloc` feature here because it requires
      # nightly for now.



================================================
FILE: homing/src/lib.rs
================================================
mod utils;

use wasm_bindgen::prelude::*;

// When the `wee_alloc` feature is enabled, use `wee_alloc` as the global
// allocator.
#[cfg(feature = "wee_alloc")]
#[global_allocator]
static ALLOC: wee_alloc::WeeAlloc = wee_alloc::WeeAlloc::INIT;

#[wasm_bindgen]
pub fn crc16(msg: &[u8]) -> u16
{
    let mut crc: u16 = 0xffff;
    for byte in msg {
        crc ^= *byte as u16;
        for _ in 0..8 {
            if crc & 0x0001 != 0 {
                crc = (crc >> 1) ^ 0xa001;
            } else { 
                crc >>= 1;
            }
        }
    }

    return crc;
}



================================================
FILE: homing/src/utils.rs
================================================
pub fn set_panic_hook() {
    // When the `console_error_panic_hook` feature is enabled, we can call the
    // `set_panic_hook` function at least once during initialization, and then
    // we will get better error messages if our code ever panics.
    //
    // For more details see
    // https://github.com/rustwasm/console_error_panic_hook#readme
    #[cfg(feature = "console_error_panic_hook")]
    console_error_panic_hook::set_once();
}



================================================
FILE: homing/tests/web.rs
================================================
//! Test suite for the Web and headless browsers.

#![cfg(target_arch = "wasm32")]

extern crate wasm_bindgen_test;
use wasm_bindgen_test::*;

wasm_bindgen_test_configure!(run_in_browser);

#[wasm_bindgen_test]
fn pass() {
    assert_eq!(1 + 1, 2);
}



================================================
FILE: nodes/cli.js
================================================
const homing = require('./homing');

function main() {
    homing("192.168.1.254", 2468, (sensor) => {
        console.log(sensor);
    });
}

main();


================================================
FILE: nodes/homing.js
================================================
const net = require('net');

module.exports = function homing(ip, port, callback) {
    //let collect = collector(callback);
    messageStream(ip, port, (data) => {
        let sensor = parseAllMessage(data);
        callback(sensor)
    });
}

const ON = Buffer.from([0x01, 0x01, 0x02, 0x01, 0x05, 0x10, 0x03, 0x10, 0x01, 0x01, 0x0C, 0xBD ]);
const OFF = Buffer.from([0x01, 0x01, 0x02, 0x01, 0x05, 0x10, 0x03, 0x10, 0x01, 0x00, 0xCC, 0x7C ]);
const A = Buffer.from([0x01, 0x01, 0x01, 0x01, 0x04, 0x10, 0x03, 0x10, 0x03, 0x7C, 0x9F ]);
const B = Buffer.from([0x01, 0x01, 0x01, 0x01, 0x04, 0x10, 0x03, 0x10, 0x04, 0xBE, 0xDE ]);
const C = Buffer.from([0x01, 0x01, 0x01, 0x01, 0x04, 0x10, 0x03, 0x10, 0x05, 0x7E, 0x1F ]);
const Z = Buffer.from([0x01, 0x01, 0x01, 0x01, 0x04, 0x10, 0x03, 0x10, 0x06, 0x7F, 0x5F ]);
const ALL = Buffer.from([0x01, 0x01, 0x01, 0x01, 0x10, 0x10, 0x03, 0x10, 0x03, 0x10, 0x03, 0x10, 0x04, 0x10, 0x03, 0x10, 0x05, 0x10, 0x03, 0x10, 0x06, 0x70, 0x75]);

function* requests() {
    yield ON;
    while (true) {
        yield ALL;
    }
}

function messageStream(ip, port, callback) {
    let messages = requests();
    let socket = net.createConnection(port, ip)
    socket.on("connect", () => {
        let msg = messages.next().value;
        socket.write(new Uint8Array(msg));
    });

    socket.on("data", (data) => {
        callback(data);
        setTimeout(() => {
            let msg = messages.next().value;
            socket.write(new Uint8Array(msg));
        }, 10);
    });
}
function parseAllMessage(buffer) {
    // 00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 28 30
    // 01 02 01 01 18 10 03 10 03 A1 A2 10 03 10 04 B1 B2 10 03 10 05 C1 C2 10 03 10 06 Z1 Z2 CS CS

    if (buffer.length != 31) {
        return {}
    }

    let a = buffer.readUInt16BE(9);
    let b = buffer.readUInt16BE(15);
    let c = buffer.readUInt16BE(21);
    let z = buffer.readUInt16BE(27);

    return {
        "a": a,
        "b": b,
        "c": c,
        "z": z,
    }
}

function parseMessage(buffer) {
    let device = buffer.readUInt8(8);
    let value = buffer.readUInt16BE(9);

    let sensor = "u";
    if (device == 3) sensor = "a";
    if (device == 4) sensor = "b";
    if (device == 5) sensor = "c";
    if (device == 6) sensor = "z";
    return [sensor,value];
}

function collector(callback) {
    let packet = {}

    return (sensor) => {
        packet[sensor[0]] = sensor[1];
        if (packet.a && packet.b && packet.c && packet.z) {
            callback(packet);
            packet = {}
        }
    }
}


================================================
FILE: nodes/lower-case.html
================================================
<script type="text/javascript">
    RED.nodes.registerType('lower-case',{
        category: 'magnetic-rig',
        color: '#a6bbcf',
        defaults: {
            name: {value:""}
        },
        inputs:1,
        outputs:1,
        icon: "file.png",
        label: function() {
            return this.name||"lower-case";
        }
    });
</script>

<script type="text/html" data-template-name="lower-case">
    <div class="form-row">
        <label for="node-input-name"><i class="fa fa-tag"></i> Name</label>
        <input type="text" id="node-input-name" placeholder="Name">
    </div>
</script>

<script type="text/html" data-help-name="lower-case">
    <p>A simple node that converts the message payloads into all lower-case characters</p>
</script>


================================================
FILE: nodes/lower-case.js
================================================
module.exports = function(RED) {
    function LowerCaseNode(config) {
        RED.nodes.createNode(this,config);
        var node = this;
        node.on('input', function(msg) {
            msg.payload = msg.payload.toLowerCase();
            node.send(msg);
        });
    }
    RED.nodes.registerType("lower-case",LowerCaseNode);
}


================================================
FILE: nodes/magnetic-sensors.html
================================================
<script type="text/javascript">
    RED.nodes.registerType('magnetic-sensors',{
        category: 'magnetic-rig',
        color: '#a6bbcf',
        defaults: {
            name: {value:""}
        },
        inputs:0,
        outputs:1,
        icon: "file.png",
        label: function() {
            return this.name||"magnetic-sensors";
        }
    });
</script>

<script type="text/html" data-template-name="magnetic-sensors">
    <div class="form-row">
        <label for="node-input-name"><i class="fa fa-tag"></i> Name</label>
        <input type="text" id="node-input-name" placeholder="Name">
    </div>
</script>

<script type="text/html" data-help-name="magnetic-sensors">
    <p>Allows for the control over magnetic sensor package.</p>
    <p>
        Output ha a payload with the following properties:
        <ul>
            <li>a: number. 0-40000 with a -1 if no data is available</li>
            <li>b: number. 0-40000 with a -1 if no data is available</li>
            <li>c: number. 0-40000 with a -1 if no data is available</li>
            <li>z: number. 0-40000 with a -1 if no data is available</li>
            <li>timestamp: number. When the message was processed. Same as Date.now()</li> 
        </ul>
        A, b and c is the ring with Z being the main power coil.
    </p>
</script>


================================================
FILE: nodes/magnetic-sensors.js
================================================
const net = require('net');

const homing = require('./homing');


module.exports = function(RED) {
    function MagneticSensorsNode(config) {
        RED.nodes.createNode(this,config);
        var node = this;
        homing("192.168.1.254", 2468, (payload) => {
            payload.timestamp = Date.now();
            let msg = {"payload": payload};
            node.send(msg);
        });
    }
    RED.nodes.registerType("magnetic-sensors",MagneticSensorsNode);
}


================================================
FILE: nodes/package-lock.json
================================================
{
  "name": "nodes",
  "version": "1.0.0",
  "lockfileVersion": 3,
  "requires": true,
  "packages": {
    "": {
      "name": "nodes",
      "version": "1.0.0",
      "license": "ISC",
      "dependencies": {
        "homing": "file:homing"
      }
    },
    "homing": {
      "version": "0.1.0"
    },
    "node_modules/homing": {
      "resolved": "homing",
      "link": true
    }
  }
}



================================================
FILE: nodes/package.json
================================================
{
  "name": "nodes",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "",
  "license": "ISC",
  "node-red": {
    "nodes": {
      "lower-case": "lower-case.js",
      "parse-status": "parse-status.js",
      "magnetic-sensors": "magnetic-sensors.js"
    }
  },
  "dependencies": {
    "homing": "file:homing"
  }
}



================================================
FILE: nodes/parse-status.html
================================================
<script type="text/javascript">
    RED.nodes.registerType('parse-status',{
        category: 'magnetic-rig',
        color: '#a6bbcf',
        defaults: {
            name: {value:""}
        },
        inputs:1,
        outputs:1,
        icon: "file.png",
        label: function() {
            return this.name||"parse-status";
        }
    });
</script>

<script type="text/html" data-template-name="parse-status">
    <div class="form-row">
        <label for="node-input-name"><i class="fa fa-tag"></i> Name</label>
        <input type="text" id="node-input-name" placeholder="Name">
    </div>
</script>

<script type="text/html" data-help-name="parse-status">
    <p>Try to prase posistion data from rig.</p>
</script>


================================================
FILE: nodes/parse-status.js
================================================
module.exports = function(RED) {
    function ParseStatusNode(config) {
        RED.nodes.createNode(this,config);
        var node = this;
        node.on('input', function(msg, send, done) {
            let time = Date.now();
            let reg = /<(.*)>/g;
            for (const match of msg.payload.matchAll(reg))  {
                let body = match[1].split("|");
                let msg = {payload: {}};
                msg.timestamp = time;
                
                let status = body.shift();
                msg.payload.status = status;
                for (const item of body) {
                    let pair = item.split(":");
                    msg.payload[pair[0]] = pair[1].split(",").map(v => {
                        const num = Number(v);
                        if(isNaN(num)) {
                            return v;
                        }else {
                            return num;
                        }
                    });
                }
                send(msg)
            }

            done();
        });
    }
    RED.nodes.registerType("parse-status",ParseStatusNode);
}


================================================
FILE: nodes/Test data.txt
================================================
Turn on homing:01 01 02 01 05 10 03 10 01 01 0c bd 
Turn off homing:01 01 02 01 05 10 03 10 01 00 cc 7c
Sensor A: 01 01 01 01 04 10 03 10 03 7C 9F
Sensor B: 01 01 01 01 04 10 03 10 04 BE DE
Sensor C: 01 01 01 01 04 10 03 10 05 7E 1F
Sensor Z: 01 01 01 01 04 10 03 10 06 7F 5F

PS C:\dev\eit-magnetic-rig> cd .\nodes\
PS C:\dev\eit-magnetic-rig\nodes> node test-pri.js
connected
true
sent undefined
PS C:\dev\eit-magnetic-rig\nodes> node test-pri.js
connected
true
sent undefined
PS C:\dev\eit-magnetic-rig\nodes> node test-pri.js
    view.setUint16(11, 0xbd);
         ^

RangeError: Offset is outside the bounds of the DataView
    at firstTest (C:\dev\eit-magnetic-rig\nodes\test-pri.js:113:10)
    at Object.<anonymous> (C:\dev\eit-magnetic-rig\nodes\test-pri.js:123:1)
    at Module._compile (node:internal/modules/cjs/loader:1256:14)
    at Module.load (node:internal/modules/cjs/loader:1119:32)
    at Module._load (node:internal/modules/cjs/loader:960:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:86:12)
    at node:internal/main/run_main_module:23:47
Node.js v18.18.0
PS C:\dev\eit-magnetic-rig\nodes> node test-pri.js
connected
sent undefined
data <Buffer 01 02 02 01 05 10 03 10 01 01 fc a9>
PS C:\dev\eit-magnetic-rig\nodes> node test-pri.js
true
sent undefined
PS C:\dev\eit-magnetic-rig\nodes> node test-pri.js
connected
data <Buffer 01 02 02 01 05 10 03 10 01 01 fc a9>
PS C:\dev\eit-magnetic-rig\nodes> node test-pri.js
connected
true
PS C:\dev\eit-magnetic-rig\nodes> node test-pri.js
connected
true
sent undefined
connected
true
sent undefined
data <Buffer 01 02 02 01 05 10 03 10 01 01 fc a9>
PS C:\dev\eit-magnetic-rig\nodes> node test-pri.js
connected
true
sent undefined
PS C:\dev\eit-magnetic-rig\nodes> node test-pri.js
connected
true
sent undefined
PS C:\dev\eit-magnetic-rig\nodes> node test-pri.js
connected
true
sent undefined
PS C:\dev\eit-magnetic-rig\nodes> node test-pri.js
connected
true
sent undefined
PS C:\dev\eit-magnetic-rig\nodes> node test-pri.js
connected
true
sent undefined
data <Buffer 01 02 01 01 06 10 03 10 03 03 44 1d bb>
PS C:\dev\eit-magnetic-rig\nodes> node test-pri.js
connected
true
sent undefined
data <Buffer 01 02 01 01 06 10 03 10 04 01 e4 c4 0b>
PS C:\dev\eit-magnetic-rig\nodes> node test-pri.js
connected
true
sent undefined
data <Buffer 01 02 01 01 06 10 03 10 05 02 22 a6 da>
PS C:\dev\eit-magnetic-rig\nodes> node test-pri.js
connected
true
sent undefined
data <Buffer 01 02 01 01 06 10 03 10 06 04 15 d0 68>

Ja:
01 - Start på melding
02 - Svar på forespørsel
01 - Svar på lesekommando
01 - Alt OK
06 - Lengden på payload (ikke inkuldert Check Sum)
10 03 10 03 - TAG  til sensor A.
03 44 - Verdien til sensor A MSB (0x0344)


================================================
FILE: nodes/test-pri.js
================================================
const net = require('net');
const homing = require('homing');

const crc16 = homing.crc16;

function send(ip, message) {
    let socket = net.createConnection(2468, ip)
    socket.on("close", (hasError) => {
        console.log("close hasError:", hasError);
    });

    socket.on("connect", () => {
        console.log("connected");

        console.log(socket.write(new Uint8Array(message), function(e) {
            console.log("sent", e)
        }));
    });

    socket.on("data", (data) => {
        console.log("data", data);
    });

    socket.on("drain", () => {
        console.log("drain");
    });

    socket.on("end", () => {
        console.log("end");
    });

    socket.on("error", (error) => {
        console.log("error: ", error);
    });

    socket.on("lookup", (err, address, family, host) => {
        console.log("lookup: ", err, address, family, host);
    });

    socket.on("timeout", () => {
        console.log("timeout: ");
    });
}

function primaryTest() {
    var buffer = new ArrayBuffer(8);
    let view = new DataView(buffer);
    view.setUint8(0, 0x02); // Start of message
    view.setUint8(1, 0x00); // Address
    view.setUint8(2, 'H'.charCodeAt(0)); // Command identification
    view.setUint8(3, 'P'.charCodeAt(0));
    view.setUint8(4, 0x01); // Data Length
    view.setUint8(5, 0x01);
    console.log(buffer.slice(0,6));
    console.log(crc16(new Uint8Array(buffer.slice(0,6))));

    view.setUint16(6, crc16(new Uint8Array(buffer.slice(0,6))));

    console.log(buffer);

    send("192.168.1.253", buffer);
}

function primaryTest2() {
    var buffer = new ArrayBuffer(7);
    let view = new DataView(buffer);
    view.setUint8(0, 0x02); // Start of message
    view.setUint8(1, 0x00); // Address
    view.setUint8(2, 0x52); // Command identification
    view.setUint8(3, 0x49);
    view.setUint8(4, 0x00); // Data Length
    console.log(buffer.slice(0,5));
    console.log(crc16(new Uint8Array(buffer.slice(0,5))));

    view.setUint16(5, crc16(new Uint8Array(buffer.slice(0,5))));

    console.log(buffer);

    send("192.168.1.253", buffer);
}

function secondaryTest() {
    var buffer = new ArrayBuffer(9);
    let view = new DataView(buffer);
    view.setUint8(0, 0x02); // Start of message
    view.setUint8(1, 0x00); // Address
    view.setUint8(2, 'H'.charCodeAt(0)); // Command identification
    view.setUint8(3, 'S'.charCodeAt(0));
    view.setUint8(4, 0x02); // Data Length
    view.setUint8(5, 0x01);
    view.setUint8(6, 0x02);
    view.setUint16(7, crc16(new Uint8Array(buffer.slice(0,7))));

    console.log(buffer);

    send("192.168.2.61", buffer);
}

function firstTest() {
    var buffer = new ArrayBuffer(12);
    let view = new DataView(buffer);
    view.setUint8(0, 0x01);
    view.setUint8(1, 0x01);
    view.setUint8(2, 0x02);
    view.setUint8(3, 0x01);
    view.setUint8(4, 0x05);
    view.setUint8(5, 0x10);
    view.setUint8(6, 0x03);
    view.setUint8(7, 0x10);
    view.setUint8(8, 0x01);
    view.setUint8(9, 0x01);
    view.setUint8(10, 0x0c);
    view.setUint8(11, 0xbd);

    //Turn on homing:01 01 02 01 05 10 03 10 01 01 0c bd 

    send("192.168.1.254", buffer);
}

function homingOff() {
    var buffer = new ArrayBuffer(12);
    let view = new DataView(buffer);
    view.setUint8(0, 0x01);
    view.setUint8(1, 0x01);
    view.setUint8(2, 0x02);
    view.setUint8(3, 0x01);
    view.setUint8(4, 0x05);
    view.setUint8(5, 0x10);
    view.setUint8(6, 0x03);
    view.setUint8(7, 0x10);
    view.setUint8(8, 0x01);
    view.setUint8(9, 0x00);
    view.setUint8(10, 0xcc);
    view.setUint8(11, 0x7c);

    //Turn off homing:01 01 02 01 05 10 03 10 01 00 cc 7c

    send("192.168.1.254", buffer);
}

function SensorA() {
    var buffer = new ArrayBuffer(11);
    let view = new DataView(buffer);
    view.setUint8(0, 0x01);
    view.setUint8(1, 0x01);
    view.setUint8(2, 0x01);
    view.setUint8(3, 0x01);
    view.setUint8(4, 0x04);
    view.setUint8(5, 0x10);
    view.setUint8(6, 0x03);
    view.setUint8(7, 0x10);
    view.setUint8(8, 0x06);
    view.setUint8(9, 0x7f);
    view.setUint8(10, 0x5f);

    //Turn off homing:01 01 02 01 05 10 03 10 01 00 cc 7c

    send("192.168.1.254", buffer);
}

//primaryTest2();
//data <Buffer 02 00 68 73 09 01 03 18 01 de 01 48 00 0d 5f 80 00>
//primaryTest();
SensorA();
//homingOff();



================================================
FILE: nodes/.gitignore
================================================
node_modules


================================================
FILE: nodes/homing/README.md
================================================
<div align="center">

  <h1><code>wasm-pack-template</code></h1>

  <strong>A template for kick starting a Rust and WebAssembly project using <a href="https://github.com/rustwasm/wasm-pack">wasm-pack</a>.</strong>

  <p>
    <a href="https://travis-ci.org/rustwasm/wasm-pack-template"><img src="https://img.shields.io/travis/rustwasm/wasm-pack-template.svg?style=flat-square" alt="Build Status" /></a>
  </p>

  <h3>
    <a href="https://rustwasm.github.io/docs/wasm-pack/tutorials/npm-browser-packages/index.html">Tutorial</a>
    <span> | </span>
    <a href="https://discordapp.com/channels/442252698964721669/443151097398296587">Chat</a>
  </h3>

  <sub>Built with 🦀🕸 by <a href="https://rustwasm.github.io/">The Rust and WebAssembly Working Group</a></sub>
</div>

## About

[**📚 Read this template tutorial! 📚**][template-docs]

This template is designed for compiling Rust libraries into WebAssembly and
publishing the resulting package to NPM.

Be sure to check out [other `wasm-pack` tutorials online][tutorials] for other
templates and usages of `wasm-pack`.

[tutorials]: https://rustwasm.github.io/docs/wasm-pack/tutorials/index.html
[template-docs]: https://rustwasm.github.io/docs/wasm-pack/tutorials/npm-browser-packages/index.html

## 🚴 Usage

### 🐑 Use `cargo generate` to Clone this Template

[Learn more about `cargo generate` here.](https://github.com/ashleygwilliams/cargo-generate)

```
cargo generate --git https://github.com/rustwasm/wasm-pack-template.git --name my-project
cd my-project
```

### 🛠️ Build with `wasm-pack build`

```
wasm-pack build
```

### 🔬 Test in Headless Browsers with `wasm-pack test`

```
wasm-pack test --headless --firefox
```

### 🎁 Publish to NPM with `wasm-pack publish`

```
wasm-pack publish
```

## 🔋 Batteries Included

* [`wasm-bindgen`](https://github.com/rustwasm/wasm-bindgen) for communicating
  between WebAssembly and JavaScript.
* [`console_error_panic_hook`](https://github.com/rustwasm/console_error_panic_hook)
  for logging panic messages to the developer console.
* [`wee_alloc`](https://github.com/rustwasm/wee_alloc), an allocator optimized
  for small code size.



================================================
FILE: nodes/homing/homing.d.ts
================================================
/* tslint:disable */
/* eslint-disable */
/**
* @param {Uint8Array} msg
* @returns {number}
*/
export function crc16(msg: Uint8Array): number;



================================================
FILE: nodes/homing/homing.js
================================================
let imports = {};
let wasm;

let cachegetUint8Memory0 = null;
function getUint8Memory0() {
    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {
        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);
    }
    return cachegetUint8Memory0;
}

let WASM_VECTOR_LEN = 0;

function passArray8ToWasm0(arg, malloc) {
    const ptr = malloc(arg.length * 1);
    getUint8Memory0().set(arg, ptr / 1);
    WASM_VECTOR_LEN = arg.length;
    return ptr;
}
/**
* @param {Uint8Array} msg
* @returns {number}
*/
module.exports.crc16 = function(msg) {
    var ptr0 = passArray8ToWasm0(msg, wasm.__wbindgen_malloc);
    var len0 = WASM_VECTOR_LEN;
    var ret = wasm.crc16(ptr0, len0);
    return ret;
};

const path = require('path').join(__dirname, 'homing_bg.wasm');
const bytes = require('fs').readFileSync(path);

const wasmModule = new WebAssembly.Module(bytes);
const wasmInstance = new WebAssembly.Instance(wasmModule, imports);
wasm = wasmInstance.exports;
module.exports.__wasm = wasm;




================================================
FILE: nodes/homing/homing_bg.js
================================================
import * as wasm from './homing_bg.wasm';

let cachegetUint8Memory0 = null;
function getUint8Memory0() {
    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {
        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);
    }
    return cachegetUint8Memory0;
}

let WASM_VECTOR_LEN = 0;

function passArray8ToWasm0(arg, malloc) {
    const ptr = malloc(arg.length * 1);
    getUint8Memory0().set(arg, ptr / 1);
    WASM_VECTOR_LEN = arg.length;
    return ptr;
}
/**
* @param {Uint8Array} msg
* @returns {number}
*/
export function crc16(msg) {
    var ptr0 = passArray8ToWasm0(msg, wasm.__wbindgen_malloc);
    var len0 = WASM_VECTOR_LEN;
    var ret = wasm.crc16(ptr0, len0);
    return ret;
}




================================================
FILE: nodes/homing/homing_bg.wasm
================================================
[Non-text file]


================================================
FILE: nodes/homing/homing_bg.wasm.d.ts
================================================
/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function crc16(a: number, b: number): number;
export function __wbindgen_malloc(a: number): number;



================================================
FILE: nodes/homing/package.json
================================================
{
  "name": "homing",
  "collaborators": [
    "Ole Martin Gjersvik <olgj@equinor.com>"
  ],
  "version": "0.1.0",
  "files": [
    "homing_bg.wasm",
    "homing.js",
    "homing_bg.js",
    "homing.d.ts"
  ],
  "main": "homing.js",
  "types": "homing.d.ts"
}

